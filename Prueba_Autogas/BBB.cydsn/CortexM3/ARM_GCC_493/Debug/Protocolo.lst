ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Protocolo.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	count_teclas1,1,1
  19              		.comm	comas1,1,1
  20              		.comm	comas2,1,1
  21              		.comm	id_coma1,1,1
  22              		.comm	id_teclado1,1,1
  23              		.comm	count_teclas2,1,1
  24              		.comm	id_coma2,1,1
  25              		.comm	id_teclado2,1,1
  26              		.comm	posx1,2,2
  27              		.comm	posy1,2,2
  28              		.comm	sizeletra1,2,2
  29              		.comm	posx2,2,2
  30              		.comm	posy2,2,2
  31              		.comm	sizeletra2,2,2
  32              		.comm	teclas1,1,1
  33              		.comm	teclas2,1,1
  34              		.comm	flujo_LCD1,1,1
  35              		.comm	flujo_LCD2,1,1
  36              		.comm	Buffer_LCD1,30,4
  37              		.comm	Buffer_LCD2,30,4
  38              		.comm	count_protector,1,1
  39              		.comm	count_protector2,1,1
  40              		.comm	count_esperaBBB,1,1
  41              		.comm	count_esperaBBB2,1,1
  42              		.comm	password_lcd,9,4
  43              		.comm	imagen_grado,2,2
  44              		.comm	prox_caso,8,4
  45              		.comm	bloqueo_LCD,3,4
  46              		.comm	id_estacion,5,4
  47              		.comm	id_venta,8,4
  48              		.comm	trama_totales,200,4
  49              		.comm	ppux10,1,1
  50              		.comm	nombre_pro1,17,4
  51              		.comm	nombre_pro2,17,4
  52              		.comm	nombre_pro3,17,4
  53              		.comm	version,4,4
  54              		.comm	lado1,93,4
  55              		.comm	lado2,93,4
  56              		.comm	nombre,33,4
  57              		.comm	nit,15,4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 2


  58              		.comm	telefono,20,4
  59              		.comm	direccion,33,4
  60              		.comm	lema1,32,4
  61              		.comm	lema2,32,4
  62              		.comm	id_logo,2,4
  63              		.comm	km,2,4
  64              		.comm	fecha,3,4
  65              		.comm	hora,2,4
  66              		.comm	rventa1,102,4
  67              		.comm	rventa2,102,4
  68              		.comm	ok_RF,1,1
  69              		.comm	ok_datosRF,1,1
  70              		.comm	rf_mod,200,4
  71              		.comm	buffer_i2c,64,4
  72              		.comm	crc_total,1,1
  73              		.comm	print1,2,4
  74              		.comm	print2,2,4
  75              		.comm	rx_timeout,1,1
  76              		.global	msn_tc
  77              		.data
  78              		.align	2
  79              		.type	msn_tc, %object
  80              		.size	msn_tc, 17
  81              	msn_tc:
  82 0000 544F5441 		.ascii	"TOTALES CORRIENTE"
  82      4C455320 
  82      434F5252 
  82      49454E54 
  82      45
  83              		.global	msn_te
  84 0011 000000   		.align	2
  85              		.type	msn_te, %object
  86              		.size	msn_te, 13
  87              	msn_te:
  88 0014 544F5441 		.ascii	"TOTALES EXTRA"
  88      4C455320 
  88      45585452 
  88      41
  89              		.global	msn_td
  90 0021 000000   		.align	2
  91              		.type	msn_td, %object
  92              		.size	msn_td, 14
  93              	msn_td:
  94 0024 544F5441 		.ascii	"TOTALES DIESEL"
  94      4C455320 
  94      44494553 
  94      454C
  95              		.global	msn_lecact
  96 0032 0000     		.align	2
  97              		.type	msn_lecact, %object
  98              		.size	msn_lecact, 15
  99              	msn_lecact:
 100 0034 4C656374 		.ascii	"Lectura Actual:"
 100      75726120 
 100      41637475 
 100      616C3A
 101              		.global	msn_lecaan
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 3


 102 0043 00       		.align	2
 103              		.type	msn_lecaan, %object
 104              		.size	msn_lecaan, 17
 105              	msn_lecaan:
 106 0044 4C656374 		.ascii	"Lectura Anterior:"
 106      75726120 
 106      416E7465 
 106      72696F72 
 106      3A
 107              		.global	msn_tventas
 108 0055 000000   		.align	2
 109              		.type	msn_tventas, %object
 110              		.size	msn_tventas, 18
 111              	msn_tventas:
 112 0058 546F7461 		.ascii	"Total de Ventas: $"
 112      6C206465 
 112      2056656E 
 112      7461733A 
 112      2024
 113 006a 0000     		.section	.text.Rx_Surtidor,"ax",%progbits
 114              		.align	2
 115              		.global	Rx_Surtidor
 116              		.thumb
 117              		.thumb_func
 118              		.type	Rx_Surtidor, %function
 119              	Rx_Surtidor:
 120              	.LFB63:
 121              		.file 1 ".\\Protocolo.c"
   1:.\Protocolo.c **** /*
   2:.\Protocolo.c **** ***************************************************************************************************
   3:.\Protocolo.c **** *                                           GRP550/700 CODE
   4:.\Protocolo.c **** 
   5:.\Protocolo.c **** *
   6:.\Protocolo.c **** *                             (c) Copyright 2013; Sistemas Insepet LTDA
   7:.\Protocolo.c **** *
   8:.\Protocolo.c **** *               All rights reserved.  Protected by international copyright laws.
   9:.\Protocolo.c **** *               Knowledge of the source code may NOT be used to develop a similar product.
  10:.\Protocolo.c **** *               Please help us continue to provide the Embedded community with the finest
  11:.\Protocolo.c **** *               software available.  Your honesty is greatly appreciated.
  12:.\Protocolo.c **** ***************************************************************************************************
  13:.\Protocolo.c **** */
  14:.\Protocolo.c **** 
  15:.\Protocolo.c **** /*
  16:.\Protocolo.c **** ***************************************************************************************************
  17:.\Protocolo.c **** *
  18:.\Protocolo.c **** *                                             GRP550/700 CODE
  19:.\Protocolo.c **** *
  20:.\Protocolo.c **** *                                             CYPRESS PSoC5LP
  21:.\Protocolo.c **** *                                                with the
  22:.\Protocolo.c **** *                                            CY8C5969AXI-LP035
  23:.\Protocolo.c **** *
  24:.\Protocolo.c **** * Filename      : Protocolo.c
  25:.\Protocolo.c **** * Version       : V1.00
  26:.\Protocolo.c **** * Programmer(s) : 
  27:.\Protocolo.c ****                   
  28:.\Protocolo.c **** ***************************************************************************************************
  29:.\Protocolo.c **** */
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 4


  30:.\Protocolo.c **** 
  31:.\Protocolo.c **** 
  32:.\Protocolo.c **** /*
  33:.\Protocolo.c **** ***************************************************************************************************
  34:.\Protocolo.c **** *                                             INCLUDE FILES
  35:.\Protocolo.c **** ***************************************************************************************************
  36:.\Protocolo.c **** */
  37:.\Protocolo.c **** #include <device.h>
  38:.\Protocolo.c **** #include "VariablesG.h"
  39:.\Protocolo.c **** #include "i2c.h"
  40:.\Protocolo.c **** #include "Print.h"
  41:.\Protocolo.c **** 
  42:.\Protocolo.c **** /*
  43:.\Protocolo.c **** ***************************************************************************************************
  44:.\Protocolo.c **** *                                            	MENSAJES
  45:.\Protocolo.c **** ***************************************************************************************************
  46:.\Protocolo.c **** */
  47:.\Protocolo.c **** uint8 rx_timeout;								//0 inicia espera  1 se cumplio el tiempo
  48:.\Protocolo.c **** uint8 msn_tc[17]="TOTALES CORRIENTE";
  49:.\Protocolo.c **** uint8 msn_te[13]="TOTALES EXTRA";
  50:.\Protocolo.c **** uint8 msn_td[14]="TOTALES DIESEL";
  51:.\Protocolo.c **** uint8 msn_lecact[15]="Lectura Actual:";
  52:.\Protocolo.c **** uint8 msn_lecaan[17]="Lectura Anterior:";
  53:.\Protocolo.c **** uint8 msn_tventas[18]="Total de Ventas: $";
  54:.\Protocolo.c **** 
  55:.\Protocolo.c **** /*
  56:.\Protocolo.c **** ***************************************************************************************************
  57:.\Protocolo.c **** *                                        CY_ISR(modo_mux)
  58:.\Protocolo.c **** *
  59:.\Protocolo.c **** * Description : 
  60:.\Protocolo.c **** *               
  61:.\Protocolo.c **** ***************************************************************************************************
  62:.\Protocolo.c **** */
  63:.\Protocolo.c **** CY_ISR(Rx_Surtidor){
 122              		.loc 1 63 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 1, uses_anonymous_args = 0
 126 0000 80B5     		push	{r7, lr}
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 7, -8
 129              		.cfi_offset 14, -4
 130 0002 00AF     		add	r7, sp, #0
 131              		.cfi_def_cfa_register 7
  64:.\Protocolo.c ****     Timer_RxSurtidor_ReadStatusRegister();
 132              		.loc 1 64 0
 133 0004 FFF7FEFF 		bl	Timer_RxSurtidor_ReadStatusRegister
  65:.\Protocolo.c **** 	rx_timeout=1;	
 134              		.loc 1 65 0
 135 0008 014B     		ldr	r3, .L2
 136 000a 0122     		movs	r2, #1
 137 000c 1A70     		strb	r2, [r3]
  66:.\Protocolo.c **** }
 138              		.loc 1 66 0
 139 000e 80BD     		pop	{r7, pc}
 140              	.L3:
 141              		.align	2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 5


 142              	.L2:
 143 0010 00000000 		.word	rx_timeout
 144              		.cfi_endproc
 145              	.LFE63:
 146              		.size	Rx_Surtidor, .-Rx_Surtidor
 147              		.section	.text.get_estado,"ax",%progbits
 148              		.align	2
 149              		.global	get_estado
 150              		.thumb
 151              		.thumb_func
 152              		.type	get_estado, %function
 153              	get_estado:
 154              	.LFB64:
  67:.\Protocolo.c **** 
  68:.\Protocolo.c **** 
  69:.\Protocolo.c **** /*
  70:.\Protocolo.c **** ***************************************************************************************************
  71:.\Protocolo.c **** *                                         ver_estado( void )
  72:.\Protocolo.c **** *
  73:.\Protocolo.c **** * Description : 
  74:.\Protocolo.c **** *               
  75:.\Protocolo.c **** *
  76:.\Protocolo.c **** * Argument(s) : none
  77:.\Protocolo.c **** *
  78:.\Protocolo.c **** * Return(s)   : none
  79:.\Protocolo.c **** *
  80:.\Protocolo.c **** * Caller(s)   : 
  81:.\Protocolo.c **** *
  82:.\Protocolo.c **** * Note(s)     : none.
  83:.\Protocolo.c **** ***************************************************************************************************
  84:.\Protocolo.c **** */
  85:.\Protocolo.c **** 
  86:.\Protocolo.c **** uint8 get_estado(uint8 dir){
 155              		.loc 1 86 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 16
 158              		@ frame_needed = 1, uses_anonymous_args = 0
 159 0000 80B5     		push	{r7, lr}
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 7, -8
 162              		.cfi_offset 14, -4
 163 0002 84B0     		sub	sp, sp, #16
 164              		.cfi_def_cfa_offset 24
 165 0004 00AF     		add	r7, sp, #0
 166              		.cfi_def_cfa_register 7
 167 0006 0346     		mov	r3, r0
 168 0008 FB71     		strb	r3, [r7, #7]
  87:.\Protocolo.c ****     uint8 estado;
  88:.\Protocolo.c ****     Surtidor_ClearRxBuffer();	
 169              		.loc 1 88 0
 170 000a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
  89:.\Protocolo.c ****     Surtidor_PutChar(dir);
 171              		.loc 1 89 0
 172 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 173 0010 1846     		mov	r0, r3
 174 0012 FFF7FEFF 		bl	Surtidor_PutChar
  90:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 6


 175              		.loc 1 90 0
 176 0016 1E48     		ldr	r0, .L9
 177 0018 FFF7FEFF 		bl	isr_1_StartEx
  91:.\Protocolo.c ****     Timer_RxSurtidor_Start();
 178              		.loc 1 91 0
 179 001c FFF7FEFF 		bl	Timer_RxSurtidor_Start
  92:.\Protocolo.c **** 	rx_timeout=0;
 180              		.loc 1 92 0
 181 0020 1C4B     		ldr	r3, .L9+4
 182 0022 0022     		movs	r2, #0
 183 0024 1A70     		strb	r2, [r3]
  93:.\Protocolo.c ****     CyDelay(10);
 184              		.loc 1 93 0
 185 0026 0A20     		movs	r0, #10
 186 0028 FFF7FEFF 		bl	CyDelay
  94:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 187              		.loc 1 94 0
 188 002c 0BE0     		b	.L5
 189              	.L7:
  95:.\Protocolo.c **** 		if(rx_timeout==1){
 190              		.loc 1 95 0
 191 002e 194B     		ldr	r3, .L9+4
 192 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 193 0032 012B     		cmp	r3, #1
 194 0034 07D1     		bne	.L5
  96:.\Protocolo.c **** 			isr_1_Stop();
 195              		.loc 1 96 0
 196 0036 FFF7FEFF 		bl	isr_1_Stop
  97:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 197              		.loc 1 97 0
 198 003a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
  98:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 199              		.loc 1 98 0
 200 003e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
  99:.\Protocolo.c **** 			return 0;
 201              		.loc 1 99 0
 202 0042 0023     		movs	r3, #0
 203 0044 20E0     		b	.L6
 204              	.L5:
  94:.\Protocolo.c **** 		if(rx_timeout==1){
 205              		.loc 1 94 0
 206 0046 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 207 004a 0346     		mov	r3, r0
 208 004c 002B     		cmp	r3, #0
 209 004e EED0     		beq	.L7
 100:.\Protocolo.c **** 		}
 101:.\Protocolo.c **** 	}
 102:.\Protocolo.c ****     estado=Surtidor_ReadRxData();
 210              		.loc 1 102 0
 211 0050 FFF7FEFF 		bl	Surtidor_ReadRxData
 212 0054 0346     		mov	r3, r0
 213 0056 FB73     		strb	r3, [r7, #15]
 103:.\Protocolo.c **** 	if((estado&0x0F)==dir){
 214              		.loc 1 103 0
 215 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 216 005a 03F00F02 		and	r2, r3, #15
 217 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 7


 218 0060 9A42     		cmp	r2, r3
 219 0062 0AD1     		bne	.L8
 104:.\Protocolo.c **** 		estado=(estado&0xF0)>>4;
 220              		.loc 1 104 0
 221 0064 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 222 0066 1B09     		lsrs	r3, r3, #4
 223 0068 FB73     		strb	r3, [r7, #15]
 105:.\Protocolo.c **** 	    Surtidor_ClearRxBuffer();
 224              		.loc 1 105 0
 225 006a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 106:.\Protocolo.c **** 		isr_1_Stop();
 226              		.loc 1 106 0
 227 006e FFF7FEFF 		bl	isr_1_Stop
 107:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();	
 228              		.loc 1 107 0
 229 0072 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 108:.\Protocolo.c **** 	    return estado;
 230              		.loc 1 108 0
 231 0076 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 232 0078 06E0     		b	.L6
 233              	.L8:
 109:.\Protocolo.c **** 	}
 110:.\Protocolo.c **** 	else{
 111:.\Protocolo.c **** 	    Surtidor_ClearRxBuffer();
 234              		.loc 1 111 0
 235 007a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 112:.\Protocolo.c **** 		isr_1_Stop();
 236              		.loc 1 112 0
 237 007e FFF7FEFF 		bl	isr_1_Stop
 113:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();	
 238              		.loc 1 113 0
 239 0082 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 114:.\Protocolo.c **** 	    return 0;	
 240              		.loc 1 114 0
 241 0086 0023     		movs	r3, #0
 242              	.L6:
 115:.\Protocolo.c **** 	}
 116:.\Protocolo.c **** }
 243              		.loc 1 116 0
 244 0088 1846     		mov	r0, r3
 245 008a 1037     		adds	r7, r7, #16
 246              		.cfi_def_cfa_offset 8
 247 008c BD46     		mov	sp, r7
 248              		.cfi_def_cfa_register 13
 249              		@ sp needed
 250 008e 80BD     		pop	{r7, pc}
 251              	.L10:
 252              		.align	2
 253              	.L9:
 254 0090 00000000 		.word	Rx_Surtidor
 255 0094 00000000 		.word	rx_timeout
 256              		.cfi_endproc
 257              	.LFE64:
 258              		.size	get_estado, .-get_estado
 259              		.section	.text.ver_pos,"ax",%progbits
 260              		.align	2
 261              		.global	ver_pos
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 8


 262              		.thumb
 263              		.thumb_func
 264              		.type	ver_pos, %function
 265              	ver_pos:
 266              	.LFB65:
 117:.\Protocolo.c **** 
 118:.\Protocolo.c **** /*
 119:.\Protocolo.c **** ***************************************************************************************************
 120:.\Protocolo.c **** *                                         ver_pos( void )
 121:.\Protocolo.c **** *
 122:.\Protocolo.c **** * Description : 
 123:.\Protocolo.c **** *               
 124:.\Protocolo.c **** *
 125:.\Protocolo.c **** * Argument(s) : none
 126:.\Protocolo.c **** *
 127:.\Protocolo.c **** * Return(s)   : none
 128:.\Protocolo.c **** *
 129:.\Protocolo.c **** * Caller(s)   : 
 130:.\Protocolo.c **** *
 131:.\Protocolo.c **** * Note(s)     : none.
 132:.\Protocolo.c **** ***************************************************************************************************
 133:.\Protocolo.c **** */
 134:.\Protocolo.c **** uint8 ver_pos (void){
 267              		.loc 1 134 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 8
 270              		@ frame_needed = 1, uses_anonymous_args = 0
 271 0000 80B5     		push	{r7, lr}
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 7, -8
 274              		.cfi_offset 14, -4
 275 0002 82B0     		sub	sp, sp, #8
 276              		.cfi_def_cfa_offset 16
 277 0004 00AF     		add	r7, sp, #0
 278              		.cfi_def_cfa_register 7
 135:.\Protocolo.c **** uint8 x;
 136:.\Protocolo.c **** lado1.dir=0xff;
 279              		.loc 1 136 0
 280 0006 244B     		ldr	r3, .L19
 281 0008 FF22     		movs	r2, #255
 282 000a 1A70     		strb	r2, [r3]
 137:.\Protocolo.c **** lado2.dir=0xff;
 283              		.loc 1 137 0
 284 000c 234B     		ldr	r3, .L19+4
 285 000e FF22     		movs	r2, #255
 286 0010 1A70     		strb	r2, [r3]
 138:.\Protocolo.c **** 	CyDelay(5);
 287              		.loc 1 138 0
 288 0012 0520     		movs	r0, #5
 289 0014 FFF7FEFF 		bl	CyDelay
 139:.\Protocolo.c ****     if(get_estado(0)!=0){
 290              		.loc 1 139 0
 291 0018 0020     		movs	r0, #0
 292 001a FFF7FEFF 		bl	get_estado
 293 001e 0346     		mov	r3, r0
 294 0020 002B     		cmp	r3, #0
 295 0022 02D0     		beq	.L12
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 9


 140:.\Protocolo.c **** 		lado2.dir=0;
 296              		.loc 1 140 0
 297 0024 1D4B     		ldr	r3, .L19+4
 298 0026 0022     		movs	r2, #0
 299 0028 1A70     		strb	r2, [r3]
 300              	.L12:
 141:.\Protocolo.c **** 	}	
 142:.\Protocolo.c ****     for(x=1;x<=15;x++){
 301              		.loc 1 142 0
 302 002a 0123     		movs	r3, #1
 303 002c FB71     		strb	r3, [r7, #7]
 304 002e 1FE0     		b	.L13
 305              	.L17:
 143:.\Protocolo.c **** 		CyDelay(5);
 306              		.loc 1 143 0
 307 0030 0520     		movs	r0, #5
 308 0032 FFF7FEFF 		bl	CyDelay
 144:.\Protocolo.c ****         if(get_estado(x)!=0){
 309              		.loc 1 144 0
 310 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 311 0038 1846     		mov	r0, r3
 312 003a FFF7FEFF 		bl	get_estado
 313 003e 0346     		mov	r3, r0
 314 0040 002B     		cmp	r3, #0
 315 0042 12D0     		beq	.L14
 145:.\Protocolo.c **** 			if(lado1.dir==0xFF){
 316              		.loc 1 145 0
 317 0044 144B     		ldr	r3, .L19
 318 0046 1B78     		ldrb	r3, [r3]
 319 0048 DBB2     		uxtb	r3, r3
 320 004a FF2B     		cmp	r3, #255
 321 004c 03D1     		bne	.L15
 146:.\Protocolo.c **** 				lado1.dir=x;
 322              		.loc 1 146 0
 323 004e 124A     		ldr	r2, .L19
 324 0050 FB79     		ldrb	r3, [r7, #7]
 325 0052 1370     		strb	r3, [r2]
 326 0054 09E0     		b	.L14
 327              	.L15:
 147:.\Protocolo.c **** 			}
 148:.\Protocolo.c **** 			else if(lado2.dir==0xFF){
 328              		.loc 1 148 0
 329 0056 114B     		ldr	r3, .L19+4
 330 0058 1B78     		ldrb	r3, [r3]
 331 005a DBB2     		uxtb	r3, r3
 332 005c FF2B     		cmp	r3, #255
 333 005e 04D1     		bne	.L14
 149:.\Protocolo.c **** 				lado2.dir=x;
 334              		.loc 1 149 0
 335 0060 0E4A     		ldr	r2, .L19+4
 336 0062 FB79     		ldrb	r3, [r7, #7]
 337 0064 1370     		strb	r3, [r2]
 150:.\Protocolo.c **** 				return 1;
 338              		.loc 1 150 0
 339 0066 0123     		movs	r3, #1
 340 0068 12E0     		b	.L16
 341              	.L14:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 10


 142:.\Protocolo.c **** 		CyDelay(5);
 342              		.loc 1 142 0 discriminator 2
 343 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 344 006c 0133     		adds	r3, r3, #1
 345 006e FB71     		strb	r3, [r7, #7]
 346              	.L13:
 142:.\Protocolo.c **** 		CyDelay(5);
 347              		.loc 1 142 0 is_stmt 0 discriminator 1
 348 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 349 0072 0F2B     		cmp	r3, #15
 350 0074 DCD9     		bls	.L17
 151:.\Protocolo.c **** 			}
 152:.\Protocolo.c **** 		}
 153:.\Protocolo.c **** 	}
 154:.\Protocolo.c **** 	if((lado1.dir!=0xFF)&&(lado2.dir!=0xFF)){
 351              		.loc 1 154 0 is_stmt 1
 352 0076 084B     		ldr	r3, .L19
 353 0078 1B78     		ldrb	r3, [r3]
 354 007a DBB2     		uxtb	r3, r3
 355 007c FF2B     		cmp	r3, #255
 356 007e 06D0     		beq	.L18
 357              		.loc 1 154 0 is_stmt 0 discriminator 1
 358 0080 064B     		ldr	r3, .L19+4
 359 0082 1B78     		ldrb	r3, [r3]
 360 0084 DBB2     		uxtb	r3, r3
 361 0086 FF2B     		cmp	r3, #255
 362 0088 01D0     		beq	.L18
 155:.\Protocolo.c **** 		return 1;
 363              		.loc 1 155 0 is_stmt 1
 364 008a 0123     		movs	r3, #1
 365 008c 00E0     		b	.L16
 366              	.L18:
 156:.\Protocolo.c **** 	}
 157:.\Protocolo.c **** 	else{
 158:.\Protocolo.c **** 		return 0;
 367              		.loc 1 158 0
 368 008e 0023     		movs	r3, #0
 369              	.L16:
 159:.\Protocolo.c **** 	}
 160:.\Protocolo.c **** }
 370              		.loc 1 160 0
 371 0090 1846     		mov	r0, r3
 372 0092 0837     		adds	r7, r7, #8
 373              		.cfi_def_cfa_offset 8
 374 0094 BD46     		mov	sp, r7
 375              		.cfi_def_cfa_register 13
 376              		@ sp needed
 377 0096 80BD     		pop	{r7, pc}
 378              	.L20:
 379              		.align	2
 380              	.L19:
 381 0098 00000000 		.word	lado1
 382 009c 00000000 		.word	lado2
 383              		.cfi_endproc
 384              	.LFE65:
 385              		.size	ver_pos, .-ver_pos
 386              		.section	.text.ver_error,"ax",%progbits
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 11


 387              		.align	2
 388              		.global	ver_error
 389              		.thumb
 390              		.thumb_func
 391              		.type	ver_error, %function
 392              	ver_error:
 393              	.LFB66:
 161:.\Protocolo.c **** 
 162:.\Protocolo.c **** /*
 163:.\Protocolo.c **** ***************************************************************************************************
 164:.\Protocolo.c **** *                                         void ver_error(uint8 val)
 165:.\Protocolo.c **** *
 166:.\Protocolo.c **** * Description : 
 167:.\Protocolo.c **** *               
 168:.\Protocolo.c **** *
 169:.\Protocolo.c **** * Argument(s) : none
 170:.\Protocolo.c **** *
 171:.\Protocolo.c **** * Return(s)   : none
 172:.\Protocolo.c **** *
 173:.\Protocolo.c **** * Caller(s)   : 
 174:.\Protocolo.c **** *
 175:.\Protocolo.c **** * Note(s)     : none.
 176:.\Protocolo.c **** ***************************************************************************************************
 177:.\Protocolo.c **** */
 178:.\Protocolo.c **** void ver_error(uint8 val){
 394              		.loc 1 178 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 16
 397              		@ frame_needed = 1, uses_anonymous_args = 0
 398 0000 80B5     		push	{r7, lr}
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 7, -8
 401              		.cfi_offset 14, -4
 402 0002 84B0     		sub	sp, sp, #16
 403              		.cfi_def_cfa_offset 24
 404 0004 00AF     		add	r7, sp, #0
 405              		.cfi_def_cfa_register 7
 406 0006 0346     		mov	r3, r0
 407 0008 FB71     		strb	r3, [r7, #7]
 179:.\Protocolo.c ****     uint8 estado;
 180:.\Protocolo.c ****     Surtidor_PutChar(val);
 408              		.loc 1 180 0
 409 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 410 000c 1846     		mov	r0, r3
 411 000e FFF7FEFF 		bl	Surtidor_PutChar
 181:.\Protocolo.c ****     CyDelay(200);
 412              		.loc 1 181 0
 413 0012 C820     		movs	r0, #200
 414 0014 FFF7FEFF 		bl	CyDelay
 182:.\Protocolo.c ****     if(Surtidor_GetRxBufferSize()>=1){
 415              		.loc 1 182 0
 416 0018 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 417 001c 0346     		mov	r3, r0
 418 001e 002B     		cmp	r3, #0
 419 0020 06D0     		beq	.L21
 183:.\Protocolo.c ****        estado=(Surtidor_ReadRxData()&0xF0)>>4;
 420              		.loc 1 183 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 12


 421 0022 FFF7FEFF 		bl	Surtidor_ReadRxData
 422 0026 0346     		mov	r3, r0
 423 0028 1B09     		lsrs	r3, r3, #4
 424 002a FB73     		strb	r3, [r7, #15]
 184:.\Protocolo.c ****        Surtidor_ClearRxBuffer();
 425              		.loc 1 184 0
 426 002c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 427              	.L21:
 185:.\Protocolo.c ****        if(estado==0){
 186:.\Protocolo.c **** 
 187:.\Protocolo.c ****        }
 188:.\Protocolo.c ****     }    
 189:.\Protocolo.c **** }
 428              		.loc 1 189 0
 429 0030 1037     		adds	r7, r7, #16
 430              		.cfi_def_cfa_offset 8
 431 0032 BD46     		mov	sp, r7
 432              		.cfi_def_cfa_register 13
 433              		@ sp needed
 434 0034 80BD     		pop	{r7, pc}
 435              		.cfi_endproc
 436              	.LFE66:
 437              		.size	ver_error, .-ver_error
 438 0036 00BF     		.section	.rodata
 439              		.align	2
 440              	.LC0:
 441 0000 FF       		.byte	-1
 442 0001 E9       		.byte	-23
 443 0002 FE       		.byte	-2
 444 0003 E0       		.byte	-32
 445 0004 E1       		.byte	-31
 446 0005 E0       		.byte	-32
 447 0006 FB       		.byte	-5
 448 0007 EE       		.byte	-18
 449 0008 F0       		.byte	-16
 450 0009 000000   		.section	.text.estado_ex,"ax",%progbits
 451              		.align	2
 452              		.global	estado_ex
 453              		.thumb
 454              		.thumb_func
 455              		.type	estado_ex, %function
 456              	estado_ex:
 457              	.LFB67:
 190:.\Protocolo.c **** 
 191:.\Protocolo.c **** /*
 192:.\Protocolo.c **** ***************************************************************************************************
 193:.\Protocolo.c **** *                                         estado_ex(uint8 val)
 194:.\Protocolo.c **** *
 195:.\Protocolo.c **** * Description : 
 196:.\Protocolo.c **** *               
 197:.\Protocolo.c **** *
 198:.\Protocolo.c **** * Argument(s) : none
 199:.\Protocolo.c **** *
 200:.\Protocolo.c **** * Return(s)   : none
 201:.\Protocolo.c **** *
 202:.\Protocolo.c **** * Caller(s)   : 
 203:.\Protocolo.c **** *
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 13


 204:.\Protocolo.c **** * Note(s)     : none.
 205:.\Protocolo.c **** ***************************************************************************************************
 206:.\Protocolo.c **** */
 207:.\Protocolo.c **** uint8 estado_ex(uint8 val){
 458              		.loc 1 207 0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 40
 461              		@ frame_needed = 1, uses_anonymous_args = 0
 462 0000 90B5     		push	{r4, r7, lr}
 463              		.cfi_def_cfa_offset 12
 464              		.cfi_offset 4, -12
 465              		.cfi_offset 7, -8
 466              		.cfi_offset 14, -4
 467 0002 8BB0     		sub	sp, sp, #44
 468              		.cfi_def_cfa_offset 56
 469 0004 00AF     		add	r7, sp, #0
 470              		.cfi_def_cfa_register 7
 471 0006 0346     		mov	r3, r0
 472 0008 FB71     		strb	r3, [r7, #7]
 208:.\Protocolo.c ****     uint8 rx_extend[19],x,comand_exten[9]={0xFF,0xE9,0xFE,0xE0,0xE1,0xE0,0xFB,0xEE,0xF0};
 473              		.loc 1 208 0
 474 000a 594A     		ldr	r2, .L41
 475 000c 07F10803 		add	r3, r7, #8
 476 0010 1068     		ldr	r0, [r2]	@ unaligned
 477 0012 5168     		ldr	r1, [r2, #4]	@ unaligned
 478 0014 03C3     		stmia	r3!, {r0, r1}
 479 0016 127A     		ldrb	r2, [r2, #8]
 480 0018 1A70     		strb	r2, [r3]
 209:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 481              		.loc 1 209 0
 482 001a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 210:.\Protocolo.c ****     Surtidor_PutChar(0x20|val);
 483              		.loc 1 210 0
 484 001e FB79     		ldrb	r3, [r7, #7]
 485 0020 43F02003 		orr	r3, r3, #32
 486 0024 DBB2     		uxtb	r3, r3
 487 0026 1846     		mov	r0, r3
 488 0028 FFF7FEFF 		bl	Surtidor_PutChar
 211:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 489              		.loc 1 211 0
 490 002c 5148     		ldr	r0, .L41+4
 491 002e FFF7FEFF 		bl	isr_1_StartEx
 212:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 492              		.loc 1 212 0
 493 0032 FFF7FEFF 		bl	Timer_RxSurtidor_Start
 213:.\Protocolo.c ****     rx_timeout=0;
 494              		.loc 1 213 0
 495 0036 504B     		ldr	r3, .L41+8
 496 0038 0022     		movs	r2, #0
 497 003a 1A70     		strb	r2, [r3]
 214:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 498              		.loc 1 214 0
 499 003c 0BE0     		b	.L24
 500              	.L26:
 215:.\Protocolo.c **** 		if(rx_timeout==1){
 501              		.loc 1 215 0
 502 003e 4E4B     		ldr	r3, .L41+8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 14


 503 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 504 0042 012B     		cmp	r3, #1
 505 0044 07D1     		bne	.L24
 216:.\Protocolo.c **** 			isr_1_Stop();
 506              		.loc 1 216 0
 507 0046 FFF7FEFF 		bl	isr_1_Stop
 217:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 508              		.loc 1 217 0
 509 004a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 218:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 510              		.loc 1 218 0
 511 004e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 219:.\Protocolo.c **** 			return 0;
 512              		.loc 1 219 0
 513 0052 0023     		movs	r3, #0
 514 0054 88E0     		b	.L39
 515              	.L24:
 214:.\Protocolo.c **** 		if(rx_timeout==1){
 516              		.loc 1 214 0
 517 0056 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 518 005a 0346     		mov	r3, r0
 519 005c 002B     		cmp	r3, #0
 520 005e EED0     		beq	.L26
 220:.\Protocolo.c **** 		}
 221:.\Protocolo.c **** 	}
 222:.\Protocolo.c **** 	isr_1_Stop();
 521              		.loc 1 222 0
 522 0060 FFF7FEFF 		bl	isr_1_Stop
 223:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();	
 523              		.loc 1 223 0
 524 0064 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 224:.\Protocolo.c ****     if(Surtidor_ReadRxData()==(0xD0|val)){
 525              		.loc 1 224 0
 526 0068 FFF7FEFF 		bl	Surtidor_ReadRxData
 527 006c 0346     		mov	r3, r0
 528 006e 1A46     		mov	r2, r3
 529 0070 FB79     		ldrb	r3, [r7, #7]
 530 0072 63F02F03 		orn	r3, r3, #47
 531 0076 DBB2     		uxtb	r3, r3
 532 0078 9A42     		cmp	r2, r3
 533 007a 74D1     		bne	.L27
 225:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 534              		.loc 1 225 0
 535 007c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 226:.\Protocolo.c **** 		CyDelay(5);
 536              		.loc 1 226 0
 537 0080 0520     		movs	r0, #5
 538 0082 FFF7FEFF 		bl	CyDelay
 227:.\Protocolo.c ****         for(x=0;x<=8;x++){
 539              		.loc 1 227 0
 540 0086 0023     		movs	r3, #0
 541 0088 87F82730 		strb	r3, [r7, #39]
 542 008c 0EE0     		b	.L28
 543              	.L29:
 228:.\Protocolo.c ****            Surtidor_PutChar(comand_exten[x]); 
 544              		.loc 1 228 0 discriminator 3
 545 008e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 15


 546 0092 07F12802 		add	r2, r7, #40
 547 0096 1344     		add	r3, r3, r2
 548 0098 13F8203C 		ldrb	r3, [r3, #-32]	@ zero_extendqisi2
 549 009c 1846     		mov	r0, r3
 550 009e FFF7FEFF 		bl	Surtidor_PutChar
 227:.\Protocolo.c ****         for(x=0;x<=8;x++){
 551              		.loc 1 227 0 discriminator 3
 552 00a2 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 553 00a6 0133     		adds	r3, r3, #1
 554 00a8 87F82730 		strb	r3, [r7, #39]
 555              	.L28:
 227:.\Protocolo.c ****         for(x=0;x<=8;x++){
 556              		.loc 1 227 0 is_stmt 0 discriminator 1
 557 00ac 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 558 00b0 082B     		cmp	r3, #8
 559 00b2 ECD9     		bls	.L29
 229:.\Protocolo.c ****         }
 230:.\Protocolo.c **** 		isr_1_StartEx(Rx_Surtidor);
 560              		.loc 1 230 0 is_stmt 1
 561 00b4 2F48     		ldr	r0, .L41+4
 562 00b6 FFF7FEFF 		bl	isr_1_StartEx
 231:.\Protocolo.c **** 	    Timer_RxSurtidor_Start();	
 563              		.loc 1 231 0
 564 00ba FFF7FEFF 		bl	Timer_RxSurtidor_Start
 232:.\Protocolo.c **** 	    rx_timeout=0;
 565              		.loc 1 232 0
 566 00be 2E4B     		ldr	r3, .L41+8
 567 00c0 0022     		movs	r2, #0
 568 00c2 1A70     		strb	r2, [r3]
 233:.\Protocolo.c **** 		while(Surtidor_GetRxBufferSize()!=19){
 569              		.loc 1 233 0
 570 00c4 0BE0     		b	.L30
 571              	.L31:
 234:.\Protocolo.c **** 			if(rx_timeout==1){
 572              		.loc 1 234 0
 573 00c6 2C4B     		ldr	r3, .L41+8
 574 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 575 00ca 012B     		cmp	r3, #1
 576 00cc 07D1     		bne	.L30
 235:.\Protocolo.c **** 				isr_1_Stop();
 577              		.loc 1 235 0
 578 00ce FFF7FEFF 		bl	isr_1_Stop
 236:.\Protocolo.c **** 				Timer_RxSurtidor_Stop();
 579              		.loc 1 236 0
 580 00d2 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 237:.\Protocolo.c **** 	    		Surtidor_ClearRxBuffer();			
 581              		.loc 1 237 0
 582 00d6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 238:.\Protocolo.c **** 				return 0;
 583              		.loc 1 238 0
 584 00da 0023     		movs	r3, #0
 585 00dc 44E0     		b	.L39
 586              	.L30:
 233:.\Protocolo.c **** 			if(rx_timeout==1){
 587              		.loc 1 233 0
 588 00de FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 589 00e2 0346     		mov	r3, r0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 16


 590 00e4 132B     		cmp	r3, #19
 591 00e6 EED1     		bne	.L31
 239:.\Protocolo.c **** 			}
 240:.\Protocolo.c **** 		}       
 241:.\Protocolo.c **** 		isr_1_Stop();
 592              		.loc 1 241 0
 593 00e8 FFF7FEFF 		bl	isr_1_Stop
 242:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();		
 594              		.loc 1 242 0
 595 00ec FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 243:.\Protocolo.c ****         for(x=0;x<=18;x++){
 596              		.loc 1 243 0
 597 00f0 0023     		movs	r3, #0
 598 00f2 87F82730 		strb	r3, [r7, #39]
 599 00f6 0FE0     		b	.L32
 600              	.L33:
 244:.\Protocolo.c ****            rx_extend[x]=Surtidor_ReadRxData(); 
 601              		.loc 1 244 0 discriminator 3
 602 00f8 97F82740 		ldrb	r4, [r7, #39]	@ zero_extendqisi2
 603 00fc FFF7FEFF 		bl	Surtidor_ReadRxData
 604 0100 0346     		mov	r3, r0
 605 0102 1A46     		mov	r2, r3
 606 0104 07F12803 		add	r3, r7, #40
 607 0108 2344     		add	r3, r3, r4
 608 010a 03F8142C 		strb	r2, [r3, #-20]
 243:.\Protocolo.c ****         for(x=0;x<=18;x++){
 609              		.loc 1 243 0 discriminator 3
 610 010e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 611 0112 0133     		adds	r3, r3, #1
 612 0114 87F82730 		strb	r3, [r7, #39]
 613              	.L32:
 243:.\Protocolo.c ****         for(x=0;x<=18;x++){
 614              		.loc 1 243 0 is_stmt 0 discriminator 1
 615 0118 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 616 011c 122B     		cmp	r3, #18
 617 011e EBD9     		bls	.L33
 245:.\Protocolo.c ****         }
 246:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 618              		.loc 1 246 0 is_stmt 1
 619 0120 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 247:.\Protocolo.c ****         if((rx_extend[0]==0xBA)&&(rx_extend[17]==0x8D)&&(rx_extend[18]==0x8A)&&(rx_extend[12]==0xB1
 620              		.loc 1 247 0
 621 0124 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 622 0126 BA2B     		cmp	r3, #186
 623 0128 1BD1     		bne	.L34
 624              		.loc 1 247 0 is_stmt 0 discriminator 1
 625 012a 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 626 012e 8D2B     		cmp	r3, #141
 627 0130 17D1     		bne	.L34
 628              		.loc 1 247 0 discriminator 2
 629 0132 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 630 0136 8A2B     		cmp	r3, #138
 631 0138 13D1     		bne	.L34
 632              		.loc 1 247 0 discriminator 3
 633 013a 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 634 013e B12B     		cmp	r3, #177
 635 0140 0FD1     		bne	.L34
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 17


 248:.\Protocolo.c ****             switch(rx_extend[14]){
 636              		.loc 1 248 0 is_stmt 1
 637 0142 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 638 0146 B22B     		cmp	r3, #178
 639 0148 05D0     		beq	.L36
 640 014a B32B     		cmp	r3, #179
 641 014c 05D0     		beq	.L37
 642 014e B12B     		cmp	r3, #177
 643 0150 05D1     		bne	.L40
 249:.\Protocolo.c ****                 case 0xB1:
 250:.\Protocolo.c ****                     return 1;
 644              		.loc 1 250 0
 645 0152 0123     		movs	r3, #1
 646 0154 08E0     		b	.L39
 647              	.L36:
 251:.\Protocolo.c ****                 break;
 252:.\Protocolo.c ****                 case 0xB2:
 253:.\Protocolo.c ****                     return 2;
 648              		.loc 1 253 0
 649 0156 0223     		movs	r3, #2
 650 0158 06E0     		b	.L39
 651              	.L37:
 254:.\Protocolo.c ****                 break;
 255:.\Protocolo.c ****                 case 0xB3:
 256:.\Protocolo.c ****                     return 3;
 652              		.loc 1 256 0
 653 015a 0323     		movs	r3, #3
 654 015c 04E0     		b	.L39
 655              	.L40:
 257:.\Protocolo.c ****                 break;
 258:.\Protocolo.c ****                 default:
 259:.\Protocolo.c ****                 	return 0;
 656              		.loc 1 259 0
 657 015e 0023     		movs	r3, #0
 658 0160 02E0     		b	.L39
 659              	.L34:
 260:.\Protocolo.c **** 				break;
 261:.\Protocolo.c ****             }
 262:.\Protocolo.c ****         }
 263:.\Protocolo.c ****         else{
 264:.\Protocolo.c ****             return 0;
 660              		.loc 1 264 0
 661 0162 0023     		movs	r3, #0
 662 0164 00E0     		b	.L39
 663              	.L27:
 265:.\Protocolo.c ****         }
 266:.\Protocolo.c ****     }
 267:.\Protocolo.c ****     else{
 268:.\Protocolo.c ****         return 0;
 664              		.loc 1 268 0
 665 0166 0023     		movs	r3, #0
 666              	.L39:
 269:.\Protocolo.c ****     }
 270:.\Protocolo.c **** }
 667              		.loc 1 270 0
 668 0168 1846     		mov	r0, r3
 669 016a 2C37     		adds	r7, r7, #44
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 18


 670              		.cfi_def_cfa_offset 12
 671 016c BD46     		mov	sp, r7
 672              		.cfi_def_cfa_register 13
 673              		@ sp needed
 674 016e 90BD     		pop	{r4, r7, pc}
 675              	.L42:
 676              		.align	2
 677              	.L41:
 678 0170 00000000 		.word	.LC0
 679 0174 00000000 		.word	Rx_Surtidor
 680 0178 00000000 		.word	rx_timeout
 681              		.cfi_endproc
 682              	.LFE67:
 683              		.size	estado_ex, .-estado_ex
 684              		.section	.text.detener,"ax",%progbits
 685              		.align	2
 686              		.global	detener
 687              		.thumb
 688              		.thumb_func
 689              		.type	detener, %function
 690              	detener:
 691              	.LFB68:
 271:.\Protocolo.c **** 
 272:.\Protocolo.c **** /*
 273:.\Protocolo.c **** ***************************************************************************************************
 274:.\Protocolo.c **** *                                         void detener(uint8 val)
 275:.\Protocolo.c **** *
 276:.\Protocolo.c **** * Description : 
 277:.\Protocolo.c **** *               
 278:.\Protocolo.c **** *
 279:.\Protocolo.c **** * Argument(s) : none
 280:.\Protocolo.c **** *
 281:.\Protocolo.c **** * Return(s)   : none
 282:.\Protocolo.c **** *
 283:.\Protocolo.c **** * Caller(s)   : 
 284:.\Protocolo.c **** *
 285:.\Protocolo.c **** * Note(s)     : none.
 286:.\Protocolo.c **** ***************************************************************************************************
 287:.\Protocolo.c **** */
 288:.\Protocolo.c **** void detener(uint8 val){
 692              		.loc 1 288 0
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 8
 695              		@ frame_needed = 1, uses_anonymous_args = 0
 696 0000 80B5     		push	{r7, lr}
 697              		.cfi_def_cfa_offset 8
 698              		.cfi_offset 7, -8
 699              		.cfi_offset 14, -4
 700 0002 82B0     		sub	sp, sp, #8
 701              		.cfi_def_cfa_offset 16
 702 0004 00AF     		add	r7, sp, #0
 703              		.cfi_def_cfa_register 7
 704 0006 0346     		mov	r3, r0
 705 0008 FB71     		strb	r3, [r7, #7]
 289:.\Protocolo.c ****     Surtidor_PutChar(0x30|val);
 706              		.loc 1 289 0
 707 000a FB79     		ldrb	r3, [r7, #7]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 19


 708 000c 43F03003 		orr	r3, r3, #48
 709 0010 DBB2     		uxtb	r3, r3
 710 0012 1846     		mov	r0, r3
 711 0014 FFF7FEFF 		bl	Surtidor_PutChar
 290:.\Protocolo.c ****     CyDelay(200);
 712              		.loc 1 290 0
 713 0018 C820     		movs	r0, #200
 714 001a FFF7FEFF 		bl	CyDelay
 291:.\Protocolo.c **** }
 715              		.loc 1 291 0
 716 001e 0837     		adds	r7, r7, #8
 717              		.cfi_def_cfa_offset 8
 718 0020 BD46     		mov	sp, r7
 719              		.cfi_def_cfa_register 13
 720              		@ sp needed
 721 0022 80BD     		pop	{r7, pc}
 722              		.cfi_endproc
 723              	.LFE68:
 724              		.size	detener, .-detener
 725              		.section	.text.venta,"ax",%progbits
 726              		.align	2
 727              		.global	venta
 728              		.thumb
 729              		.thumb_func
 730              		.type	venta, %function
 731              	venta:
 732              	.LFB69:
 292:.\Protocolo.c **** 
 293:.\Protocolo.c **** /*
 294:.\Protocolo.c **** ***************************************************************************************************
 295:.\Protocolo.c **** *                                         void venta(uint8 val)
 296:.\Protocolo.c **** *
 297:.\Protocolo.c **** * Description : 
 298:.\Protocolo.c **** *               
 299:.\Protocolo.c **** *
 300:.\Protocolo.c **** * Argument(s) : none
 301:.\Protocolo.c **** *
 302:.\Protocolo.c **** * Return(s)   : none
 303:.\Protocolo.c **** *
 304:.\Protocolo.c **** * Caller(s)   : 
 305:.\Protocolo.c **** *
 306:.\Protocolo.c **** * Note(s)     : none.
 307:.\Protocolo.c **** ***************************************************************************************************
 308:.\Protocolo.c **** */
 309:.\Protocolo.c **** uint8 venta(uint8 dir){
 733              		.loc 1 309 0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 16
 736              		@ frame_needed = 1, uses_anonymous_args = 0
 737 0000 80B5     		push	{r7, lr}
 738              		.cfi_def_cfa_offset 8
 739              		.cfi_offset 7, -8
 740              		.cfi_offset 14, -4
 741 0002 84B0     		sub	sp, sp, #16
 742              		.cfi_def_cfa_offset 24
 743 0004 00AF     		add	r7, sp, #0
 744              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 20


 745 0006 0346     		mov	r3, r0
 746 0008 FB71     		strb	r3, [r7, #7]
 310:.\Protocolo.c **** 	uint8 x;
 311:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 747              		.loc 1 311 0
 748 000a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 312:.\Protocolo.c **** 	Surtidor_PutChar(0x40|dir);
 749              		.loc 1 312 0
 750 000e FB79     		ldrb	r3, [r7, #7]
 751 0010 43F04003 		orr	r3, r3, #64
 752 0014 DBB2     		uxtb	r3, r3
 753 0016 1846     		mov	r0, r3
 754 0018 FFF7FEFF 		bl	Surtidor_PutChar
 313:.\Protocolo.c ****     CyDelay(300);
 755              		.loc 1 313 0
 756 001c 4FF49670 		mov	r0, #300
 757 0020 FFF7FEFF 		bl	CyDelay
 314:.\Protocolo.c **** 	if((version[1]!=7)&&(Surtidor_GetRxBufferSize()==33)){
 758              		.loc 1 314 0
 759 0024 AB4B     		ldr	r3, .L78
 760 0026 5B78     		ldrb	r3, [r3, #1]
 761 0028 DBB2     		uxtb	r3, r3
 762 002a 072B     		cmp	r3, #7
 763 002c 00F0BC80 		beq	.L45
 764              		.loc 1 314 0 is_stmt 0 discriminator 1
 765 0030 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 766 0034 0346     		mov	r3, r0
 767 0036 212B     		cmp	r3, #33
 768 0038 40F0B680 		bne	.L45
 315:.\Protocolo.c **** 		if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[2]==0xF8)&&(Surtidor_rxBuffer[32]==0xF0)){
 769              		.loc 1 315 0 is_stmt 1
 770 003c A64B     		ldr	r3, .L78+4
 771 003e 1B78     		ldrb	r3, [r3]
 772 0040 DBB2     		uxtb	r3, r3
 773 0042 FF2B     		cmp	r3, #255
 774 0044 40F0AE80 		bne	.L46
 775              		.loc 1 315 0 is_stmt 0 discriminator 1
 776 0048 A34B     		ldr	r3, .L78+4
 777 004a 9B78     		ldrb	r3, [r3, #2]
 778 004c DBB2     		uxtb	r3, r3
 779 004e F82B     		cmp	r3, #248
 780 0050 40F0A880 		bne	.L46
 781              		.loc 1 315 0 discriminator 2
 782 0054 A04B     		ldr	r3, .L78+4
 783 0056 93F82030 		ldrb	r3, [r3, #32]
 784 005a DBB2     		uxtb	r3, r3
 785 005c F02B     		cmp	r3, #240
 786 005e 40F0A180 		bne	.L46
 316:.\Protocolo.c **** 			if(dir==lado1.dir){
 787              		.loc 1 316 0 is_stmt 1
 788 0062 9E4B     		ldr	r3, .L78+8
 789 0064 1B78     		ldrb	r3, [r3]
 790 0066 DBB2     		uxtb	r3, r3
 791 0068 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 792 006a 9A42     		cmp	r2, r3
 793 006c 4CD1     		bne	.L47
 317:.\Protocolo.c **** 				rventa1.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 21


 794              		.loc 1 317 0
 795 006e 9A4B     		ldr	r3, .L78+4
 796 0070 5B7A     		ldrb	r3, [r3, #9]
 797 0072 DBB2     		uxtb	r3, r3
 798 0074 03F00F03 		and	r3, r3, #15
 799 0078 DBB2     		uxtb	r3, r3
 800 007a 0133     		adds	r3, r3, #1
 801 007c DAB2     		uxtb	r2, r3
 802 007e 984B     		ldr	r3, .L78+12
 803 0080 5A76     		strb	r2, [r3, #25]
 318:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 804              		.loc 1 318 0
 805 0082 0023     		movs	r3, #0
 806 0084 FB73     		strb	r3, [r7, #15]
 807 0086 0FE0     		b	.L48
 808              	.L49:
 319:.\Protocolo.c **** 					rventa1.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 809              		.loc 1 319 0 discriminator 3
 810 0088 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 811 008a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 812 008c 0C32     		adds	r2, r2, #12
 813 008e 9249     		ldr	r1, .L78+4
 814 0090 8A5C     		ldrb	r2, [r1, r2]
 815 0092 D2B2     		uxtb	r2, r2
 816 0094 02F00F02 		and	r2, r2, #15
 817 0098 D1B2     		uxtb	r1, r2
 818 009a 914A     		ldr	r2, .L78+12
 819 009c 1344     		add	r3, r3, r2
 820 009e 0A46     		mov	r2, r1
 821 00a0 9A70     		strb	r2, [r3, #2]
 318:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 822              		.loc 1 318 0 discriminator 3
 823 00a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 824 00a4 0133     		adds	r3, r3, #1
 825 00a6 FB73     		strb	r3, [r7, #15]
 826              	.L48:
 318:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 827              		.loc 1 318 0 is_stmt 0 discriminator 1
 828 00a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 829 00aa 032B     		cmp	r3, #3
 830 00ac ECD9     		bls	.L49
 320:.\Protocolo.c **** 				}
 321:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 831              		.loc 1 321 0 is_stmt 1
 832 00ae 0023     		movs	r3, #0
 833 00b0 FB73     		strb	r3, [r7, #15]
 834 00b2 0FE0     		b	.L50
 835              	.L51:
 322:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 836              		.loc 1 322 0 discriminator 3
 837 00b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 838 00b6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 839 00b8 1132     		adds	r2, r2, #17
 840 00ba 8749     		ldr	r1, .L78+4
 841 00bc 8A5C     		ldrb	r2, [r1, r2]
 842 00be D2B2     		uxtb	r2, r2
 843 00c0 02F00F02 		and	r2, r2, #15
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 22


 844 00c4 D1B2     		uxtb	r1, r2
 845 00c6 864A     		ldr	r2, .L78+12
 846 00c8 1344     		add	r3, r3, r2
 847 00ca 0A46     		mov	r2, r1
 848 00cc 1A74     		strb	r2, [r3, #16]
 321:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 849              		.loc 1 321 0 discriminator 3
 850 00ce FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 851 00d0 0133     		adds	r3, r3, #1
 852 00d2 FB73     		strb	r3, [r7, #15]
 853              	.L50:
 321:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 854              		.loc 1 321 0 is_stmt 0 discriminator 1
 855 00d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 856 00d6 052B     		cmp	r3, #5
 857 00d8 ECD9     		bls	.L51
 323:.\Protocolo.c **** 				}			
 324:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 858              		.loc 1 324 0 is_stmt 1
 859 00da 0023     		movs	r3, #0
 860 00dc FB73     		strb	r3, [r7, #15]
 861 00de 0FE0     		b	.L52
 862              	.L53:
 325:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 863              		.loc 1 325 0 discriminator 3
 864 00e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 865 00e2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 866 00e4 1832     		adds	r2, r2, #24
 867 00e6 7C49     		ldr	r1, .L78+4
 868 00e8 8A5C     		ldrb	r2, [r1, r2]
 869 00ea D2B2     		uxtb	r2, r2
 870 00ec 02F00F02 		and	r2, r2, #15
 871 00f0 D1B2     		uxtb	r1, r2
 872 00f2 7B4A     		ldr	r2, .L78+12
 873 00f4 1344     		add	r3, r3, r2
 874 00f6 0A46     		mov	r2, r1
 875 00f8 DA71     		strb	r2, [r3, #7]
 324:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 876              		.loc 1 324 0 discriminator 3
 877 00fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 878 00fc 0133     		adds	r3, r3, #1
 879 00fe FB73     		strb	r3, [r7, #15]
 880              	.L52:
 324:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 881              		.loc 1 324 0 is_stmt 0 discriminator 1
 882 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 883 0102 052B     		cmp	r3, #5
 884 0104 ECD9     		bls	.L53
 885 0106 4BE0     		b	.L54
 886              	.L47:
 326:.\Protocolo.c **** 				}
 327:.\Protocolo.c **** 			}
 328:.\Protocolo.c **** 			else{
 329:.\Protocolo.c **** 				rventa2.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 887              		.loc 1 329 0 is_stmt 1
 888 0108 734B     		ldr	r3, .L78+4
 889 010a 5B7A     		ldrb	r3, [r3, #9]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 23


 890 010c DBB2     		uxtb	r3, r3
 891 010e 03F00F03 		and	r3, r3, #15
 892 0112 DBB2     		uxtb	r3, r3
 893 0114 0133     		adds	r3, r3, #1
 894 0116 DAB2     		uxtb	r2, r3
 895 0118 724B     		ldr	r3, .L78+16
 896 011a 5A76     		strb	r2, [r3, #25]
 330:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 897              		.loc 1 330 0
 898 011c 0023     		movs	r3, #0
 899 011e FB73     		strb	r3, [r7, #15]
 900 0120 0FE0     		b	.L55
 901              	.L56:
 331:.\Protocolo.c **** 					rventa2.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 902              		.loc 1 331 0 discriminator 3
 903 0122 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 904 0124 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 905 0126 0C32     		adds	r2, r2, #12
 906 0128 6B49     		ldr	r1, .L78+4
 907 012a 8A5C     		ldrb	r2, [r1, r2]
 908 012c D2B2     		uxtb	r2, r2
 909 012e 02F00F02 		and	r2, r2, #15
 910 0132 D1B2     		uxtb	r1, r2
 911 0134 6B4A     		ldr	r2, .L78+16
 912 0136 1344     		add	r3, r3, r2
 913 0138 0A46     		mov	r2, r1
 914 013a 9A70     		strb	r2, [r3, #2]
 330:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 915              		.loc 1 330 0 discriminator 3
 916 013c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 917 013e 0133     		adds	r3, r3, #1
 918 0140 FB73     		strb	r3, [r7, #15]
 919              	.L55:
 330:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 920              		.loc 1 330 0 is_stmt 0 discriminator 1
 921 0142 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 922 0144 032B     		cmp	r3, #3
 923 0146 ECD9     		bls	.L56
 332:.\Protocolo.c **** 				}
 333:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 924              		.loc 1 333 0 is_stmt 1
 925 0148 0023     		movs	r3, #0
 926 014a FB73     		strb	r3, [r7, #15]
 927 014c 0FE0     		b	.L57
 928              	.L58:
 334:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 929              		.loc 1 334 0 discriminator 3
 930 014e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 931 0150 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 932 0152 1132     		adds	r2, r2, #17
 933 0154 6049     		ldr	r1, .L78+4
 934 0156 8A5C     		ldrb	r2, [r1, r2]
 935 0158 D2B2     		uxtb	r2, r2
 936 015a 02F00F02 		and	r2, r2, #15
 937 015e D1B2     		uxtb	r1, r2
 938 0160 604A     		ldr	r2, .L78+16
 939 0162 1344     		add	r3, r3, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 24


 940 0164 0A46     		mov	r2, r1
 941 0166 1A74     		strb	r2, [r3, #16]
 333:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 942              		.loc 1 333 0 discriminator 3
 943 0168 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 944 016a 0133     		adds	r3, r3, #1
 945 016c FB73     		strb	r3, [r7, #15]
 946              	.L57:
 333:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 947              		.loc 1 333 0 is_stmt 0 discriminator 1
 948 016e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 949 0170 052B     		cmp	r3, #5
 950 0172 ECD9     		bls	.L58
 335:.\Protocolo.c **** 				}			
 336:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 951              		.loc 1 336 0 is_stmt 1
 952 0174 0023     		movs	r3, #0
 953 0176 FB73     		strb	r3, [r7, #15]
 954 0178 0FE0     		b	.L59
 955              	.L60:
 337:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 956              		.loc 1 337 0 discriminator 3
 957 017a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 958 017c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 959 017e 1832     		adds	r2, r2, #24
 960 0180 5549     		ldr	r1, .L78+4
 961 0182 8A5C     		ldrb	r2, [r1, r2]
 962 0184 D2B2     		uxtb	r2, r2
 963 0186 02F00F02 		and	r2, r2, #15
 964 018a D1B2     		uxtb	r1, r2
 965 018c 554A     		ldr	r2, .L78+16
 966 018e 1344     		add	r3, r3, r2
 967 0190 0A46     		mov	r2, r1
 968 0192 DA71     		strb	r2, [r3, #7]
 336:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 969              		.loc 1 336 0 discriminator 3
 970 0194 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 971 0196 0133     		adds	r3, r3, #1
 972 0198 FB73     		strb	r3, [r7, #15]
 973              	.L59:
 336:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 974              		.loc 1 336 0 is_stmt 0 discriminator 1
 975 019a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 976 019c 052B     		cmp	r3, #5
 977 019e ECD9     		bls	.L60
 978              	.L54:
 338:.\Protocolo.c **** 				}			
 339:.\Protocolo.c **** 			}
 340:.\Protocolo.c **** 			return 1;
 979              		.loc 1 340 0 is_stmt 1
 980 01a0 0123     		movs	r3, #1
 981 01a2 CFE0     		b	.L61
 982              	.L46:
 341:.\Protocolo.c **** 		}
 342:.\Protocolo.c **** 		else{
 343:.\Protocolo.c **** 			return 0;
 983              		.loc 1 343 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 25


 984 01a4 0023     		movs	r3, #0
 985 01a6 CDE0     		b	.L61
 986              	.L45:
 344:.\Protocolo.c **** 		}
 345:.\Protocolo.c **** 	}
 346:.\Protocolo.c **** 	else if((version[1]==7)&&(Surtidor_GetRxBufferSize()==39)){
 987              		.loc 1 346 0
 988 01a8 4A4B     		ldr	r3, .L78
 989 01aa 5B78     		ldrb	r3, [r3, #1]
 990 01ac DBB2     		uxtb	r3, r3
 991 01ae 072B     		cmp	r3, #7
 992 01b0 40F0C780 		bne	.L62
 993              		.loc 1 346 0 is_stmt 0 discriminator 1
 994 01b4 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 995 01b8 0346     		mov	r3, r0
 996 01ba 272B     		cmp	r3, #39
 997 01bc 40F0C180 		bne	.L62
 347:.\Protocolo.c **** 		if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[2]==0xF8)&&(Surtidor_rxBuffer[38]==0xF0)){
 998              		.loc 1 347 0 is_stmt 1
 999 01c0 454B     		ldr	r3, .L78+4
 1000 01c2 1B78     		ldrb	r3, [r3]
 1001 01c4 DBB2     		uxtb	r3, r3
 1002 01c6 FF2B     		cmp	r3, #255
 1003 01c8 40F0B980 		bne	.L63
 1004              		.loc 1 347 0 is_stmt 0 discriminator 1
 1005 01cc 424B     		ldr	r3, .L78+4
 1006 01ce 9B78     		ldrb	r3, [r3, #2]
 1007 01d0 DBB2     		uxtb	r3, r3
 1008 01d2 F82B     		cmp	r3, #248
 1009 01d4 40F0B380 		bne	.L63
 1010              		.loc 1 347 0 discriminator 2
 1011 01d8 3F4B     		ldr	r3, .L78+4
 1012 01da 93F82630 		ldrb	r3, [r3, #38]
 1013 01de DBB2     		uxtb	r3, r3
 1014 01e0 F02B     		cmp	r3, #240
 1015 01e2 40F0AC80 		bne	.L63
 348:.\Protocolo.c **** 			if(dir==lado1.dir){
 1016              		.loc 1 348 0 is_stmt 1
 1017 01e6 3D4B     		ldr	r3, .L78+8
 1018 01e8 1B78     		ldrb	r3, [r3]
 1019 01ea DBB2     		uxtb	r3, r3
 1020 01ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1021 01ee 9A42     		cmp	r2, r3
 1022 01f0 4CD1     		bne	.L64
 349:.\Protocolo.c **** 				rventa1.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1023              		.loc 1 349 0
 1024 01f2 394B     		ldr	r3, .L78+4
 1025 01f4 5B7A     		ldrb	r3, [r3, #9]
 1026 01f6 DBB2     		uxtb	r3, r3
 1027 01f8 03F00F03 		and	r3, r3, #15
 1028 01fc DBB2     		uxtb	r3, r3
 1029 01fe 0133     		adds	r3, r3, #1
 1030 0200 DAB2     		uxtb	r2, r3
 1031 0202 374B     		ldr	r3, .L78+12
 1032 0204 5A76     		strb	r2, [r3, #25]
 350:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1033              		.loc 1 350 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 26


 1034 0206 0023     		movs	r3, #0
 1035 0208 FB73     		strb	r3, [r7, #15]
 1036 020a 0FE0     		b	.L65
 1037              	.L66:
 351:.\Protocolo.c **** 					rventa1.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1038              		.loc 1 351 0 discriminator 3
 1039 020c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1040 020e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1041 0210 0C32     		adds	r2, r2, #12
 1042 0212 3149     		ldr	r1, .L78+4
 1043 0214 8A5C     		ldrb	r2, [r1, r2]
 1044 0216 D2B2     		uxtb	r2, r2
 1045 0218 02F00F02 		and	r2, r2, #15
 1046 021c D1B2     		uxtb	r1, r2
 1047 021e 304A     		ldr	r2, .L78+12
 1048 0220 1344     		add	r3, r3, r2
 1049 0222 0A46     		mov	r2, r1
 1050 0224 9A70     		strb	r2, [r3, #2]
 350:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1051              		.loc 1 350 0 discriminator 3
 1052 0226 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1053 0228 0133     		adds	r3, r3, #1
 1054 022a FB73     		strb	r3, [r7, #15]
 1055              	.L65:
 350:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1056              		.loc 1 350 0 is_stmt 0 discriminator 1
 1057 022c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1058 022e 052B     		cmp	r3, #5
 1059 0230 ECD9     		bls	.L66
 352:.\Protocolo.c **** 				}
 353:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1060              		.loc 1 353 0 is_stmt 1
 1061 0232 0023     		movs	r3, #0
 1062 0234 FB73     		strb	r3, [r7, #15]
 1063 0236 0FE0     		b	.L67
 1064              	.L68:
 354:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1065              		.loc 1 354 0 discriminator 3
 1066 0238 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1067 023a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1068 023c 1332     		adds	r2, r2, #19
 1069 023e 2649     		ldr	r1, .L78+4
 1070 0240 8A5C     		ldrb	r2, [r1, r2]
 1071 0242 D2B2     		uxtb	r2, r2
 1072 0244 02F00F02 		and	r2, r2, #15
 1073 0248 D1B2     		uxtb	r1, r2
 1074 024a 254A     		ldr	r2, .L78+12
 1075 024c 1344     		add	r3, r3, r2
 1076 024e 0A46     		mov	r2, r1
 1077 0250 1A74     		strb	r2, [r3, #16]
 353:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1078              		.loc 1 353 0 discriminator 3
 1079 0252 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1080 0254 0133     		adds	r3, r3, #1
 1081 0256 FB73     		strb	r3, [r7, #15]
 1082              	.L67:
 353:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 27


 1083              		.loc 1 353 0 is_stmt 0 discriminator 1
 1084 0258 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1085 025a 072B     		cmp	r3, #7
 1086 025c ECD9     		bls	.L68
 355:.\Protocolo.c **** 				}			
 356:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1087              		.loc 1 356 0 is_stmt 1
 1088 025e 0023     		movs	r3, #0
 1089 0260 FB73     		strb	r3, [r7, #15]
 1090 0262 0FE0     		b	.L69
 1091              	.L70:
 357:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1092              		.loc 1 357 0 discriminator 3
 1093 0264 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1094 0266 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1095 0268 1C32     		adds	r2, r2, #28
 1096 026a 1B49     		ldr	r1, .L78+4
 1097 026c 8A5C     		ldrb	r2, [r1, r2]
 1098 026e D2B2     		uxtb	r2, r2
 1099 0270 02F00F02 		and	r2, r2, #15
 1100 0274 D1B2     		uxtb	r1, r2
 1101 0276 1A4A     		ldr	r2, .L78+12
 1102 0278 1344     		add	r3, r3, r2
 1103 027a 0A46     		mov	r2, r1
 1104 027c DA71     		strb	r2, [r3, #7]
 356:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1105              		.loc 1 356 0 discriminator 3
 1106 027e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1107 0280 0133     		adds	r3, r3, #1
 1108 0282 FB73     		strb	r3, [r7, #15]
 1109              	.L69:
 356:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1110              		.loc 1 356 0 is_stmt 0 discriminator 1
 1111 0284 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1112 0286 072B     		cmp	r3, #7
 1113 0288 ECD9     		bls	.L70
 1114 028a 56E0     		b	.L71
 1115              	.L64:
 358:.\Protocolo.c **** 				}
 359:.\Protocolo.c **** 			}
 360:.\Protocolo.c **** 			else{
 361:.\Protocolo.c **** 				rventa2.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1116              		.loc 1 361 0 is_stmt 1
 1117 028c 124B     		ldr	r3, .L78+4
 1118 028e 5B7A     		ldrb	r3, [r3, #9]
 1119 0290 DBB2     		uxtb	r3, r3
 1120 0292 03F00F03 		and	r3, r3, #15
 1121 0296 DBB2     		uxtb	r3, r3
 1122 0298 0133     		adds	r3, r3, #1
 1123 029a DAB2     		uxtb	r2, r3
 1124 029c 114B     		ldr	r3, .L78+16
 1125 029e 5A76     		strb	r2, [r3, #25]
 362:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1126              		.loc 1 362 0
 1127 02a0 0023     		movs	r3, #0
 1128 02a2 FB73     		strb	r3, [r7, #15]
 1129 02a4 0FE0     		b	.L72
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 28


 1130              	.L73:
 363:.\Protocolo.c **** 					rventa2.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1131              		.loc 1 363 0 discriminator 3
 1132 02a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1133 02a8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1134 02aa 0C32     		adds	r2, r2, #12
 1135 02ac 0A49     		ldr	r1, .L78+4
 1136 02ae 8A5C     		ldrb	r2, [r1, r2]
 1137 02b0 D2B2     		uxtb	r2, r2
 1138 02b2 02F00F02 		and	r2, r2, #15
 1139 02b6 D1B2     		uxtb	r1, r2
 1140 02b8 0A4A     		ldr	r2, .L78+16
 1141 02ba 1344     		add	r3, r3, r2
 1142 02bc 0A46     		mov	r2, r1
 1143 02be 9A70     		strb	r2, [r3, #2]
 362:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1144              		.loc 1 362 0 discriminator 3
 1145 02c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1146 02c2 0133     		adds	r3, r3, #1
 1147 02c4 FB73     		strb	r3, [r7, #15]
 1148              	.L72:
 362:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1149              		.loc 1 362 0 is_stmt 0 discriminator 1
 1150 02c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1151 02c8 052B     		cmp	r3, #5
 1152 02ca ECD9     		bls	.L73
 364:.\Protocolo.c **** 				}
 365:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1153              		.loc 1 365 0 is_stmt 1
 1154 02cc 0023     		movs	r3, #0
 1155 02ce FB73     		strb	r3, [r7, #15]
 1156 02d0 1AE0     		b	.L74
 1157              	.L79:
 1158 02d2 00BF     		.align	2
 1159              	.L78:
 1160 02d4 00000000 		.word	version
 1161 02d8 00000000 		.word	Surtidor_rxBuffer
 1162 02dc 00000000 		.word	lado1
 1163 02e0 00000000 		.word	rventa1
 1164 02e4 00000000 		.word	rventa2
 1165              	.L75:
 366:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1166              		.loc 1 366 0 discriminator 3
 1167 02e8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1168 02ea FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1169 02ec 1332     		adds	r2, r2, #19
 1170 02ee 1749     		ldr	r1, .L80
 1171 02f0 8A5C     		ldrb	r2, [r1, r2]
 1172 02f2 D2B2     		uxtb	r2, r2
 1173 02f4 02F00F02 		and	r2, r2, #15
 1174 02f8 D1B2     		uxtb	r1, r2
 1175 02fa 154A     		ldr	r2, .L80+4
 1176 02fc 1344     		add	r3, r3, r2
 1177 02fe 0A46     		mov	r2, r1
 1178 0300 1A74     		strb	r2, [r3, #16]
 365:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1179              		.loc 1 365 0 discriminator 3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 29


 1180 0302 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1181 0304 0133     		adds	r3, r3, #1
 1182 0306 FB73     		strb	r3, [r7, #15]
 1183              	.L74:
 365:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1184              		.loc 1 365 0 is_stmt 0 discriminator 1
 1185 0308 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1186 030a 072B     		cmp	r3, #7
 1187 030c ECD9     		bls	.L75
 367:.\Protocolo.c **** 				}			
 368:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1188              		.loc 1 368 0 is_stmt 1
 1189 030e 0023     		movs	r3, #0
 1190 0310 FB73     		strb	r3, [r7, #15]
 1191 0312 0FE0     		b	.L76
 1192              	.L77:
 369:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1193              		.loc 1 369 0 discriminator 3
 1194 0314 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1195 0316 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1196 0318 1C32     		adds	r2, r2, #28
 1197 031a 0C49     		ldr	r1, .L80
 1198 031c 8A5C     		ldrb	r2, [r1, r2]
 1199 031e D2B2     		uxtb	r2, r2
 1200 0320 02F00F02 		and	r2, r2, #15
 1201 0324 D1B2     		uxtb	r1, r2
 1202 0326 0A4A     		ldr	r2, .L80+4
 1203 0328 1344     		add	r3, r3, r2
 1204 032a 0A46     		mov	r2, r1
 1205 032c DA71     		strb	r2, [r3, #7]
 368:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1206              		.loc 1 368 0 discriminator 3
 1207 032e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1208 0330 0133     		adds	r3, r3, #1
 1209 0332 FB73     		strb	r3, [r7, #15]
 1210              	.L76:
 368:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1211              		.loc 1 368 0 is_stmt 0 discriminator 1
 1212 0334 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1213 0336 072B     		cmp	r3, #7
 1214 0338 ECD9     		bls	.L77
 1215              	.L71:
 370:.\Protocolo.c **** 				}			
 371:.\Protocolo.c **** 			}
 372:.\Protocolo.c **** 			return 1;
 1216              		.loc 1 372 0 is_stmt 1
 1217 033a 0123     		movs	r3, #1
 1218 033c 02E0     		b	.L61
 1219              	.L63:
 373:.\Protocolo.c **** 		}
 374:.\Protocolo.c **** 		else{
 375:.\Protocolo.c **** 			return 0;
 1220              		.loc 1 375 0
 1221 033e 0023     		movs	r3, #0
 1222 0340 00E0     		b	.L61
 1223              	.L62:
 376:.\Protocolo.c **** 		}
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 30


 377:.\Protocolo.c **** 	}
 378:.\Protocolo.c **** 	return 0;
 1224              		.loc 1 378 0
 1225 0342 0023     		movs	r3, #0
 1226              	.L61:
 379:.\Protocolo.c **** }
 1227              		.loc 1 379 0
 1228 0344 1846     		mov	r0, r3
 1229 0346 1037     		adds	r7, r7, #16
 1230              		.cfi_def_cfa_offset 8
 1231 0348 BD46     		mov	sp, r7
 1232              		.cfi_def_cfa_register 13
 1233              		@ sp needed
 1234 034a 80BD     		pop	{r7, pc}
 1235              	.L81:
 1236              		.align	2
 1237              	.L80:
 1238 034c 00000000 		.word	Surtidor_rxBuffer
 1239 0350 00000000 		.word	rventa2
 1240              		.cfi_endproc
 1241              	.LFE69:
 1242              		.size	venta, .-venta
 1243              		.section	.text.programar,"ax",%progbits
 1244              		.align	2
 1245              		.global	programar
 1246              		.thumb
 1247              		.thumb_func
 1248              		.type	programar, %function
 1249              	programar:
 1250              	.LFB70:
 380:.\Protocolo.c **** 
 381:.\Protocolo.c **** /*
 382:.\Protocolo.c **** ***************************************************************************************************
 383:.\Protocolo.c **** *                                         uint8 programar(uint8 dir)
 384:.\Protocolo.c **** *
 385:.\Protocolo.c **** * Description : 
 386:.\Protocolo.c **** *               
 387:.\Protocolo.c **** *
 388:.\Protocolo.c **** * Argument(s) : none
 389:.\Protocolo.c **** *
 390:.\Protocolo.c **** * Return(s)   : none
 391:.\Protocolo.c **** *
 392:.\Protocolo.c **** * Caller(s)   : 
 393:.\Protocolo.c **** *
 394:.\Protocolo.c **** * Note(s)     : none.
 395:.\Protocolo.c **** ***************************************************************************************************
 396:.\Protocolo.c **** */
 397:.\Protocolo.c **** uint8 programar(uint8 dir, uint8 grado, uint8 *valor, uint8 preset){
 1251              		.loc 1 397 0
 1252              		.cfi_startproc
 1253              		@ args = 0, pretend = 0, frame = 32
 1254              		@ frame_needed = 1, uses_anonymous_args = 0
 1255 0000 80B5     		push	{r7, lr}
 1256              		.cfi_def_cfa_offset 8
 1257              		.cfi_offset 7, -8
 1258              		.cfi_offset 14, -4
 1259 0002 88B0     		sub	sp, sp, #32
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 31


 1260              		.cfi_def_cfa_offset 40
 1261 0004 00AF     		add	r7, sp, #0
 1262              		.cfi_def_cfa_register 7
 1263 0006 3A60     		str	r2, [r7]
 1264 0008 1A46     		mov	r2, r3
 1265 000a 0346     		mov	r3, r0
 1266 000c FB71     		strb	r3, [r7, #7]
 1267 000e 0B46     		mov	r3, r1
 1268 0010 BB71     		strb	r3, [r7, #6]
 1269 0012 1346     		mov	r3, r2
 1270 0014 7B71     		strb	r3, [r7, #5]
 398:.\Protocolo.c **** 	uint8 buffer[18]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},size,temp,i,decimal;
 1271              		.loc 1 398 0
 1272 0016 07F10803 		add	r3, r7, #8
 1273 001a 0022     		movs	r2, #0
 1274 001c 1A60     		str	r2, [r3]
 1275 001e 0433     		adds	r3, r3, #4
 1276 0020 0022     		movs	r2, #0
 1277 0022 1A60     		str	r2, [r3]
 1278 0024 0433     		adds	r3, r3, #4
 1279 0026 0022     		movs	r2, #0
 1280 0028 1A60     		str	r2, [r3]
 1281 002a 0433     		adds	r3, r3, #4
 1282 002c 0022     		movs	r2, #0
 1283 002e 1A60     		str	r2, [r3]
 1284 0030 0433     		adds	r3, r3, #4
 1285 0032 0022     		movs	r2, #0
 1286 0034 1A80     		strh	r2, [r3]	@ movhi
 1287 0036 0233     		adds	r3, r3, #2
 399:.\Protocolo.c **** 	temp=4;
 1288              		.loc 1 399 0
 1289 0038 0423     		movs	r3, #4
 1290 003a BB77     		strb	r3, [r7, #30]
 400:.\Protocolo.c **** 	if(preset==3){
 1291              		.loc 1 400 0
 1292 003c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1293 003e 032B     		cmp	r3, #3
 1294 0040 01D1     		bne	.L83
 401:.\Protocolo.c **** 		preset=2;
 1295              		.loc 1 401 0
 1296 0042 0223     		movs	r3, #2
 1297 0044 7B71     		strb	r3, [r7, #5]
 1298              	.L83:
 402:.\Protocolo.c **** 	}
 403:.\Protocolo.c **** 	if(((version[1]==5)||(version[1]==6))&&(preset==1)){
 1299              		.loc 1 403 0
 1300 0046 B34B     		ldr	r3, .L126
 1301 0048 5B78     		ldrb	r3, [r3, #1]
 1302 004a DBB2     		uxtb	r3, r3
 1303 004c 052B     		cmp	r3, #5
 1304 004e 04D0     		beq	.L84
 1305              		.loc 1 403 0 is_stmt 0 discriminator 2
 1306 0050 B04B     		ldr	r3, .L126
 1307 0052 5B78     		ldrb	r3, [r3, #1]
 1308 0054 DBB2     		uxtb	r3, r3
 1309 0056 062B     		cmp	r3, #6
 1310 0058 04D1     		bne	.L85
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 32


 1311              	.L84:
 1312              		.loc 1 403 0 discriminator 3
 1313 005a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1314 005c 012B     		cmp	r3, #1
 1315 005e 01D1     		bne	.L85
 404:.\Protocolo.c **** 		temp=3;
 1316              		.loc 1 404 0 is_stmt 1
 1317 0060 0323     		movs	r3, #3
 1318 0062 BB77     		strb	r3, [r7, #30]
 1319              	.L85:
 405:.\Protocolo.c **** 	}
 406:.\Protocolo.c **** 	if((version[1]==5)&&(preset==2)){
 1320              		.loc 1 406 0
 1321 0064 AB4B     		ldr	r3, .L126
 1322 0066 5B78     		ldrb	r3, [r3, #1]
 1323 0068 DBB2     		uxtb	r3, r3
 1324 006a 052B     		cmp	r3, #5
 1325 006c 04D1     		bne	.L86
 1326              		.loc 1 406 0 is_stmt 0 discriminator 1
 1327 006e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1328 0070 022B     		cmp	r3, #2
 1329 0072 01D1     		bne	.L86
 407:.\Protocolo.c **** 		temp=5;
 1330              		.loc 1 407 0 is_stmt 1
 1331 0074 0523     		movs	r3, #5
 1332 0076 BB77     		strb	r3, [r7, #30]
 1333              	.L86:
 408:.\Protocolo.c **** 	}
 409:.\Protocolo.c **** 	if((version[1]==7)&&(preset==1)){
 1334              		.loc 1 409 0
 1335 0078 A64B     		ldr	r3, .L126
 1336 007a 5B78     		ldrb	r3, [r3, #1]
 1337 007c DBB2     		uxtb	r3, r3
 1338 007e 072B     		cmp	r3, #7
 1339 0080 04D1     		bne	.L87
 1340              		.loc 1 409 0 is_stmt 0 discriminator 1
 1341 0082 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1342 0084 012B     		cmp	r3, #1
 1343 0086 01D1     		bne	.L87
 410:.\Protocolo.c **** 		temp=0;
 1344              		.loc 1 410 0 is_stmt 1
 1345 0088 0023     		movs	r3, #0
 1346 008a BB77     		strb	r3, [r7, #30]
 1347              	.L87:
 411:.\Protocolo.c **** 	}
 412:.\Protocolo.c **** 	if((version[1]==7)&&(preset==2)){
 1348              		.loc 1 412 0
 1349 008c A14B     		ldr	r3, .L126
 1350 008e 5B78     		ldrb	r3, [r3, #1]
 1351 0090 DBB2     		uxtb	r3, r3
 1352 0092 072B     		cmp	r3, #7
 1353 0094 04D1     		bne	.L88
 1354              		.loc 1 412 0 is_stmt 0 discriminator 1
 1355 0096 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1356 0098 022B     		cmp	r3, #2
 1357 009a 01D1     		bne	.L88
 413:.\Protocolo.c **** 		temp=2;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 33


 1358              		.loc 1 413 0 is_stmt 1
 1359 009c 0223     		movs	r3, #2
 1360 009e BB77     		strb	r3, [r7, #30]
 1361              	.L88:
 414:.\Protocolo.c **** 	}	
 415:.\Protocolo.c **** 	decimal=0;
 1362              		.loc 1 415 0
 1363 00a0 0023     		movs	r3, #0
 1364 00a2 3B77     		strb	r3, [r7, #28]
 416:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1365              		.loc 1 416 0
 1366 00a4 0123     		movs	r3, #1
 1367 00a6 7B77     		strb	r3, [r7, #29]
 1368 00a8 0AE0     		b	.L89
 1369              	.L91:
 417:.\Protocolo.c **** 		if(valor[i]==','){
 1370              		.loc 1 417 0
 1371 00aa 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1372 00ac 3A68     		ldr	r2, [r7]
 1373 00ae 1344     		add	r3, r3, r2
 1374 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1375 00b2 2C2B     		cmp	r3, #44
 1376 00b4 01D1     		bne	.L90
 418:.\Protocolo.c **** 			decimal=i;	
 1377              		.loc 1 418 0
 1378 00b6 7B7F     		ldrb	r3, [r7, #29]
 1379 00b8 3B77     		strb	r3, [r7, #28]
 1380              	.L90:
 416:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1381              		.loc 1 416 0 discriminator 2
 1382 00ba 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1383 00bc 0133     		adds	r3, r3, #1
 1384 00be 7B77     		strb	r3, [r7, #29]
 1385              	.L89:
 416:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1386              		.loc 1 416 0 is_stmt 0 discriminator 1
 1387 00c0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1388 00c2 072B     		cmp	r3, #7
 1389 00c4 F1D9     		bls	.L91
 419:.\Protocolo.c **** 		}
 420:.\Protocolo.c **** 	}
 421:.\Protocolo.c **** 	if(decimal>4){
 1390              		.loc 1 421 0 is_stmt 1
 1391 00c6 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1392 00c8 042B     		cmp	r3, #4
 1393 00ca 01D9     		bls	.L92
 422:.\Protocolo.c **** 		return 0;
 1394              		.loc 1 422 0
 1395 00cc 0023     		movs	r3, #0
 1396 00ce CFE3     		b	.L125
 1397              	.L92:
 423:.\Protocolo.c **** 	}
 424:.\Protocolo.c **** 	if(version[1]!=7){		
 1398              		.loc 1 424 0
 1399 00d0 904B     		ldr	r3, .L126
 1400 00d2 5B78     		ldrb	r3, [r3, #1]
 1401 00d4 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 34


 1402 00d6 072B     		cmp	r3, #7
 1403 00d8 00F00582 		beq	.L94
 425:.\Protocolo.c **** 		buffer[0]=0xFF;
 1404              		.loc 1 425 0
 1405 00dc FF23     		movs	r3, #255
 1406 00de 3B72     		strb	r3, [r7, #8]
 426:.\Protocolo.c **** 		buffer[1]=(0xE0|temp);
 1407              		.loc 1 426 0
 1408 00e0 BB7F     		ldrb	r3, [r7, #30]
 1409 00e2 63F01F03 		orn	r3, r3, #31
 1410 00e6 DBB2     		uxtb	r3, r3
 1411 00e8 7B72     		strb	r3, [r7, #9]
 427:.\Protocolo.c **** 		buffer[2]=(0xF0|preset);
 1412              		.loc 1 427 0
 1413 00ea 7B79     		ldrb	r3, [r7, #5]
 1414 00ec 63F00F03 		orn	r3, r3, #15
 1415 00f0 DBB2     		uxtb	r3, r3
 1416 00f2 BB72     		strb	r3, [r7, #10]
 428:.\Protocolo.c **** 		buffer[3]=0xF4;
 1417              		.loc 1 428 0
 1418 00f4 F423     		movs	r3, #244
 1419 00f6 FB72     		strb	r3, [r7, #11]
 429:.\Protocolo.c **** 		buffer[4]=0xF8;	
 1420              		.loc 1 429 0
 1421 00f8 F823     		movs	r3, #248
 1422 00fa 3B73     		strb	r3, [r7, #12]
 430:.\Protocolo.c **** 		buffer[5]=(valor[1]|0xE0);
 1423              		.loc 1 430 0
 1424 00fc 3B68     		ldr	r3, [r7]
 1425 00fe 0133     		adds	r3, r3, #1
 1426 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1427 0102 63F01F03 		orn	r3, r3, #31
 1428 0106 DBB2     		uxtb	r3, r3
 1429 0108 7B73     		strb	r3, [r7, #13]
 431:.\Protocolo.c **** 		buffer[6]=(valor[2]|0xE0);
 1430              		.loc 1 431 0
 1431 010a 3B68     		ldr	r3, [r7]
 1432 010c 0233     		adds	r3, r3, #2
 1433 010e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1434 0110 63F01F03 		orn	r3, r3, #31
 1435 0114 DBB2     		uxtb	r3, r3
 1436 0116 BB73     		strb	r3, [r7, #14]
 432:.\Protocolo.c **** 		buffer[7]=(valor[3]|0xE0);
 1437              		.loc 1 432 0
 1438 0118 3B68     		ldr	r3, [r7]
 1439 011a 0333     		adds	r3, r3, #3
 1440 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1441 011e 63F01F03 		orn	r3, r3, #31
 1442 0122 DBB2     		uxtb	r3, r3
 1443 0124 FB73     		strb	r3, [r7, #15]
 433:.\Protocolo.c **** 		buffer[8]=(valor[4]|0xE0);
 1444              		.loc 1 433 0
 1445 0126 3B68     		ldr	r3, [r7]
 1446 0128 0433     		adds	r3, r3, #4
 1447 012a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1448 012c 63F01F03 		orn	r3, r3, #31
 1449 0130 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 35


 1450 0132 3B74     		strb	r3, [r7, #16]
 434:.\Protocolo.c **** 		buffer[9]=(valor[5]|0xE0);
 1451              		.loc 1 434 0
 1452 0134 3B68     		ldr	r3, [r7]
 1453 0136 0533     		adds	r3, r3, #5
 1454 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1455 013a 63F01F03 		orn	r3, r3, #31
 1456 013e DBB2     		uxtb	r3, r3
 1457 0140 7B74     		strb	r3, [r7, #17]
 435:.\Protocolo.c **** 		buffer[10]=(valor[6]|0xE0);
 1458              		.loc 1 435 0
 1459 0142 3B68     		ldr	r3, [r7]
 1460 0144 0633     		adds	r3, r3, #6
 1461 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1462 0148 63F01F03 		orn	r3, r3, #31
 1463 014c DBB2     		uxtb	r3, r3
 1464 014e BB74     		strb	r3, [r7, #18]
 436:.\Protocolo.c **** 		if(version[2]==2){
 1465              		.loc 1 436 0
 1466 0150 704B     		ldr	r3, .L126
 1467 0152 9B78     		ldrb	r3, [r3, #2]
 1468 0154 DBB2     		uxtb	r3, r3
 1469 0156 022B     		cmp	r3, #2
 1470 0158 40F0A580 		bne	.L95
 437:.\Protocolo.c **** 			if(decimal==4){
 1471              		.loc 1 437 0
 1472 015c 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1473 015e 042B     		cmp	r3, #4
 1474 0160 29D1     		bne	.L96
 438:.\Protocolo.c **** 				buffer[5]=(valor[2]|0xE0);
 1475              		.loc 1 438 0
 1476 0162 3B68     		ldr	r3, [r7]
 1477 0164 0233     		adds	r3, r3, #2
 1478 0166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1479 0168 63F01F03 		orn	r3, r3, #31
 1480 016c DBB2     		uxtb	r3, r3
 1481 016e 7B73     		strb	r3, [r7, #13]
 439:.\Protocolo.c **** 				buffer[6]=(valor[3]|0xE0);
 1482              		.loc 1 439 0
 1483 0170 3B68     		ldr	r3, [r7]
 1484 0172 0333     		adds	r3, r3, #3
 1485 0174 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1486 0176 63F01F03 		orn	r3, r3, #31
 1487 017a DBB2     		uxtb	r3, r3
 1488 017c BB73     		strb	r3, [r7, #14]
 440:.\Protocolo.c **** 				buffer[7]=(valor[5]|0xE0);
 1489              		.loc 1 440 0
 1490 017e 3B68     		ldr	r3, [r7]
 1491 0180 0533     		adds	r3, r3, #5
 1492 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1493 0184 63F01F03 		orn	r3, r3, #31
 1494 0188 DBB2     		uxtb	r3, r3
 1495 018a FB73     		strb	r3, [r7, #15]
 441:.\Protocolo.c **** 				buffer[8]=(valor[6]|0xE0);
 1496              		.loc 1 441 0
 1497 018c 3B68     		ldr	r3, [r7]
 1498 018e 0633     		adds	r3, r3, #6
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 36


 1499 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1500 0192 63F01F03 		orn	r3, r3, #31
 1501 0196 DBB2     		uxtb	r3, r3
 1502 0198 3B74     		strb	r3, [r7, #16]
 442:.\Protocolo.c **** 				buffer[9]=(valor[7]|0xE0);
 1503              		.loc 1 442 0
 1504 019a 3B68     		ldr	r3, [r7]
 1505 019c 0733     		adds	r3, r3, #7
 1506 019e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1507 01a0 63F01F03 		orn	r3, r3, #31
 1508 01a4 DBB2     		uxtb	r3, r3
 1509 01a6 7B74     		strb	r3, [r7, #17]
 443:.\Protocolo.c **** 				buffer[10]=(valor[8]|0xE0);
 1510              		.loc 1 443 0
 1511 01a8 3B68     		ldr	r3, [r7]
 1512 01aa 0833     		adds	r3, r3, #8
 1513 01ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1514 01ae 63F01F03 		orn	r3, r3, #31
 1515 01b2 DBB2     		uxtb	r3, r3
 1516 01b4 BB74     		strb	r3, [r7, #18]
 1517              	.L96:
 444:.\Protocolo.c **** 			}
 445:.\Protocolo.c **** 			if(decimal==3){
 1518              		.loc 1 445 0
 1519 01b6 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1520 01b8 032B     		cmp	r3, #3
 1521 01ba 29D1     		bne	.L97
 446:.\Protocolo.c **** 				buffer[5]=(valor[1]|0xE0);
 1522              		.loc 1 446 0
 1523 01bc 3B68     		ldr	r3, [r7]
 1524 01be 0133     		adds	r3, r3, #1
 1525 01c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1526 01c2 63F01F03 		orn	r3, r3, #31
 1527 01c6 DBB2     		uxtb	r3, r3
 1528 01c8 7B73     		strb	r3, [r7, #13]
 447:.\Protocolo.c **** 				buffer[6]=(valor[2]|0xE0);
 1529              		.loc 1 447 0
 1530 01ca 3B68     		ldr	r3, [r7]
 1531 01cc 0233     		adds	r3, r3, #2
 1532 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1533 01d0 63F01F03 		orn	r3, r3, #31
 1534 01d4 DBB2     		uxtb	r3, r3
 1535 01d6 BB73     		strb	r3, [r7, #14]
 448:.\Protocolo.c **** 				buffer[7]=(valor[4]|0xE0);
 1536              		.loc 1 448 0
 1537 01d8 3B68     		ldr	r3, [r7]
 1538 01da 0433     		adds	r3, r3, #4
 1539 01dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1540 01de 63F01F03 		orn	r3, r3, #31
 1541 01e2 DBB2     		uxtb	r3, r3
 1542 01e4 FB73     		strb	r3, [r7, #15]
 449:.\Protocolo.c **** 				buffer[8]=(valor[5]|0xE0);
 1543              		.loc 1 449 0
 1544 01e6 3B68     		ldr	r3, [r7]
 1545 01e8 0533     		adds	r3, r3, #5
 1546 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1547 01ec 63F01F03 		orn	r3, r3, #31
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 37


 1548 01f0 DBB2     		uxtb	r3, r3
 1549 01f2 3B74     		strb	r3, [r7, #16]
 450:.\Protocolo.c **** 				buffer[9]=(valor[6]|0xE0);
 1550              		.loc 1 450 0
 1551 01f4 3B68     		ldr	r3, [r7]
 1552 01f6 0633     		adds	r3, r3, #6
 1553 01f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1554 01fa 63F01F03 		orn	r3, r3, #31
 1555 01fe DBB2     		uxtb	r3, r3
 1556 0200 7B74     		strb	r3, [r7, #17]
 451:.\Protocolo.c **** 				buffer[10]=(valor[7]|0xE0);
 1557              		.loc 1 451 0
 1558 0202 3B68     		ldr	r3, [r7]
 1559 0204 0733     		adds	r3, r3, #7
 1560 0206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1561 0208 63F01F03 		orn	r3, r3, #31
 1562 020c DBB2     		uxtb	r3, r3
 1563 020e BB74     		strb	r3, [r7, #18]
 1564              	.L97:
 452:.\Protocolo.c **** 			}
 453:.\Protocolo.c **** 			if(decimal==2){
 1565              		.loc 1 453 0
 1566 0210 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1567 0212 022B     		cmp	r3, #2
 1568 0214 24D1     		bne	.L98
 454:.\Protocolo.c **** 				buffer[5]=0xE0;
 1569              		.loc 1 454 0
 1570 0216 E023     		movs	r3, #224
 1571 0218 7B73     		strb	r3, [r7, #13]
 455:.\Protocolo.c **** 				buffer[6]=(valor[1]|0xE0);
 1572              		.loc 1 455 0
 1573 021a 3B68     		ldr	r3, [r7]
 1574 021c 0133     		adds	r3, r3, #1
 1575 021e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1576 0220 63F01F03 		orn	r3, r3, #31
 1577 0224 DBB2     		uxtb	r3, r3
 1578 0226 BB73     		strb	r3, [r7, #14]
 456:.\Protocolo.c **** 				buffer[7]=(valor[3]|0xE0);
 1579              		.loc 1 456 0
 1580 0228 3B68     		ldr	r3, [r7]
 1581 022a 0333     		adds	r3, r3, #3
 1582 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1583 022e 63F01F03 		orn	r3, r3, #31
 1584 0232 DBB2     		uxtb	r3, r3
 1585 0234 FB73     		strb	r3, [r7, #15]
 457:.\Protocolo.c **** 				buffer[8]=(valor[4]|0xE0);
 1586              		.loc 1 457 0
 1587 0236 3B68     		ldr	r3, [r7]
 1588 0238 0433     		adds	r3, r3, #4
 1589 023a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1590 023c 63F01F03 		orn	r3, r3, #31
 1591 0240 DBB2     		uxtb	r3, r3
 1592 0242 3B74     		strb	r3, [r7, #16]
 458:.\Protocolo.c **** 				buffer[9]=(valor[5]|0xE0);	
 1593              		.loc 1 458 0
 1594 0244 3B68     		ldr	r3, [r7]
 1595 0246 0533     		adds	r3, r3, #5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 38


 1596 0248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1597 024a 63F01F03 		orn	r3, r3, #31
 1598 024e DBB2     		uxtb	r3, r3
 1599 0250 7B74     		strb	r3, [r7, #17]
 459:.\Protocolo.c **** 				buffer[10]=(valor[6]|0xE0);
 1600              		.loc 1 459 0
 1601 0252 3B68     		ldr	r3, [r7]
 1602 0254 0633     		adds	r3, r3, #6
 1603 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1604 0258 63F01F03 		orn	r3, r3, #31
 1605 025c DBB2     		uxtb	r3, r3
 1606 025e BB74     		strb	r3, [r7, #18]
 1607              	.L98:
 460:.\Protocolo.c **** 			}
 461:.\Protocolo.c **** 			if(decimal==0){
 1608              		.loc 1 461 0
 1609 0260 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1610 0262 002B     		cmp	r3, #0
 1611 0264 1FD1     		bne	.L95
 462:.\Protocolo.c **** 				buffer[5]=0xE0;
 1612              		.loc 1 462 0
 1613 0266 E023     		movs	r3, #224
 1614 0268 7B73     		strb	r3, [r7, #13]
 463:.\Protocolo.c **** 				buffer[6]=0xE0;
 1615              		.loc 1 463 0
 1616 026a E023     		movs	r3, #224
 1617 026c BB73     		strb	r3, [r7, #14]
 464:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 1618              		.loc 1 464 0
 1619 026e 3B68     		ldr	r3, [r7]
 1620 0270 0133     		adds	r3, r3, #1
 1621 0272 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1622 0274 63F01F03 		orn	r3, r3, #31
 1623 0278 DBB2     		uxtb	r3, r3
 1624 027a FB73     		strb	r3, [r7, #15]
 465:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 1625              		.loc 1 465 0
 1626 027c 3B68     		ldr	r3, [r7]
 1627 027e 0233     		adds	r3, r3, #2
 1628 0280 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1629 0282 63F01F03 		orn	r3, r3, #31
 1630 0286 DBB2     		uxtb	r3, r3
 1631 0288 3B74     		strb	r3, [r7, #16]
 466:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 1632              		.loc 1 466 0
 1633 028a 3B68     		ldr	r3, [r7]
 1634 028c 0333     		adds	r3, r3, #3
 1635 028e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1636 0290 63F01F03 		orn	r3, r3, #31
 1637 0294 DBB2     		uxtb	r3, r3
 1638 0296 7B74     		strb	r3, [r7, #17]
 467:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 1639              		.loc 1 467 0
 1640 0298 3B68     		ldr	r3, [r7]
 1641 029a 0433     		adds	r3, r3, #4
 1642 029c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1643 029e 63F01F03 		orn	r3, r3, #31
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 39


 1644 02a2 DBB2     		uxtb	r3, r3
 1645 02a4 BB74     		strb	r3, [r7, #18]
 1646              	.L95:
 468:.\Protocolo.c **** 			}			
 469:.\Protocolo.c **** 		}
 470:.\Protocolo.c **** 		buffer[11]=0xFB;
 1647              		.loc 1 470 0
 1648 02a6 FB23     		movs	r3, #251
 1649 02a8 FB74     		strb	r3, [r7, #19]
 471:.\Protocolo.c **** 		buffer[12]=0;
 1650              		.loc 1 471 0
 1651 02aa 0023     		movs	r3, #0
 1652 02ac 3B75     		strb	r3, [r7, #20]
 472:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 1653              		.loc 1 472 0
 1654 02ae 0023     		movs	r3, #0
 1655 02b0 7B77     		strb	r3, [r7, #29]
 1656 02b2 0FE0     		b	.L99
 1657              	.L100:
 473:.\Protocolo.c **** 			buffer[12]+=(buffer[i]&0x0F);	
 1658              		.loc 1 473 0 discriminator 3
 1659 02b4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 1660 02b6 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1661 02b8 07F12001 		add	r1, r7, #32
 1662 02bc 0B44     		add	r3, r3, r1
 1663 02be 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 1664 02c2 03F00F03 		and	r3, r3, #15
 1665 02c6 DBB2     		uxtb	r3, r3
 1666 02c8 1344     		add	r3, r3, r2
 1667 02ca DBB2     		uxtb	r3, r3
 1668 02cc 3B75     		strb	r3, [r7, #20]
 472:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 1669              		.loc 1 472 0 discriminator 3
 1670 02ce 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1671 02d0 0133     		adds	r3, r3, #1
 1672 02d2 7B77     		strb	r3, [r7, #29]
 1673              	.L99:
 472:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 1674              		.loc 1 472 0 is_stmt 0 discriminator 1
 1675 02d4 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1676 02d6 0B2B     		cmp	r3, #11
 1677 02d8 ECD9     		bls	.L100
 474:.\Protocolo.c **** 		}
 475:.\Protocolo.c **** 		buffer[12]=(((~buffer[12])+1)&0x0F)|0xE0;
 1678              		.loc 1 475 0 is_stmt 1
 1679 02da 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 1680 02dc 5B42     		negs	r3, r3
 1681 02de DBB2     		uxtb	r3, r3
 1682 02e0 DBB2     		uxtb	r3, r3
 1683 02e2 03F00F03 		and	r3, r3, #15
 1684 02e6 DBB2     		uxtb	r3, r3
 1685 02e8 63F01F03 		orn	r3, r3, #31
 1686 02ec DBB2     		uxtb	r3, r3
 1687 02ee DBB2     		uxtb	r3, r3
 1688 02f0 3B75     		strb	r3, [r7, #20]
 476:.\Protocolo.c **** 		buffer[13]=0xF0;
 1689              		.loc 1 476 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 40


 1690 02f2 F023     		movs	r3, #240
 1691 02f4 7B75     		strb	r3, [r7, #21]
 477:.\Protocolo.c **** 		size=13;
 1692              		.loc 1 477 0
 1693 02f6 0D23     		movs	r3, #13
 1694 02f8 FB77     		strb	r3, [r7, #31]
 478:.\Protocolo.c **** 		if(version[1]==5){
 1695              		.loc 1 478 0
 1696 02fa 064B     		ldr	r3, .L126
 1697 02fc 5B78     		ldrb	r3, [r3, #1]
 1698 02fe DBB2     		uxtb	r3, r3
 1699 0300 052B     		cmp	r3, #5
 1700 0302 2CD1     		bne	.L101
 479:.\Protocolo.c **** 			buffer[10]=0xFB;
 1701              		.loc 1 479 0
 1702 0304 FB23     		movs	r3, #251
 1703 0306 BB74     		strb	r3, [r7, #18]
 480:.\Protocolo.c **** 			buffer[11]=0;
 1704              		.loc 1 480 0
 1705 0308 0023     		movs	r3, #0
 1706 030a FB74     		strb	r3, [r7, #19]
 481:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 1707              		.loc 1 481 0
 1708 030c 0023     		movs	r3, #0
 1709 030e 7B77     		strb	r3, [r7, #29]
 1710 0310 12E0     		b	.L102
 1711              	.L127:
 1712 0312 00BF     		.align	2
 1713              	.L126:
 1714 0314 00000000 		.word	version
 1715              	.L103:
 482:.\Protocolo.c **** 				buffer[11]+=(buffer[i]&0x0F);	
 1716              		.loc 1 482 0 discriminator 3
 1717 0318 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 1718 031a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1719 031c 07F12001 		add	r1, r7, #32
 1720 0320 0B44     		add	r3, r3, r1
 1721 0322 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 1722 0326 03F00F03 		and	r3, r3, #15
 1723 032a DBB2     		uxtb	r3, r3
 1724 032c 1344     		add	r3, r3, r2
 1725 032e DBB2     		uxtb	r3, r3
 1726 0330 FB74     		strb	r3, [r7, #19]
 481:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 1727              		.loc 1 481 0 discriminator 3
 1728 0332 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1729 0334 0133     		adds	r3, r3, #1
 1730 0336 7B77     		strb	r3, [r7, #29]
 1731              	.L102:
 481:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 1732              		.loc 1 481 0 is_stmt 0 discriminator 1
 1733 0338 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1734 033a 0A2B     		cmp	r3, #10
 1735 033c ECD9     		bls	.L103
 483:.\Protocolo.c **** 			}
 484:.\Protocolo.c **** 			buffer[11]=(((~buffer[11])+1)&0x0F)|0xE0;
 1736              		.loc 1 484 0 is_stmt 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 41


 1737 033e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1738 0340 5B42     		negs	r3, r3
 1739 0342 DBB2     		uxtb	r3, r3
 1740 0344 DBB2     		uxtb	r3, r3
 1741 0346 03F00F03 		and	r3, r3, #15
 1742 034a DBB2     		uxtb	r3, r3
 1743 034c 63F01F03 		orn	r3, r3, #31
 1744 0350 DBB2     		uxtb	r3, r3
 1745 0352 DBB2     		uxtb	r3, r3
 1746 0354 FB74     		strb	r3, [r7, #19]
 485:.\Protocolo.c **** 			buffer[12]=0xF0;
 1747              		.loc 1 485 0
 1748 0356 F023     		movs	r3, #240
 1749 0358 3B75     		strb	r3, [r7, #20]
 486:.\Protocolo.c **** 			size=12;		
 1750              		.loc 1 486 0
 1751 035a 0C23     		movs	r3, #12
 1752 035c FB77     		strb	r3, [r7, #31]
 1753              	.L101:
 487:.\Protocolo.c **** 		}
 488:.\Protocolo.c **** 		if(preset==1){
 1754              		.loc 1 488 0
 1755 035e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1756 0360 012B     		cmp	r3, #1
 1757 0362 40F0C080 		bne	.L94
 489:.\Protocolo.c **** 			buffer[4]=0xF6;
 1758              		.loc 1 489 0
 1759 0366 F623     		movs	r3, #246
 1760 0368 3B73     		strb	r3, [r7, #12]
 490:.\Protocolo.c **** 			buffer[5]=(0xE0|(grado-1));
 1761              		.loc 1 490 0
 1762 036a BB79     		ldrb	r3, [r7, #6]
 1763 036c 013B     		subs	r3, r3, #1
 1764 036e DBB2     		uxtb	r3, r3
 1765 0370 DBB2     		uxtb	r3, r3
 1766 0372 63F01F03 		orn	r3, r3, #31
 1767 0376 DBB2     		uxtb	r3, r3
 1768 0378 DBB2     		uxtb	r3, r3
 1769 037a 7B73     		strb	r3, [r7, #13]
 491:.\Protocolo.c **** 			buffer[6]=0xF8;
 1770              		.loc 1 491 0
 1771 037c F823     		movs	r3, #248
 1772 037e BB73     		strb	r3, [r7, #14]
 492:.\Protocolo.c **** 			if(decimal==4){
 1773              		.loc 1 492 0
 1774 0380 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1775 0382 042B     		cmp	r3, #4
 1776 0384 22D1     		bne	.L104
 493:.\Protocolo.c **** 				buffer[7]=(valor[2]|0xE0);
 1777              		.loc 1 493 0
 1778 0386 3B68     		ldr	r3, [r7]
 1779 0388 0233     		adds	r3, r3, #2
 1780 038a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1781 038c 63F01F03 		orn	r3, r3, #31
 1782 0390 DBB2     		uxtb	r3, r3
 1783 0392 FB73     		strb	r3, [r7, #15]
 494:.\Protocolo.c **** 				buffer[8]=(valor[3]|0xE0);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 42


 1784              		.loc 1 494 0
 1785 0394 3B68     		ldr	r3, [r7]
 1786 0396 0333     		adds	r3, r3, #3
 1787 0398 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1788 039a 63F01F03 		orn	r3, r3, #31
 1789 039e DBB2     		uxtb	r3, r3
 1790 03a0 3B74     		strb	r3, [r7, #16]
 495:.\Protocolo.c **** 				buffer[9]=(valor[5]|0xE0);
 1791              		.loc 1 495 0
 1792 03a2 3B68     		ldr	r3, [r7]
 1793 03a4 0533     		adds	r3, r3, #5
 1794 03a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1795 03a8 63F01F03 		orn	r3, r3, #31
 1796 03ac DBB2     		uxtb	r3, r3
 1797 03ae 7B74     		strb	r3, [r7, #17]
 496:.\Protocolo.c **** 				buffer[10]=(valor[6]|0xE0);
 1798              		.loc 1 496 0
 1799 03b0 3B68     		ldr	r3, [r7]
 1800 03b2 0633     		adds	r3, r3, #6
 1801 03b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1802 03b6 63F01F03 		orn	r3, r3, #31
 1803 03ba DBB2     		uxtb	r3, r3
 1804 03bc BB74     		strb	r3, [r7, #18]
 497:.\Protocolo.c **** 				buffer[11]=(valor[7]|0xE0);
 1805              		.loc 1 497 0
 1806 03be 3B68     		ldr	r3, [r7]
 1807 03c0 0733     		adds	r3, r3, #7
 1808 03c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1809 03c4 63F01F03 		orn	r3, r3, #31
 1810 03c8 DBB2     		uxtb	r3, r3
 1811 03ca FB74     		strb	r3, [r7, #19]
 1812              	.L104:
 498:.\Protocolo.c **** 			}
 499:.\Protocolo.c **** 			if(decimal==3){
 1813              		.loc 1 499 0
 1814 03cc 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1815 03ce 032B     		cmp	r3, #3
 1816 03d0 22D1     		bne	.L105
 500:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 1817              		.loc 1 500 0
 1818 03d2 3B68     		ldr	r3, [r7]
 1819 03d4 0133     		adds	r3, r3, #1
 1820 03d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1821 03d8 63F01F03 		orn	r3, r3, #31
 1822 03dc DBB2     		uxtb	r3, r3
 1823 03de FB73     		strb	r3, [r7, #15]
 501:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 1824              		.loc 1 501 0
 1825 03e0 3B68     		ldr	r3, [r7]
 1826 03e2 0233     		adds	r3, r3, #2
 1827 03e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1828 03e6 63F01F03 		orn	r3, r3, #31
 1829 03ea DBB2     		uxtb	r3, r3
 1830 03ec 3B74     		strb	r3, [r7, #16]
 502:.\Protocolo.c **** 				buffer[9]=(valor[4]|0xE0);
 1831              		.loc 1 502 0
 1832 03ee 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 43


 1833 03f0 0433     		adds	r3, r3, #4
 1834 03f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1835 03f4 63F01F03 		orn	r3, r3, #31
 1836 03f8 DBB2     		uxtb	r3, r3
 1837 03fa 7B74     		strb	r3, [r7, #17]
 503:.\Protocolo.c **** 				buffer[10]=(valor[5]|0xE0);
 1838              		.loc 1 503 0
 1839 03fc 3B68     		ldr	r3, [r7]
 1840 03fe 0533     		adds	r3, r3, #5
 1841 0400 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1842 0402 63F01F03 		orn	r3, r3, #31
 1843 0406 DBB2     		uxtb	r3, r3
 1844 0408 BB74     		strb	r3, [r7, #18]
 504:.\Protocolo.c **** 				buffer[11]=(valor[6]|0xE0);		
 1845              		.loc 1 504 0
 1846 040a 3B68     		ldr	r3, [r7]
 1847 040c 0633     		adds	r3, r3, #6
 1848 040e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1849 0410 63F01F03 		orn	r3, r3, #31
 1850 0414 DBB2     		uxtb	r3, r3
 1851 0416 FB74     		strb	r3, [r7, #19]
 1852              	.L105:
 505:.\Protocolo.c **** 			}
 506:.\Protocolo.c **** 			if(decimal==2){
 1853              		.loc 1 506 0
 1854 0418 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1855 041a 022B     		cmp	r3, #2
 1856 041c 1DD1     		bne	.L106
 507:.\Protocolo.c **** 				buffer[7]=0xE0;
 1857              		.loc 1 507 0
 1858 041e E023     		movs	r3, #224
 1859 0420 FB73     		strb	r3, [r7, #15]
 508:.\Protocolo.c **** 				buffer[8]=(valor[1]|0xE0);
 1860              		.loc 1 508 0
 1861 0422 3B68     		ldr	r3, [r7]
 1862 0424 0133     		adds	r3, r3, #1
 1863 0426 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1864 0428 63F01F03 		orn	r3, r3, #31
 1865 042c DBB2     		uxtb	r3, r3
 1866 042e 3B74     		strb	r3, [r7, #16]
 509:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 1867              		.loc 1 509 0
 1868 0430 3B68     		ldr	r3, [r7]
 1869 0432 0333     		adds	r3, r3, #3
 1870 0434 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1871 0436 63F01F03 		orn	r3, r3, #31
 1872 043a DBB2     		uxtb	r3, r3
 1873 043c 7B74     		strb	r3, [r7, #17]
 510:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 1874              		.loc 1 510 0
 1875 043e 3B68     		ldr	r3, [r7]
 1876 0440 0433     		adds	r3, r3, #4
 1877 0442 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1878 0444 63F01F03 		orn	r3, r3, #31
 1879 0448 DBB2     		uxtb	r3, r3
 1880 044a BB74     		strb	r3, [r7, #18]
 511:.\Protocolo.c **** 				buffer[11]=(valor[5]|0xE0);		
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 44


 1881              		.loc 1 511 0
 1882 044c 3B68     		ldr	r3, [r7]
 1883 044e 0533     		adds	r3, r3, #5
 1884 0450 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1885 0452 63F01F03 		orn	r3, r3, #31
 1886 0456 DBB2     		uxtb	r3, r3
 1887 0458 FB74     		strb	r3, [r7, #19]
 1888              	.L106:
 512:.\Protocolo.c **** 			}
 513:.\Protocolo.c **** 			if(decimal==0){
 1889              		.loc 1 513 0
 1890 045a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1891 045c 002B     		cmp	r3, #0
 1892 045e 18D1     		bne	.L107
 514:.\Protocolo.c **** 				buffer[7]=0xE0;
 1893              		.loc 1 514 0
 1894 0460 E023     		movs	r3, #224
 1895 0462 FB73     		strb	r3, [r7, #15]
 515:.\Protocolo.c **** 				buffer[8]=0xE0;
 1896              		.loc 1 515 0
 1897 0464 E023     		movs	r3, #224
 1898 0466 3B74     		strb	r3, [r7, #16]
 516:.\Protocolo.c **** 				buffer[9]=(valor[1]|0xE0);
 1899              		.loc 1 516 0
 1900 0468 3B68     		ldr	r3, [r7]
 1901 046a 0133     		adds	r3, r3, #1
 1902 046c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1903 046e 63F01F03 		orn	r3, r3, #31
 1904 0472 DBB2     		uxtb	r3, r3
 1905 0474 7B74     		strb	r3, [r7, #17]
 517:.\Protocolo.c **** 				buffer[10]=(valor[2]|0xE0);
 1906              		.loc 1 517 0
 1907 0476 3B68     		ldr	r3, [r7]
 1908 0478 0233     		adds	r3, r3, #2
 1909 047a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1910 047c 63F01F03 		orn	r3, r3, #31
 1911 0480 DBB2     		uxtb	r3, r3
 1912 0482 BB74     		strb	r3, [r7, #18]
 518:.\Protocolo.c **** 				buffer[11]=(valor[3]|0xE0);		
 1913              		.loc 1 518 0
 1914 0484 3B68     		ldr	r3, [r7]
 1915 0486 0333     		adds	r3, r3, #3
 1916 0488 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1917 048a 63F01F03 		orn	r3, r3, #31
 1918 048e DBB2     		uxtb	r3, r3
 1919 0490 FB74     		strb	r3, [r7, #19]
 1920              	.L107:
 519:.\Protocolo.c **** 			}			
 520:.\Protocolo.c **** 			buffer[12]=0xFB;
 1921              		.loc 1 520 0
 1922 0492 FB23     		movs	r3, #251
 1923 0494 3B75     		strb	r3, [r7, #20]
 521:.\Protocolo.c **** 			buffer[13]=0;
 1924              		.loc 1 521 0
 1925 0496 0023     		movs	r3, #0
 1926 0498 7B75     		strb	r3, [r7, #21]
 522:.\Protocolo.c **** 			for(i=0;i<=12;i++){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 45


 1927              		.loc 1 522 0
 1928 049a 0023     		movs	r3, #0
 1929 049c 7B77     		strb	r3, [r7, #29]
 1930 049e 0FE0     		b	.L108
 1931              	.L109:
 523:.\Protocolo.c **** 				buffer[13]+=(buffer[i]&0x0F);	
 1932              		.loc 1 523 0 discriminator 3
 1933 04a0 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 1934 04a2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1935 04a4 07F12001 		add	r1, r7, #32
 1936 04a8 0B44     		add	r3, r3, r1
 1937 04aa 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 1938 04ae 03F00F03 		and	r3, r3, #15
 1939 04b2 DBB2     		uxtb	r3, r3
 1940 04b4 1344     		add	r3, r3, r2
 1941 04b6 DBB2     		uxtb	r3, r3
 1942 04b8 7B75     		strb	r3, [r7, #21]
 522:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 1943              		.loc 1 522 0 discriminator 3
 1944 04ba 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1945 04bc 0133     		adds	r3, r3, #1
 1946 04be 7B77     		strb	r3, [r7, #29]
 1947              	.L108:
 522:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 1948              		.loc 1 522 0 is_stmt 0 discriminator 1
 1949 04c0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1950 04c2 0C2B     		cmp	r3, #12
 1951 04c4 ECD9     		bls	.L109
 524:.\Protocolo.c **** 			}
 525:.\Protocolo.c **** 			buffer[13]=(((~buffer[13])+1)&0x0F)|0xE0;			
 1952              		.loc 1 525 0 is_stmt 1
 1953 04c6 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 1954 04c8 5B42     		negs	r3, r3
 1955 04ca DBB2     		uxtb	r3, r3
 1956 04cc DBB2     		uxtb	r3, r3
 1957 04ce 03F00F03 		and	r3, r3, #15
 1958 04d2 DBB2     		uxtb	r3, r3
 1959 04d4 63F01F03 		orn	r3, r3, #31
 1960 04d8 DBB2     		uxtb	r3, r3
 1961 04da DBB2     		uxtb	r3, r3
 1962 04dc 7B75     		strb	r3, [r7, #21]
 526:.\Protocolo.c **** 			buffer[14]=0xF0;
 1963              		.loc 1 526 0
 1964 04de F023     		movs	r3, #240
 1965 04e0 BB75     		strb	r3, [r7, #22]
 527:.\Protocolo.c **** 			size=14;
 1966              		.loc 1 527 0
 1967 04e2 0E23     		movs	r3, #14
 1968 04e4 FB77     		strb	r3, [r7, #31]
 1969              	.L94:
 528:.\Protocolo.c **** 		}	
 529:.\Protocolo.c **** 	}	
 530:.\Protocolo.c **** 	if(version[1]==7){
 1970              		.loc 1 530 0
 1971 04e6 A24B     		ldr	r3, .L128
 1972 04e8 5B78     		ldrb	r3, [r3, #1]
 1973 04ea DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 46


 1974 04ec 072B     		cmp	r3, #7
 1975 04ee 40F06481 		bne	.L110
 531:.\Protocolo.c **** 		buffer[0]=0xFF;
 1976              		.loc 1 531 0
 1977 04f2 FF23     		movs	r3, #255
 1978 04f4 3B72     		strb	r3, [r7, #8]
 532:.\Protocolo.c **** 		buffer[1]=(0xE0|temp);
 1979              		.loc 1 532 0
 1980 04f6 BB7F     		ldrb	r3, [r7, #30]
 1981 04f8 63F01F03 		orn	r3, r3, #31
 1982 04fc DBB2     		uxtb	r3, r3
 1983 04fe 7B72     		strb	r3, [r7, #9]
 533:.\Protocolo.c **** 		buffer[2]=(0xF0|preset);
 1984              		.loc 1 533 0
 1985 0500 7B79     		ldrb	r3, [r7, #5]
 1986 0502 63F00F03 		orn	r3, r3, #15
 1987 0506 DBB2     		uxtb	r3, r3
 1988 0508 BB72     		strb	r3, [r7, #10]
 534:.\Protocolo.c **** 		buffer[3]=0xF4;
 1989              		.loc 1 534 0
 1990 050a F423     		movs	r3, #244
 1991 050c FB72     		strb	r3, [r7, #11]
 535:.\Protocolo.c **** 		buffer[4]=0xF8;	
 1992              		.loc 1 535 0
 1993 050e F823     		movs	r3, #248
 1994 0510 3B73     		strb	r3, [r7, #12]
 536:.\Protocolo.c **** 		buffer[5]=(valor[1]|0xE0);
 1995              		.loc 1 536 0
 1996 0512 3B68     		ldr	r3, [r7]
 1997 0514 0133     		adds	r3, r3, #1
 1998 0516 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1999 0518 63F01F03 		orn	r3, r3, #31
 2000 051c DBB2     		uxtb	r3, r3
 2001 051e 7B73     		strb	r3, [r7, #13]
 537:.\Protocolo.c **** 		buffer[6]=(valor[2]|0xE0);
 2002              		.loc 1 537 0
 2003 0520 3B68     		ldr	r3, [r7]
 2004 0522 0233     		adds	r3, r3, #2
 2005 0524 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2006 0526 63F01F03 		orn	r3, r3, #31
 2007 052a DBB2     		uxtb	r3, r3
 2008 052c BB73     		strb	r3, [r7, #14]
 538:.\Protocolo.c **** 		buffer[7]=(valor[3]|0xE0);
 2009              		.loc 1 538 0
 2010 052e 3B68     		ldr	r3, [r7]
 2011 0530 0333     		adds	r3, r3, #3
 2012 0532 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2013 0534 63F01F03 		orn	r3, r3, #31
 2014 0538 DBB2     		uxtb	r3, r3
 2015 053a FB73     		strb	r3, [r7, #15]
 539:.\Protocolo.c **** 		buffer[8]=(valor[4]|0xE0);
 2016              		.loc 1 539 0
 2017 053c 3B68     		ldr	r3, [r7]
 2018 053e 0433     		adds	r3, r3, #4
 2019 0540 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2020 0542 63F01F03 		orn	r3, r3, #31
 2021 0546 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 47


 2022 0548 3B74     		strb	r3, [r7, #16]
 540:.\Protocolo.c **** 		buffer[9]=(valor[5]|0xE0);
 2023              		.loc 1 540 0
 2024 054a 3B68     		ldr	r3, [r7]
 2025 054c 0533     		adds	r3, r3, #5
 2026 054e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2027 0550 63F01F03 		orn	r3, r3, #31
 2028 0554 DBB2     		uxtb	r3, r3
 2029 0556 7B74     		strb	r3, [r7, #17]
 541:.\Protocolo.c **** 		buffer[10]=(valor[6]|0xE0);	
 2030              		.loc 1 541 0
 2031 0558 3B68     		ldr	r3, [r7]
 2032 055a 0633     		adds	r3, r3, #6
 2033 055c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2034 055e 63F01F03 		orn	r3, r3, #31
 2035 0562 DBB2     		uxtb	r3, r3
 2036 0564 BB74     		strb	r3, [r7, #18]
 542:.\Protocolo.c **** 		buffer[11]=(valor[7]|0xE0);
 2037              		.loc 1 542 0
 2038 0566 3B68     		ldr	r3, [r7]
 2039 0568 0733     		adds	r3, r3, #7
 2040 056a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2041 056c 63F01F03 		orn	r3, r3, #31
 2042 0570 DBB2     		uxtb	r3, r3
 2043 0572 FB74     		strb	r3, [r7, #19]
 543:.\Protocolo.c **** 		buffer[12]=0xE0;
 2044              		.loc 1 543 0
 2045 0574 E023     		movs	r3, #224
 2046 0576 3B75     		strb	r3, [r7, #20]
 544:.\Protocolo.c **** 		buffer[13]=0xFB;
 2047              		.loc 1 544 0
 2048 0578 FB23     		movs	r3, #251
 2049 057a 7B75     		strb	r3, [r7, #21]
 545:.\Protocolo.c **** 		buffer[14]=0;
 2050              		.loc 1 545 0
 2051 057c 0023     		movs	r3, #0
 2052 057e BB75     		strb	r3, [r7, #22]
 546:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2053              		.loc 1 546 0
 2054 0580 0023     		movs	r3, #0
 2055 0582 7B77     		strb	r3, [r7, #29]
 2056 0584 0FE0     		b	.L111
 2057              	.L112:
 547:.\Protocolo.c **** 			buffer[14]+=(buffer[i]&0x0F);	
 2058              		.loc 1 547 0 discriminator 3
 2059 0586 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 2060 0588 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2061 058a 07F12001 		add	r1, r7, #32
 2062 058e 0B44     		add	r3, r3, r1
 2063 0590 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2064 0594 03F00F03 		and	r3, r3, #15
 2065 0598 DBB2     		uxtb	r3, r3
 2066 059a 1344     		add	r3, r3, r2
 2067 059c DBB2     		uxtb	r3, r3
 2068 059e BB75     		strb	r3, [r7, #22]
 546:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2069              		.loc 1 546 0 discriminator 3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 48


 2070 05a0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2071 05a2 0133     		adds	r3, r3, #1
 2072 05a4 7B77     		strb	r3, [r7, #29]
 2073              	.L111:
 546:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2074              		.loc 1 546 0 is_stmt 0 discriminator 1
 2075 05a6 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2076 05a8 0D2B     		cmp	r3, #13
 2077 05aa ECD9     		bls	.L112
 548:.\Protocolo.c **** 		}
 549:.\Protocolo.c **** 		buffer[14]=(((~buffer[14])+1)&0x0F)|0xE0;
 2078              		.loc 1 549 0 is_stmt 1
 2079 05ac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2080 05ae 5B42     		negs	r3, r3
 2081 05b0 DBB2     		uxtb	r3, r3
 2082 05b2 DBB2     		uxtb	r3, r3
 2083 05b4 03F00F03 		and	r3, r3, #15
 2084 05b8 DBB2     		uxtb	r3, r3
 2085 05ba 63F01F03 		orn	r3, r3, #31
 2086 05be DBB2     		uxtb	r3, r3
 2087 05c0 DBB2     		uxtb	r3, r3
 2088 05c2 BB75     		strb	r3, [r7, #22]
 550:.\Protocolo.c **** 		buffer[15]=0xF0;
 2089              		.loc 1 550 0
 2090 05c4 F023     		movs	r3, #240
 2091 05c6 FB75     		strb	r3, [r7, #23]
 551:.\Protocolo.c **** 		size=15;
 2092              		.loc 1 551 0
 2093 05c8 0F23     		movs	r3, #15
 2094 05ca FB77     		strb	r3, [r7, #31]
 552:.\Protocolo.c **** 		if(preset==1){
 2095              		.loc 1 552 0
 2096 05cc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2097 05ce 012B     		cmp	r3, #1
 2098 05d0 40F0F380 		bne	.L110
 553:.\Protocolo.c **** 			buffer[4]=0xF6;
 2099              		.loc 1 553 0
 2100 05d4 F623     		movs	r3, #246
 2101 05d6 3B73     		strb	r3, [r7, #12]
 554:.\Protocolo.c **** 			buffer[5]=(0xE0|(grado-1));
 2102              		.loc 1 554 0
 2103 05d8 BB79     		ldrb	r3, [r7, #6]
 2104 05da 013B     		subs	r3, r3, #1
 2105 05dc DBB2     		uxtb	r3, r3
 2106 05de DBB2     		uxtb	r3, r3
 2107 05e0 63F01F03 		orn	r3, r3, #31
 2108 05e4 DBB2     		uxtb	r3, r3
 2109 05e6 DBB2     		uxtb	r3, r3
 2110 05e8 7B73     		strb	r3, [r7, #13]
 555:.\Protocolo.c **** 			buffer[6]=0xF8;
 2111              		.loc 1 555 0
 2112 05ea F823     		movs	r3, #248
 2113 05ec BB73     		strb	r3, [r7, #14]
 556:.\Protocolo.c **** 			if(decimal==4){
 2114              		.loc 1 556 0
 2115 05ee 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2116 05f0 042B     		cmp	r3, #4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 49


 2117 05f2 2DD1     		bne	.L113
 557:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 2118              		.loc 1 557 0
 2119 05f4 3B68     		ldr	r3, [r7]
 2120 05f6 0133     		adds	r3, r3, #1
 2121 05f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2122 05fa 63F01F03 		orn	r3, r3, #31
 2123 05fe DBB2     		uxtb	r3, r3
 2124 0600 FB73     		strb	r3, [r7, #15]
 558:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 2125              		.loc 1 558 0
 2126 0602 3B68     		ldr	r3, [r7]
 2127 0604 0233     		adds	r3, r3, #2
 2128 0606 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2129 0608 63F01F03 		orn	r3, r3, #31
 2130 060c DBB2     		uxtb	r3, r3
 2131 060e 3B74     		strb	r3, [r7, #16]
 559:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 2132              		.loc 1 559 0
 2133 0610 3B68     		ldr	r3, [r7]
 2134 0612 0333     		adds	r3, r3, #3
 2135 0614 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2136 0616 63F01F03 		orn	r3, r3, #31
 2137 061a DBB2     		uxtb	r3, r3
 2138 061c 7B74     		strb	r3, [r7, #17]
 560:.\Protocolo.c **** 				buffer[10]=(valor[5]|0xE0);
 2139              		.loc 1 560 0
 2140 061e 3B68     		ldr	r3, [r7]
 2141 0620 0533     		adds	r3, r3, #5
 2142 0622 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2143 0624 63F01F03 		orn	r3, r3, #31
 2144 0628 DBB2     		uxtb	r3, r3
 2145 062a BB74     		strb	r3, [r7, #18]
 561:.\Protocolo.c **** 				buffer[11]=(valor[6]|0xE0);
 2146              		.loc 1 561 0
 2147 062c 3B68     		ldr	r3, [r7]
 2148 062e 0633     		adds	r3, r3, #6
 2149 0630 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2150 0632 63F01F03 		orn	r3, r3, #31
 2151 0636 DBB2     		uxtb	r3, r3
 2152 0638 FB74     		strb	r3, [r7, #19]
 562:.\Protocolo.c **** 				buffer[12]=(valor[7]|0xE0);	
 2153              		.loc 1 562 0
 2154 063a 3B68     		ldr	r3, [r7]
 2155 063c 0733     		adds	r3, r3, #7
 2156 063e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2157 0640 63F01F03 		orn	r3, r3, #31
 2158 0644 DBB2     		uxtb	r3, r3
 2159 0646 3B75     		strb	r3, [r7, #20]
 563:.\Protocolo.c **** 				buffer[13]=0xE0;	
 2160              		.loc 1 563 0
 2161 0648 E023     		movs	r3, #224
 2162 064a 7B75     		strb	r3, [r7, #21]
 564:.\Protocolo.c **** 				buffer[14]=0xE0;
 2163              		.loc 1 564 0
 2164 064c E023     		movs	r3, #224
 2165 064e BB75     		strb	r3, [r7, #22]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 50


 2166              	.L113:
 565:.\Protocolo.c **** 			}
 566:.\Protocolo.c **** 			if(decimal==3){
 2167              		.loc 1 566 0
 2168 0650 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2169 0652 032B     		cmp	r3, #3
 2170 0654 2DD1     		bne	.L114
 567:.\Protocolo.c **** 				buffer[7]=0xE0;
 2171              		.loc 1 567 0
 2172 0656 E023     		movs	r3, #224
 2173 0658 FB73     		strb	r3, [r7, #15]
 568:.\Protocolo.c **** 				buffer[8]=(valor[1]|0xE0);
 2174              		.loc 1 568 0
 2175 065a 3B68     		ldr	r3, [r7]
 2176 065c 0133     		adds	r3, r3, #1
 2177 065e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2178 0660 63F01F03 		orn	r3, r3, #31
 2179 0664 DBB2     		uxtb	r3, r3
 2180 0666 3B74     		strb	r3, [r7, #16]
 569:.\Protocolo.c **** 				buffer[9]=(valor[2]|0xE0);
 2181              		.loc 1 569 0
 2182 0668 3B68     		ldr	r3, [r7]
 2183 066a 0233     		adds	r3, r3, #2
 2184 066c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2185 066e 63F01F03 		orn	r3, r3, #31
 2186 0672 DBB2     		uxtb	r3, r3
 2187 0674 7B74     		strb	r3, [r7, #17]
 570:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 2188              		.loc 1 570 0
 2189 0676 3B68     		ldr	r3, [r7]
 2190 0678 0433     		adds	r3, r3, #4
 2191 067a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2192 067c 63F01F03 		orn	r3, r3, #31
 2193 0680 DBB2     		uxtb	r3, r3
 2194 0682 BB74     		strb	r3, [r7, #18]
 571:.\Protocolo.c **** 				buffer[11]=(valor[5]|0xE0);
 2195              		.loc 1 571 0
 2196 0684 3B68     		ldr	r3, [r7]
 2197 0686 0533     		adds	r3, r3, #5
 2198 0688 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2199 068a 63F01F03 		orn	r3, r3, #31
 2200 068e DBB2     		uxtb	r3, r3
 2201 0690 FB74     		strb	r3, [r7, #19]
 572:.\Protocolo.c **** 				buffer[12]=(valor[6]|0xE0);
 2202              		.loc 1 572 0
 2203 0692 3B68     		ldr	r3, [r7]
 2204 0694 0633     		adds	r3, r3, #6
 2205 0696 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2206 0698 63F01F03 		orn	r3, r3, #31
 2207 069c DBB2     		uxtb	r3, r3
 2208 069e 3B75     		strb	r3, [r7, #20]
 573:.\Protocolo.c **** 				buffer[13]=(valor[7]|0xE0);	
 2209              		.loc 1 573 0
 2210 06a0 3B68     		ldr	r3, [r7]
 2211 06a2 0733     		adds	r3, r3, #7
 2212 06a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2213 06a6 63F01F03 		orn	r3, r3, #31
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 51


 2214 06aa DBB2     		uxtb	r3, r3
 2215 06ac 7B75     		strb	r3, [r7, #21]
 574:.\Protocolo.c **** 				buffer[14]=0xE0;	
 2216              		.loc 1 574 0
 2217 06ae E023     		movs	r3, #224
 2218 06b0 BB75     		strb	r3, [r7, #22]
 2219              	.L114:
 575:.\Protocolo.c **** 			}
 576:.\Protocolo.c **** 			if(decimal==2){
 2220              		.loc 1 576 0
 2221 06b2 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2222 06b4 022B     		cmp	r3, #2
 2223 06b6 2DD1     		bne	.L115
 577:.\Protocolo.c **** 				buffer[7]=0xE0;
 2224              		.loc 1 577 0
 2225 06b8 E023     		movs	r3, #224
 2226 06ba FB73     		strb	r3, [r7, #15]
 578:.\Protocolo.c **** 				buffer[8]=0xE0;
 2227              		.loc 1 578 0
 2228 06bc E023     		movs	r3, #224
 2229 06be 3B74     		strb	r3, [r7, #16]
 579:.\Protocolo.c **** 				buffer[9]=(valor[1]|0xE0);
 2230              		.loc 1 579 0
 2231 06c0 3B68     		ldr	r3, [r7]
 2232 06c2 0133     		adds	r3, r3, #1
 2233 06c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2234 06c6 63F01F03 		orn	r3, r3, #31
 2235 06ca DBB2     		uxtb	r3, r3
 2236 06cc 7B74     		strb	r3, [r7, #17]
 580:.\Protocolo.c **** 				buffer[10]=(valor[3]|0xE0);
 2237              		.loc 1 580 0
 2238 06ce 3B68     		ldr	r3, [r7]
 2239 06d0 0333     		adds	r3, r3, #3
 2240 06d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2241 06d4 63F01F03 		orn	r3, r3, #31
 2242 06d8 DBB2     		uxtb	r3, r3
 2243 06da BB74     		strb	r3, [r7, #18]
 581:.\Protocolo.c **** 				buffer[11]=(valor[4]|0xE0);
 2244              		.loc 1 581 0
 2245 06dc 3B68     		ldr	r3, [r7]
 2246 06de 0433     		adds	r3, r3, #4
 2247 06e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2248 06e2 63F01F03 		orn	r3, r3, #31
 2249 06e6 DBB2     		uxtb	r3, r3
 2250 06e8 FB74     		strb	r3, [r7, #19]
 582:.\Protocolo.c **** 				buffer[12]=(valor[5]|0xE0);
 2251              		.loc 1 582 0
 2252 06ea 3B68     		ldr	r3, [r7]
 2253 06ec 0533     		adds	r3, r3, #5
 2254 06ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2255 06f0 63F01F03 		orn	r3, r3, #31
 2256 06f4 DBB2     		uxtb	r3, r3
 2257 06f6 3B75     		strb	r3, [r7, #20]
 583:.\Protocolo.c **** 				buffer[13]=(valor[6]|0xE0);	
 2258              		.loc 1 583 0
 2259 06f8 3B68     		ldr	r3, [r7]
 2260 06fa 0633     		adds	r3, r3, #6
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 52


 2261 06fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2262 06fe 63F01F03 		orn	r3, r3, #31
 2263 0702 DBB2     		uxtb	r3, r3
 2264 0704 7B75     		strb	r3, [r7, #21]
 584:.\Protocolo.c **** 				buffer[14]=(valor[7]|0xE0);	
 2265              		.loc 1 584 0
 2266 0706 3B68     		ldr	r3, [r7]
 2267 0708 0733     		adds	r3, r3, #7
 2268 070a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2269 070c 63F01F03 		orn	r3, r3, #31
 2270 0710 DBB2     		uxtb	r3, r3
 2271 0712 BB75     		strb	r3, [r7, #22]
 2272              	.L115:
 585:.\Protocolo.c **** 			}
 586:.\Protocolo.c **** 			if(decimal==0){
 2273              		.loc 1 586 0
 2274 0714 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2275 0716 002B     		cmp	r3, #0
 2276 0718 23D1     		bne	.L116
 587:.\Protocolo.c **** 				buffer[7]=0xE0;
 2277              		.loc 1 587 0
 2278 071a E023     		movs	r3, #224
 2279 071c FB73     		strb	r3, [r7, #15]
 588:.\Protocolo.c **** 				buffer[8]=0xE0;
 2280              		.loc 1 588 0
 2281 071e E023     		movs	r3, #224
 2282 0720 3B74     		strb	r3, [r7, #16]
 589:.\Protocolo.c **** 				buffer[9]=0xE0;
 2283              		.loc 1 589 0
 2284 0722 E023     		movs	r3, #224
 2285 0724 7B74     		strb	r3, [r7, #17]
 590:.\Protocolo.c **** 				buffer[10]=(valor[1]|0xE0);
 2286              		.loc 1 590 0
 2287 0726 3B68     		ldr	r3, [r7]
 2288 0728 0133     		adds	r3, r3, #1
 2289 072a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2290 072c 63F01F03 		orn	r3, r3, #31
 2291 0730 DBB2     		uxtb	r3, r3
 2292 0732 BB74     		strb	r3, [r7, #18]
 591:.\Protocolo.c **** 				buffer[11]=(valor[2]|0xE0);
 2293              		.loc 1 591 0
 2294 0734 3B68     		ldr	r3, [r7]
 2295 0736 0233     		adds	r3, r3, #2
 2296 0738 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2297 073a 63F01F03 		orn	r3, r3, #31
 2298 073e DBB2     		uxtb	r3, r3
 2299 0740 FB74     		strb	r3, [r7, #19]
 592:.\Protocolo.c **** 				buffer[12]=(valor[3]|0xE0);
 2300              		.loc 1 592 0
 2301 0742 3B68     		ldr	r3, [r7]
 2302 0744 0333     		adds	r3, r3, #3
 2303 0746 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2304 0748 63F01F03 		orn	r3, r3, #31
 2305 074c DBB2     		uxtb	r3, r3
 2306 074e 3B75     		strb	r3, [r7, #20]
 593:.\Protocolo.c **** 				buffer[13]=(valor[4]|0xE0);	
 2307              		.loc 1 593 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 53


 2308 0750 3B68     		ldr	r3, [r7]
 2309 0752 0433     		adds	r3, r3, #4
 2310 0754 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2311 0756 63F01F03 		orn	r3, r3, #31
 2312 075a DBB2     		uxtb	r3, r3
 2313 075c 7B75     		strb	r3, [r7, #21]
 594:.\Protocolo.c **** 				buffer[14]=0xE0;	
 2314              		.loc 1 594 0
 2315 075e E023     		movs	r3, #224
 2316 0760 BB75     		strb	r3, [r7, #22]
 2317              	.L116:
 595:.\Protocolo.c **** 			}			
 596:.\Protocolo.c **** 			buffer[15]=0xFB;
 2318              		.loc 1 596 0
 2319 0762 FB23     		movs	r3, #251
 2320 0764 FB75     		strb	r3, [r7, #23]
 597:.\Protocolo.c **** 			buffer[16]=0;
 2321              		.loc 1 597 0
 2322 0766 0023     		movs	r3, #0
 2323 0768 3B76     		strb	r3, [r7, #24]
 598:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2324              		.loc 1 598 0
 2325 076a 0023     		movs	r3, #0
 2326 076c 7B77     		strb	r3, [r7, #29]
 2327 076e 11E0     		b	.L117
 2328              	.L129:
 2329              		.align	2
 2330              	.L128:
 2331 0770 00000000 		.word	version
 2332              	.L118:
 599:.\Protocolo.c **** 				buffer[16]+=(buffer[i]&0x0F);	
 2333              		.loc 1 599 0 discriminator 3
 2334 0774 3A7E     		ldrb	r2, [r7, #24]	@ zero_extendqisi2
 2335 0776 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2336 0778 07F12001 		add	r1, r7, #32
 2337 077c 0B44     		add	r3, r3, r1
 2338 077e 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2339 0782 03F00F03 		and	r3, r3, #15
 2340 0786 DBB2     		uxtb	r3, r3
 2341 0788 1344     		add	r3, r3, r2
 2342 078a DBB2     		uxtb	r3, r3
 2343 078c 3B76     		strb	r3, [r7, #24]
 598:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2344              		.loc 1 598 0 discriminator 3
 2345 078e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2346 0790 0133     		adds	r3, r3, #1
 2347 0792 7B77     		strb	r3, [r7, #29]
 2348              	.L117:
 598:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2349              		.loc 1 598 0 is_stmt 0 discriminator 1
 2350 0794 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2351 0796 0F2B     		cmp	r3, #15
 2352 0798 ECD9     		bls	.L118
 600:.\Protocolo.c **** 			}
 601:.\Protocolo.c **** 			buffer[16]=(((~buffer[16])+1)&0x0F)|0xE0;			
 2353              		.loc 1 601 0 is_stmt 1
 2354 079a 3B7E     		ldrb	r3, [r7, #24]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 54


 2355 079c 5B42     		negs	r3, r3
 2356 079e DBB2     		uxtb	r3, r3
 2357 07a0 DBB2     		uxtb	r3, r3
 2358 07a2 03F00F03 		and	r3, r3, #15
 2359 07a6 DBB2     		uxtb	r3, r3
 2360 07a8 63F01F03 		orn	r3, r3, #31
 2361 07ac DBB2     		uxtb	r3, r3
 2362 07ae DBB2     		uxtb	r3, r3
 2363 07b0 3B76     		strb	r3, [r7, #24]
 602:.\Protocolo.c **** 			buffer[17]=0xF0;
 2364              		.loc 1 602 0
 2365 07b2 F023     		movs	r3, #240
 2366 07b4 7B76     		strb	r3, [r7, #25]
 603:.\Protocolo.c **** 			size=17;
 2367              		.loc 1 603 0
 2368 07b6 1123     		movs	r3, #17
 2369 07b8 FB77     		strb	r3, [r7, #31]
 2370              	.L110:
 604:.\Protocolo.c **** 		}		
 605:.\Protocolo.c **** 	}
 606:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 2371              		.loc 1 606 0
 2372 07ba FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 607:.\Protocolo.c **** 	Surtidor_PutChar(0x20|dir);
 2373              		.loc 1 607 0
 2374 07be FB79     		ldrb	r3, [r7, #7]
 2375 07c0 43F02003 		orr	r3, r3, #32
 2376 07c4 DBB2     		uxtb	r3, r3
 2377 07c6 1846     		mov	r0, r3
 2378 07c8 FFF7FEFF 		bl	Surtidor_PutChar
 608:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 2379              		.loc 1 608 0
 2380 07cc 2A48     		ldr	r0, .L130
 2381 07ce FFF7FEFF 		bl	isr_1_StartEx
 609:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 2382              		.loc 1 609 0
 2383 07d2 FFF7FEFF 		bl	Timer_RxSurtidor_Start
 610:.\Protocolo.c ****     rx_timeout=0;
 2384              		.loc 1 610 0
 2385 07d6 294B     		ldr	r3, .L130+4
 2386 07d8 0022     		movs	r2, #0
 2387 07da 1A70     		strb	r2, [r3]
 611:.\Protocolo.c ****     CyDelay(10);
 2388              		.loc 1 611 0
 2389 07dc 0A20     		movs	r0, #10
 2390 07de FFF7FEFF 		bl	CyDelay
 612:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 2391              		.loc 1 612 0
 2392 07e2 0BE0     		b	.L119
 2393              	.L120:
 613:.\Protocolo.c **** 		if(rx_timeout==1){
 2394              		.loc 1 613 0
 2395 07e4 254B     		ldr	r3, .L130+4
 2396 07e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2397 07e8 012B     		cmp	r3, #1
 2398 07ea 07D1     		bne	.L119
 614:.\Protocolo.c **** 			isr_1_Stop();
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 55


 2399              		.loc 1 614 0
 2400 07ec FFF7FEFF 		bl	isr_1_Stop
 615:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 2401              		.loc 1 615 0
 2402 07f0 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 616:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 2403              		.loc 1 616 0
 2404 07f4 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 617:.\Protocolo.c **** 			return 0;
 2405              		.loc 1 617 0
 2406 07f8 0023     		movs	r3, #0
 2407 07fa 39E0     		b	.L125
 2408              	.L119:
 612:.\Protocolo.c **** 		if(rx_timeout==1){
 2409              		.loc 1 612 0
 2410 07fc FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2411 0800 0346     		mov	r3, r0
 2412 0802 002B     		cmp	r3, #0
 2413 0804 EED0     		beq	.L120
 618:.\Protocolo.c **** 		}
 619:.\Protocolo.c **** 	}
 620:.\Protocolo.c **** 	isr_1_Stop();
 2414              		.loc 1 620 0
 2415 0806 FFF7FEFF 		bl	isr_1_Stop
 621:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();	
 2416              		.loc 1 621 0
 2417 080a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 622:.\Protocolo.c **** 	if(Surtidor_ReadRxData()==(0xD0|dir)){
 2418              		.loc 1 622 0
 2419 080e FFF7FEFF 		bl	Surtidor_ReadRxData
 2420 0812 0346     		mov	r3, r0
 2421 0814 1A46     		mov	r2, r3
 2422 0816 FB79     		ldrb	r3, [r7, #7]
 2423 0818 63F02F03 		orn	r3, r3, #47
 2424 081c DBB2     		uxtb	r3, r3
 2425 081e 9A42     		cmp	r2, r3
 2426 0820 25D1     		bne	.L121
 623:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 2427              		.loc 1 623 0
 2428 0822 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 624:.\Protocolo.c **** 		CyDelay(10);
 2429              		.loc 1 624 0
 2430 0826 0A20     		movs	r0, #10
 2431 0828 FFF7FEFF 		bl	CyDelay
 625:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2432              		.loc 1 625 0
 2433 082c 0023     		movs	r3, #0
 2434 082e 7B77     		strb	r3, [r7, #29]
 2435 0830 0BE0     		b	.L122
 2436              	.L123:
 626:.\Protocolo.c ****            	Surtidor_PutChar(buffer[i]);
 2437              		.loc 1 626 0 discriminator 3
 2438 0832 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2439 0834 07F12002 		add	r2, r7, #32
 2440 0838 1344     		add	r3, r3, r2
 2441 083a 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2442 083e 1846     		mov	r0, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 56


 2443 0840 FFF7FEFF 		bl	Surtidor_PutChar
 625:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2444              		.loc 1 625 0 discriminator 3
 2445 0844 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2446 0846 0133     		adds	r3, r3, #1
 2447 0848 7B77     		strb	r3, [r7, #29]
 2448              	.L122:
 625:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2449              		.loc 1 625 0 is_stmt 0 discriminator 1
 2450 084a 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 2451 084c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2452 084e 9A42     		cmp	r2, r3
 2453 0850 EFD9     		bls	.L123
 627:.\Protocolo.c ****         }
 628:.\Protocolo.c **** 		CyDelay(50);		
 2454              		.loc 1 628 0 is_stmt 1
 2455 0852 3220     		movs	r0, #50
 2456 0854 FFF7FEFF 		bl	CyDelay
 629:.\Protocolo.c **** 		if(get_estado(dir)==0){
 2457              		.loc 1 629 0
 2458 0858 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2459 085a 1846     		mov	r0, r3
 2460 085c FFF7FEFF 		bl	get_estado
 2461 0860 0346     		mov	r3, r0
 2462 0862 002B     		cmp	r3, #0
 2463 0864 01D1     		bne	.L124
 630:.\Protocolo.c **** 			return 0;
 2464              		.loc 1 630 0
 2465 0866 0023     		movs	r3, #0
 2466 0868 02E0     		b	.L125
 2467              	.L124:
 631:.\Protocolo.c **** 		}
 632:.\Protocolo.c **** 		else{
 633:.\Protocolo.c **** 			return 1;
 2468              		.loc 1 633 0
 2469 086a 0123     		movs	r3, #1
 2470 086c 00E0     		b	.L125
 2471              	.L121:
 634:.\Protocolo.c **** 		}
 635:.\Protocolo.c **** 	}
 636:.\Protocolo.c **** 	else{
 637:.\Protocolo.c **** 		return 0;
 2472              		.loc 1 637 0
 2473 086e 0023     		movs	r3, #0
 2474              	.L125:
 638:.\Protocolo.c **** 	}
 639:.\Protocolo.c **** }
 2475              		.loc 1 639 0 discriminator 1
 2476 0870 1846     		mov	r0, r3
 2477 0872 2037     		adds	r7, r7, #32
 2478              		.cfi_def_cfa_offset 8
 2479 0874 BD46     		mov	sp, r7
 2480              		.cfi_def_cfa_register 13
 2481              		@ sp needed
 2482 0876 80BD     		pop	{r7, pc}
 2483              	.L131:
 2484              		.align	2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 57


 2485              	.L130:
 2486 0878 00000000 		.word	Rx_Surtidor
 2487 087c 00000000 		.word	rx_timeout
 2488              		.cfi_endproc
 2489              	.LFE70:
 2490              		.size	programar, .-programar
 2491              		.section	.text.cambiar_precio,"ax",%progbits
 2492              		.align	2
 2493              		.global	cambiar_precio
 2494              		.thumb
 2495              		.thumb_func
 2496              		.type	cambiar_precio, %function
 2497              	cambiar_precio:
 2498              	.LFB71:
 640:.\Protocolo.c **** 
 641:.\Protocolo.c **** /*
 642:.\Protocolo.c **** ***************************************************************************************************
 643:.\Protocolo.c **** *                                         uint8 programar(uint8 dir)
 644:.\Protocolo.c **** *
 645:.\Protocolo.c **** * Description : 
 646:.\Protocolo.c **** *               
 647:.\Protocolo.c **** *
 648:.\Protocolo.c **** * Argument(s) : none
 649:.\Protocolo.c **** *
 650:.\Protocolo.c **** * Return(s)   : none
 651:.\Protocolo.c **** *
 652:.\Protocolo.c **** * Caller(s)   : 
 653:.\Protocolo.c **** *
 654:.\Protocolo.c **** * Note(s)     : none.
 655:.\Protocolo.c **** ***************************************************************************************************
 656:.\Protocolo.c **** */
 657:.\Protocolo.c **** uint8 cambiar_precio(uint8 dir, uint8 *precio, uint8 num_man){
 2499              		.loc 1 657 0
 2500              		.cfi_startproc
 2501              		@ args = 0, pretend = 0, frame = 32
 2502              		@ frame_needed = 1, uses_anonymous_args = 0
 2503 0000 80B5     		push	{r7, lr}
 2504              		.cfi_def_cfa_offset 8
 2505              		.cfi_offset 7, -8
 2506              		.cfi_offset 14, -4
 2507 0002 88B0     		sub	sp, sp, #32
 2508              		.cfi_def_cfa_offset 40
 2509 0004 00AF     		add	r7, sp, #0
 2510              		.cfi_def_cfa_register 7
 2511 0006 0346     		mov	r3, r0
 2512 0008 3960     		str	r1, [r7]
 2513 000a FB71     		strb	r3, [r7, #7]
 2514 000c 1346     		mov	r3, r2
 2515 000e BB71     		strb	r3, [r7, #6]
 658:.\Protocolo.c **** 	uint8 buffer[15]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},size,x;
 2516              		.loc 1 658 0
 2517 0010 0023     		movs	r3, #0
 2518 0012 3B73     		strb	r3, [r7, #12]
 2519 0014 0023     		movs	r3, #0
 2520 0016 7B73     		strb	r3, [r7, #13]
 2521 0018 0023     		movs	r3, #0
 2522 001a BB73     		strb	r3, [r7, #14]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 58


 2523 001c 0023     		movs	r3, #0
 2524 001e FB73     		strb	r3, [r7, #15]
 2525 0020 0023     		movs	r3, #0
 2526 0022 3B74     		strb	r3, [r7, #16]
 2527 0024 0023     		movs	r3, #0
 2528 0026 7B74     		strb	r3, [r7, #17]
 2529 0028 0023     		movs	r3, #0
 2530 002a BB74     		strb	r3, [r7, #18]
 2531 002c 0023     		movs	r3, #0
 2532 002e FB74     		strb	r3, [r7, #19]
 2533 0030 0023     		movs	r3, #0
 2534 0032 3B75     		strb	r3, [r7, #20]
 2535 0034 0023     		movs	r3, #0
 2536 0036 7B75     		strb	r3, [r7, #21]
 2537 0038 0023     		movs	r3, #0
 2538 003a BB75     		strb	r3, [r7, #22]
 2539 003c 0023     		movs	r3, #0
 2540 003e FB75     		strb	r3, [r7, #23]
 2541 0040 0023     		movs	r3, #0
 2542 0042 3B76     		strb	r3, [r7, #24]
 2543 0044 0023     		movs	r3, #0
 2544 0046 7B76     		strb	r3, [r7, #25]
 2545 0048 0023     		movs	r3, #0
 2546 004a BB76     		strb	r3, [r7, #26]
 659:.\Protocolo.c **** 	if(version[1]!=7){
 2547              		.loc 1 659 0
 2548 004c 884B     		ldr	r3, .L151
 2549 004e 5B78     		ldrb	r3, [r3, #1]
 2550 0050 DBB2     		uxtb	r3, r3
 2551 0052 072B     		cmp	r3, #7
 2552 0054 56D0     		beq	.L133
 660:.\Protocolo.c **** 		buffer[0]=0xFF;
 2553              		.loc 1 660 0
 2554 0056 FF23     		movs	r3, #255
 2555 0058 3B73     		strb	r3, [r7, #12]
 661:.\Protocolo.c **** 		buffer[1]=0xE5;
 2556              		.loc 1 661 0
 2557 005a E523     		movs	r3, #229
 2558 005c 7B73     		strb	r3, [r7, #13]
 662:.\Protocolo.c **** 		buffer[2]=0xF4;
 2559              		.loc 1 662 0
 2560 005e F423     		movs	r3, #244
 2561 0060 BB73     		strb	r3, [r7, #14]
 663:.\Protocolo.c **** 		buffer[3]=0xF6;
 2562              		.loc 1 663 0
 2563 0062 F623     		movs	r3, #246
 2564 0064 FB73     		strb	r3, [r7, #15]
 664:.\Protocolo.c **** 		buffer[4]=(0xE0|(num_man-1));
 2565              		.loc 1 664 0
 2566 0066 BB79     		ldrb	r3, [r7, #6]
 2567 0068 013B     		subs	r3, r3, #1
 2568 006a DBB2     		uxtb	r3, r3
 2569 006c DBB2     		uxtb	r3, r3
 2570 006e 63F01F03 		orn	r3, r3, #31
 2571 0072 DBB2     		uxtb	r3, r3
 2572 0074 DBB2     		uxtb	r3, r3
 2573 0076 3B74     		strb	r3, [r7, #16]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 59


 665:.\Protocolo.c **** 		buffer[5]=0xF7;	
 2574              		.loc 1 665 0
 2575 0078 F723     		movs	r3, #247
 2576 007a 7B74     		strb	r3, [r7, #17]
 666:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 2577              		.loc 1 666 0
 2578 007c 0623     		movs	r3, #6
 2579 007e BB77     		strb	r3, [r7, #30]
 2580 0080 15E0     		b	.L134
 2581              	.L135:
 667:.\Protocolo.c **** 			buffer[x]=(0xE0|(precio[x-6]&0x0F));
 2582              		.loc 1 667 0 discriminator 3
 2583 0082 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2584 0084 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2585 0086 063A     		subs	r2, r2, #6
 2586 0088 3968     		ldr	r1, [r7]
 2587 008a 0A44     		add	r2, r2, r1
 2588 008c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2589 008e D2B2     		uxtb	r2, r2
 2590 0090 02F00F02 		and	r2, r2, #15
 2591 0094 D2B2     		uxtb	r2, r2
 2592 0096 62F01F02 		orn	r2, r2, #31
 2593 009a D2B2     		uxtb	r2, r2
 2594 009c D2B2     		uxtb	r2, r2
 2595 009e 07F12001 		add	r1, r7, #32
 2596 00a2 0B44     		add	r3, r3, r1
 2597 00a4 03F8142C 		strb	r2, [r3, #-20]
 666:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 2598              		.loc 1 666 0 discriminator 3
 2599 00a8 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2600 00aa 0133     		adds	r3, r3, #1
 2601 00ac BB77     		strb	r3, [r7, #30]
 2602              	.L134:
 666:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 2603              		.loc 1 666 0 is_stmt 0 discriminator 1
 2604 00ae BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2605 00b0 092B     		cmp	r3, #9
 2606 00b2 E6D9     		bls	.L135
 668:.\Protocolo.c **** 		}
 669:.\Protocolo.c **** 		buffer[10]=0xFB;
 2607              		.loc 1 669 0 is_stmt 1
 2608 00b4 FB23     		movs	r3, #251
 2609 00b6 BB75     		strb	r3, [r7, #22]
 670:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 2610              		.loc 1 670 0
 2611 00b8 0023     		movs	r3, #0
 2612 00ba BB77     		strb	r3, [r7, #30]
 2613 00bc 0FE0     		b	.L136
 2614              	.L137:
 671:.\Protocolo.c **** 			buffer[11]+=(buffer[x]&0x0F);	
 2615              		.loc 1 671 0 discriminator 3
 2616 00be FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2617 00c0 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2618 00c2 07F12001 		add	r1, r7, #32
 2619 00c6 0B44     		add	r3, r3, r1
 2620 00c8 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 2621 00cc 03F00F03 		and	r3, r3, #15
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 60


 2622 00d0 DBB2     		uxtb	r3, r3
 2623 00d2 1344     		add	r3, r3, r2
 2624 00d4 DBB2     		uxtb	r3, r3
 2625 00d6 FB75     		strb	r3, [r7, #23]
 670:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 2626              		.loc 1 670 0 discriminator 3
 2627 00d8 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2628 00da 0133     		adds	r3, r3, #1
 2629 00dc BB77     		strb	r3, [r7, #30]
 2630              	.L136:
 670:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 2631              		.loc 1 670 0 is_stmt 0 discriminator 1
 2632 00de BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2633 00e0 0A2B     		cmp	r3, #10
 2634 00e2 ECD9     		bls	.L137
 672:.\Protocolo.c **** 		}
 673:.\Protocolo.c **** 		buffer[11]=(((~buffer[11])+1)&0x0F)|0xE0;
 2635              		.loc 1 673 0 is_stmt 1
 2636 00e4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2637 00e6 5B42     		negs	r3, r3
 2638 00e8 DBB2     		uxtb	r3, r3
 2639 00ea DBB2     		uxtb	r3, r3
 2640 00ec 03F00F03 		and	r3, r3, #15
 2641 00f0 DBB2     		uxtb	r3, r3
 2642 00f2 63F01F03 		orn	r3, r3, #31
 2643 00f6 DBB2     		uxtb	r3, r3
 2644 00f8 DBB2     		uxtb	r3, r3
 2645 00fa FB75     		strb	r3, [r7, #23]
 674:.\Protocolo.c **** 		buffer[12]=0xF0;
 2646              		.loc 1 674 0
 2647 00fc F023     		movs	r3, #240
 2648 00fe 3B76     		strb	r3, [r7, #24]
 675:.\Protocolo.c **** 		size=12;
 2649              		.loc 1 675 0
 2650 0100 0C23     		movs	r3, #12
 2651 0102 FB77     		strb	r3, [r7, #31]
 2652              	.L133:
 676:.\Protocolo.c **** 	}
 677:.\Protocolo.c **** 	if(version[1]==7){
 2653              		.loc 1 677 0
 2654 0104 5A4B     		ldr	r3, .L151
 2655 0106 5B78     		ldrb	r3, [r3, #1]
 2656 0108 DBB2     		uxtb	r3, r3
 2657 010a 072B     		cmp	r3, #7
 2658 010c 53D1     		bne	.L138
 678:.\Protocolo.c **** 		buffer[0]=0xFF;
 2659              		.loc 1 678 0
 2660 010e FF23     		movs	r3, #255
 2661 0110 3B73     		strb	r3, [r7, #12]
 679:.\Protocolo.c **** 		buffer[1]=0xE3;
 2662              		.loc 1 679 0
 2663 0112 E323     		movs	r3, #227
 2664 0114 7B73     		strb	r3, [r7, #13]
 680:.\Protocolo.c **** 		buffer[2]=0xF4;
 2665              		.loc 1 680 0
 2666 0116 F423     		movs	r3, #244
 2667 0118 BB73     		strb	r3, [r7, #14]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 61


 681:.\Protocolo.c **** 		buffer[3]=0xF6;
 2668              		.loc 1 681 0
 2669 011a F623     		movs	r3, #246
 2670 011c FB73     		strb	r3, [r7, #15]
 682:.\Protocolo.c **** 		buffer[4]=(0xE0|(num_man-1));
 2671              		.loc 1 682 0
 2672 011e BB79     		ldrb	r3, [r7, #6]
 2673 0120 013B     		subs	r3, r3, #1
 2674 0122 DBB2     		uxtb	r3, r3
 2675 0124 DBB2     		uxtb	r3, r3
 2676 0126 63F01F03 		orn	r3, r3, #31
 2677 012a DBB2     		uxtb	r3, r3
 2678 012c DBB2     		uxtb	r3, r3
 2679 012e 3B74     		strb	r3, [r7, #16]
 683:.\Protocolo.c **** 		buffer[5]=0xF7;		
 2680              		.loc 1 683 0
 2681 0130 F723     		movs	r3, #247
 2682 0132 7B74     		strb	r3, [r7, #17]
 684:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 2683              		.loc 1 684 0
 2684 0134 0623     		movs	r3, #6
 2685 0136 BB77     		strb	r3, [r7, #30]
 2686 0138 10E0     		b	.L139
 2687              	.L140:
 685:.\Protocolo.c **** 			buffer[x]=(0xE0|precio[x-6]);
 2688              		.loc 1 685 0 discriminator 3
 2689 013a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2690 013c BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2691 013e 063A     		subs	r2, r2, #6
 2692 0140 3968     		ldr	r1, [r7]
 2693 0142 0A44     		add	r2, r2, r1
 2694 0144 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2695 0146 62F01F02 		orn	r2, r2, #31
 2696 014a D2B2     		uxtb	r2, r2
 2697 014c 07F12001 		add	r1, r7, #32
 2698 0150 0B44     		add	r3, r3, r1
 2699 0152 03F8142C 		strb	r2, [r3, #-20]
 684:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 2700              		.loc 1 684 0 discriminator 3
 2701 0156 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2702 0158 0133     		adds	r3, r3, #1
 2703 015a BB77     		strb	r3, [r7, #30]
 2704              	.L139:
 684:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 2705              		.loc 1 684 0 is_stmt 0 discriminator 1
 2706 015c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2707 015e 0A2B     		cmp	r3, #10
 2708 0160 EBD9     		bls	.L140
 686:.\Protocolo.c **** 		}
 687:.\Protocolo.c **** 		buffer[11]=0xE0;
 2709              		.loc 1 687 0 is_stmt 1
 2710 0162 E023     		movs	r3, #224
 2711 0164 FB75     		strb	r3, [r7, #23]
 688:.\Protocolo.c **** 		buffer[12]=0xFB;
 2712              		.loc 1 688 0
 2713 0166 FB23     		movs	r3, #251
 2714 0168 3B76     		strb	r3, [r7, #24]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 62


 689:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 2715              		.loc 1 689 0
 2716 016a 0023     		movs	r3, #0
 2717 016c BB77     		strb	r3, [r7, #30]
 2718 016e 0FE0     		b	.L141
 2719              	.L142:
 690:.\Protocolo.c **** 			buffer[13]+=(buffer[x]&0x0F);	
 2720              		.loc 1 690 0 discriminator 3
 2721 0170 7A7E     		ldrb	r2, [r7, #25]	@ zero_extendqisi2
 2722 0172 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2723 0174 07F12001 		add	r1, r7, #32
 2724 0178 0B44     		add	r3, r3, r1
 2725 017a 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 2726 017e 03F00F03 		and	r3, r3, #15
 2727 0182 DBB2     		uxtb	r3, r3
 2728 0184 1344     		add	r3, r3, r2
 2729 0186 DBB2     		uxtb	r3, r3
 2730 0188 7B76     		strb	r3, [r7, #25]
 689:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 2731              		.loc 1 689 0 discriminator 3
 2732 018a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2733 018c 0133     		adds	r3, r3, #1
 2734 018e BB77     		strb	r3, [r7, #30]
 2735              	.L141:
 689:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 2736              		.loc 1 689 0 is_stmt 0 discriminator 1
 2737 0190 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2738 0192 0C2B     		cmp	r3, #12
 2739 0194 ECD9     		bls	.L142
 691:.\Protocolo.c **** 		}
 692:.\Protocolo.c **** 		buffer[13]=(((~buffer[13])+1)&0x0F)|0xE0;
 2740              		.loc 1 692 0 is_stmt 1
 2741 0196 7B7E     		ldrb	r3, [r7, #25]	@ zero_extendqisi2
 2742 0198 5B42     		negs	r3, r3
 2743 019a DBB2     		uxtb	r3, r3
 2744 019c DBB2     		uxtb	r3, r3
 2745 019e 03F00F03 		and	r3, r3, #15
 2746 01a2 DBB2     		uxtb	r3, r3
 2747 01a4 63F01F03 		orn	r3, r3, #31
 2748 01a8 DBB2     		uxtb	r3, r3
 2749 01aa DBB2     		uxtb	r3, r3
 2750 01ac 7B76     		strb	r3, [r7, #25]
 693:.\Protocolo.c **** 		buffer[14]=0xF0;
 2751              		.loc 1 693 0
 2752 01ae F023     		movs	r3, #240
 2753 01b0 BB76     		strb	r3, [r7, #26]
 694:.\Protocolo.c **** 		size=14;
 2754              		.loc 1 694 0
 2755 01b2 0E23     		movs	r3, #14
 2756 01b4 FB77     		strb	r3, [r7, #31]
 2757              	.L138:
 695:.\Protocolo.c **** 	}
 696:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 2758              		.loc 1 696 0
 2759 01b6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 697:.\Protocolo.c **** 	Surtidor_PutChar(0x20|dir);
 2760              		.loc 1 697 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 63


 2761 01ba FB79     		ldrb	r3, [r7, #7]
 2762 01bc 43F02003 		orr	r3, r3, #32
 2763 01c0 DBB2     		uxtb	r3, r3
 2764 01c2 1846     		mov	r0, r3
 2765 01c4 FFF7FEFF 		bl	Surtidor_PutChar
 698:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 2766              		.loc 1 698 0
 2767 01c8 2A48     		ldr	r0, .L151+4
 2768 01ca FFF7FEFF 		bl	isr_1_StartEx
 699:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 2769              		.loc 1 699 0
 2770 01ce FFF7FEFF 		bl	Timer_RxSurtidor_Start
 700:.\Protocolo.c ****     rx_timeout=0;
 2771              		.loc 1 700 0
 2772 01d2 294B     		ldr	r3, .L151+8
 2773 01d4 0022     		movs	r2, #0
 2774 01d6 1A70     		strb	r2, [r3]
 701:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 2775              		.loc 1 701 0
 2776 01d8 0BE0     		b	.L143
 2777              	.L145:
 702:.\Protocolo.c **** 		if(rx_timeout==1){
 2778              		.loc 1 702 0
 2779 01da 274B     		ldr	r3, .L151+8
 2780 01dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2781 01de 012B     		cmp	r3, #1
 2782 01e0 07D1     		bne	.L143
 703:.\Protocolo.c **** 			isr_1_Stop();
 2783              		.loc 1 703 0
 2784 01e2 FFF7FEFF 		bl	isr_1_Stop
 704:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 2785              		.loc 1 704 0
 2786 01e6 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 705:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 2787              		.loc 1 705 0
 2788 01ea FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 706:.\Protocolo.c **** 			return 0;
 2789              		.loc 1 706 0
 2790 01ee 0023     		movs	r3, #0
 2791 01f0 39E0     		b	.L150
 2792              	.L143:
 701:.\Protocolo.c **** 		if(rx_timeout==1){
 2793              		.loc 1 701 0
 2794 01f2 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2795 01f6 0346     		mov	r3, r0
 2796 01f8 002B     		cmp	r3, #0
 2797 01fa EED0     		beq	.L145
 707:.\Protocolo.c **** 		}
 708:.\Protocolo.c **** 	}
 709:.\Protocolo.c **** 	isr_1_Stop();
 2798              		.loc 1 709 0
 2799 01fc FFF7FEFF 		bl	isr_1_Stop
 710:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();
 2800              		.loc 1 710 0
 2801 0200 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 711:.\Protocolo.c **** 	if(Surtidor_ReadRxData()==(0xD0|dir)){
 2802              		.loc 1 711 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 64


 2803 0204 FFF7FEFF 		bl	Surtidor_ReadRxData
 2804 0208 0346     		mov	r3, r0
 2805 020a 1A46     		mov	r2, r3
 2806 020c FB79     		ldrb	r3, [r7, #7]
 2807 020e 63F02F03 		orn	r3, r3, #47
 2808 0212 DBB2     		uxtb	r3, r3
 2809 0214 9A42     		cmp	r2, r3
 2810 0216 25D1     		bne	.L146
 712:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 2811              		.loc 1 712 0
 2812 0218 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 713:.\Protocolo.c **** 		CyDelay(10);
 2813              		.loc 1 713 0
 2814 021c 0A20     		movs	r0, #10
 2815 021e FFF7FEFF 		bl	CyDelay
 714:.\Protocolo.c ****         for(x=0;x<=size;x++){
 2816              		.loc 1 714 0
 2817 0222 0023     		movs	r3, #0
 2818 0224 BB77     		strb	r3, [r7, #30]
 2819 0226 0BE0     		b	.L147
 2820              	.L148:
 715:.\Protocolo.c ****            	Surtidor_PutChar(buffer[x]);
 2821              		.loc 1 715 0 discriminator 3
 2822 0228 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2823 022a 07F12002 		add	r2, r7, #32
 2824 022e 1344     		add	r3, r3, r2
 2825 0230 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 2826 0234 1846     		mov	r0, r3
 2827 0236 FFF7FEFF 		bl	Surtidor_PutChar
 714:.\Protocolo.c ****         for(x=0;x<=size;x++){
 2828              		.loc 1 714 0 discriminator 3
 2829 023a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2830 023c 0133     		adds	r3, r3, #1
 2831 023e BB77     		strb	r3, [r7, #30]
 2832              	.L147:
 714:.\Protocolo.c ****         for(x=0;x<=size;x++){
 2833              		.loc 1 714 0 is_stmt 0 discriminator 1
 2834 0240 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2835 0242 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2836 0244 9A42     		cmp	r2, r3
 2837 0246 EFD9     		bls	.L148
 716:.\Protocolo.c ****         }
 717:.\Protocolo.c **** 		CyDelay(50);		
 2838              		.loc 1 717 0 is_stmt 1
 2839 0248 3220     		movs	r0, #50
 2840 024a FFF7FEFF 		bl	CyDelay
 718:.\Protocolo.c **** 		if(get_estado(dir)==0){
 2841              		.loc 1 718 0
 2842 024e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2843 0250 1846     		mov	r0, r3
 2844 0252 FFF7FEFF 		bl	get_estado
 2845 0256 0346     		mov	r3, r0
 2846 0258 002B     		cmp	r3, #0
 2847 025a 01D1     		bne	.L149
 719:.\Protocolo.c **** 			return 0;
 2848              		.loc 1 719 0
 2849 025c 0023     		movs	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 65


 2850 025e 02E0     		b	.L150
 2851              	.L149:
 720:.\Protocolo.c **** 		}
 721:.\Protocolo.c **** 		else{
 722:.\Protocolo.c **** 			return 1;
 2852              		.loc 1 722 0
 2853 0260 0123     		movs	r3, #1
 2854 0262 00E0     		b	.L150
 2855              	.L146:
 723:.\Protocolo.c **** 		}
 724:.\Protocolo.c **** 	}
 725:.\Protocolo.c **** 	else{
 726:.\Protocolo.c **** 		return 0;
 2856              		.loc 1 726 0
 2857 0264 0023     		movs	r3, #0
 2858              	.L150:
 727:.\Protocolo.c **** 	}
 728:.\Protocolo.c **** }
 2859              		.loc 1 728 0 discriminator 1
 2860 0266 1846     		mov	r0, r3
 2861 0268 2037     		adds	r7, r7, #32
 2862              		.cfi_def_cfa_offset 8
 2863 026a BD46     		mov	sp, r7
 2864              		.cfi_def_cfa_register 13
 2865              		@ sp needed
 2866 026c 80BD     		pop	{r7, pc}
 2867              	.L152:
 2868 026e 00BF     		.align	2
 2869              	.L151:
 2870 0270 00000000 		.word	version
 2871 0274 00000000 		.word	Rx_Surtidor
 2872 0278 00000000 		.word	rx_timeout
 2873              		.cfi_endproc
 2874              	.LFE71:
 2875              		.size	cambiar_precio, .-cambiar_precio
 2876              		.section	.text.totales,"ax",%progbits
 2877              		.align	2
 2878              		.global	totales
 2879              		.thumb
 2880              		.thumb_func
 2881              		.type	totales, %function
 2882              	totales:
 2883              	.LFB72:
 729:.\Protocolo.c **** 
 730:.\Protocolo.c **** /*
 731:.\Protocolo.c **** ***************************************************************************************************
 732:.\Protocolo.c **** *                                         uint8 totales(uint8 dir)
 733:.\Protocolo.c **** *
 734:.\Protocolo.c **** * Description : 
 735:.\Protocolo.c **** *               
 736:.\Protocolo.c **** *
 737:.\Protocolo.c **** * Argument(s) : none
 738:.\Protocolo.c **** *
 739:.\Protocolo.c **** * Return(s)   : none
 740:.\Protocolo.c **** *
 741:.\Protocolo.c **** * Caller(s)   : 
 742:.\Protocolo.c **** *
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 66


 743:.\Protocolo.c **** * Note(s)     : none.
 744:.\Protocolo.c **** ***************************************************************************************************
 745:.\Protocolo.c **** */
 746:.\Protocolo.c **** uint8 totales(uint8 dir, uint8 nmangueras){
 2884              		.loc 1 746 0
 2885              		.cfi_startproc
 2886              		@ args = 0, pretend = 0, frame = 16
 2887              		@ frame_needed = 1, uses_anonymous_args = 0
 2888 0000 80B5     		push	{r7, lr}
 2889              		.cfi_def_cfa_offset 8
 2890              		.cfi_offset 7, -8
 2891              		.cfi_offset 14, -4
 2892 0002 84B0     		sub	sp, sp, #16
 2893              		.cfi_def_cfa_offset 24
 2894 0004 00AF     		add	r7, sp, #0
 2895              		.cfi_def_cfa_register 7
 2896 0006 0346     		mov	r3, r0
 2897 0008 0A46     		mov	r2, r1
 2898 000a FB71     		strb	r3, [r7, #7]
 2899 000c 1346     		mov	r3, r2
 2900 000e BB71     		strb	r3, [r7, #6]
 747:.\Protocolo.c **** 	uint8 x,y;
 748:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 2901              		.loc 1 748 0
 2902 0010 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 749:.\Protocolo.c ****     Surtidor_PutChar(0x50|dir);
 2903              		.loc 1 749 0
 2904 0014 FB79     		ldrb	r3, [r7, #7]
 2905 0016 43F05003 		orr	r3, r3, #80
 2906 001a DBB2     		uxtb	r3, r3
 2907 001c 1846     		mov	r0, r3
 2908 001e FFF7FEFF 		bl	Surtidor_PutChar
 750:.\Protocolo.c ****     rx_timeout=0;
 2909              		.loc 1 750 0
 2910 0022 B04B     		ldr	r3, .L355
 2911 0024 0022     		movs	r2, #0
 2912 0026 1A70     		strb	r2, [r3]
 751:.\Protocolo.c **** 	CyDelay(300);
 2913              		.loc 1 751 0
 2914 0028 4FF49670 		mov	r0, #300
 2915 002c FFF7FEFF 		bl	CyDelay
 752:.\Protocolo.c **** 	if(Surtidor_GetRxBufferSize()>=1){
 2916              		.loc 1 752 0
 2917 0030 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2918 0034 0346     		mov	r3, r0
 2919 0036 002B     		cmp	r3, #0
 2920 0038 01F02280 		beq	.L154
 753:.\Protocolo.c **** 		if(dir==lado1.dir){
 2921              		.loc 1 753 0
 2922 003c AA4B     		ldr	r3, .L355+4
 2923 003e 1B78     		ldrb	r3, [r3]
 2924 0040 DBB2     		uxtb	r3, r3
 2925 0042 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2926 0044 9A42     		cmp	r2, r3
 2927 0046 40F01F84 		bne	.L155
 754:.\Protocolo.c **** 			if(version[1]!=7){
 2928              		.loc 1 754 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 67


 2929 004a A84B     		ldr	r3, .L355+8
 2930 004c 5B78     		ldrb	r3, [r3, #1]
 2931 004e DBB2     		uxtb	r3, r3
 2932 0050 072B     		cmp	r3, #7
 2933 0052 00F00C82 		beq	.L156
 755:.\Protocolo.c **** 				CyDelay(900);
 2934              		.loc 1 755 0
 2935 0056 4FF46170 		mov	r0, #900
 2936 005a FFF7FEFF 		bl	CyDelay
 756:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 2937              		.loc 1 756 0
 2938 005e FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2939 0062 0346     		mov	r3, r0
 2940 0064 FB73     		strb	r3, [r7, #15]
 757:.\Protocolo.c **** 				if((x==34)||(x==64)||(x==94)){
 2941              		.loc 1 757 0
 2942 0066 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2943 0068 222B     		cmp	r3, #34
 2944 006a 06D0     		beq	.L157
 2945              		.loc 1 757 0 is_stmt 0 discriminator 1
 2946 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2947 006e 402B     		cmp	r3, #64
 2948 0070 03D0     		beq	.L157
 2949              		.loc 1 757 0 discriminator 2
 2950 0072 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2951 0074 5E2B     		cmp	r3, #94
 2952 0076 40F0F581 		bne	.L158
 2953              	.L157:
 758:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9))  
 2954              		.loc 1 758 0 is_stmt 1
 2955 007a 9D4B     		ldr	r3, .L355+12
 2956 007c 1B78     		ldrb	r3, [r3]
 2957 007e DBB2     		uxtb	r3, r3
 2958 0080 FF2B     		cmp	r3, #255
 2959 0082 40F0EA81 		bne	.L159
 2960              		.loc 1 758 0 is_stmt 0 discriminator 1
 2961 0086 9A4B     		ldr	r3, .L355+12
 2962 0088 5B78     		ldrb	r3, [r3, #1]
 2963 008a DBB2     		uxtb	r3, r3
 2964 008c F62B     		cmp	r3, #246
 2965 008e 40F0E481 		bne	.L159
 2966              		.loc 1 758 0 discriminator 2
 2967 0092 974B     		ldr	r3, .L355+12
 2968 0094 DB78     		ldrb	r3, [r3, #3]
 2969 0096 DBB2     		uxtb	r3, r3
 2970 0098 F92B     		cmp	r3, #249
 2971 009a 40F0DE81 		bne	.L159
 759:.\Protocolo.c ****                     {                     
 760:.\Protocolo.c ****                     	for(y=0;y<=2;y++){// MOD: inicializa valores en cero
 2972              		.loc 1 760 0 is_stmt 1
 2973 009e 0023     		movs	r3, #0
 2974 00a0 BB73     		strb	r3, [r7, #14]
 2975 00a2 16E0     		b	.L160
 2976              	.L163:
 761:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 2977              		.loc 1 761 0
 2978 00a4 0023     		movs	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 68


 2979 00a6 FB73     		strb	r3, [r7, #15]
 2980 00a8 0DE0     		b	.L161
 2981              	.L162:
 762:.\Protocolo.c ****                     			lado1.totales[y][x]=0;
 2982              		.loc 1 762 0 discriminator 3
 2983 00aa BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 2984 00ac F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 2985 00ae 8E48     		ldr	r0, .L355+4
 2986 00b0 1346     		mov	r3, r2
 2987 00b2 5B00     		lsls	r3, r3, #1
 2988 00b4 1344     		add	r3, r3, r2
 2989 00b6 DB00     		lsls	r3, r3, #3
 2990 00b8 0B44     		add	r3, r3, r1
 2991 00ba 0344     		add	r3, r3, r0
 2992 00bc 0022     		movs	r2, #0
 2993 00be 9A70     		strb	r2, [r3, #2]
 761:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 2994              		.loc 1 761 0 discriminator 3
 2995 00c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2996 00c2 0133     		adds	r3, r3, #1
 2997 00c4 FB73     		strb	r3, [r7, #15]
 2998              	.L161:
 761:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 2999              		.loc 1 761 0 is_stmt 0 discriminator 1
 3000 00c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3001 00c8 172B     		cmp	r3, #23
 3002 00ca EED9     		bls	.L162
 760:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3003              		.loc 1 760 0 is_stmt 1 discriminator 2
 3004 00cc BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3005 00ce 0133     		adds	r3, r3, #1
 3006 00d0 BB73     		strb	r3, [r7, #14]
 3007              	.L160:
 760:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3008              		.loc 1 760 0 is_stmt 0 discriminator 1
 3009 00d2 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3010 00d4 022B     		cmp	r3, #2
 3011 00d6 E5D9     		bls	.L163
 763:.\Protocolo.c ****                     		}
 764:.\Protocolo.c ****                     	}                        
 765:.\Protocolo.c **** 						for(x=0;x<=7;x++){///producto 1 6xto digito
 3012              		.loc 1 765 0 is_stmt 1
 3013 00d8 0023     		movs	r3, #0
 3014 00da FB73     		strb	r3, [r7, #15]
 3015 00dc 21E0     		b	.L164
 3016              	.L168:
 766:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3017              		.loc 1 766 0
 3018 00de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3019 00e0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3020 00e2 0432     		adds	r2, r2, #4
 3021 00e4 8249     		ldr	r1, .L355+12
 3022 00e6 8A5C     		ldrb	r2, [r1, r2]
 3023 00e8 D1B2     		uxtb	r1, r2
 3024 00ea 7F4A     		ldr	r2, .L355+4
 3025 00ec 1344     		add	r3, r3, r2
 3026 00ee 0A46     		mov	r2, r1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 69


 3027 00f0 9A70     		strb	r2, [r3, #2]
 767:.\Protocolo.c ****                             ///////////''modificacion actual''//// Se añade esta verificacion para
 768:.\Protocolo.c **** 							if(lado1.totales[0][x]==0||(lado1.totales[0][x]&0xF0)!=0xE0){
 3028              		.loc 1 768 0
 3029 00f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3030 00f4 7C4A     		ldr	r2, .L355+4
 3031 00f6 1344     		add	r3, r3, r2
 3032 00f8 9B78     		ldrb	r3, [r3, #2]
 3033 00fa DBB2     		uxtb	r3, r3
 3034 00fc 002B     		cmp	r3, #0
 3035 00fe 08D0     		beq	.L165
 3036              		.loc 1 768 0 is_stmt 0 discriminator 1
 3037 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3038 0102 794A     		ldr	r2, .L355+4
 3039 0104 1344     		add	r3, r3, r2
 3040 0106 9B78     		ldrb	r3, [r3, #2]
 3041 0108 DBB2     		uxtb	r3, r3
 3042 010a 03F0F003 		and	r3, r3, #240
 3043 010e E02B     		cmp	r3, #224
 3044 0110 04D0     		beq	.L166
 3045              	.L165:
 769:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3046              		.loc 1 769 0 is_stmt 1
 3047 0112 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 770:.\Protocolo.c **** 								return 0;
 3048              		.loc 1 770 0
 3049 0116 0023     		movs	r3, #0
 3050 0118 00F0B3BF 		b	.L167
 3051              	.L166:
 765:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3052              		.loc 1 765 0 discriminator 2
 3053 011c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3054 011e 0133     		adds	r3, r3, #1
 3055 0120 FB73     		strb	r3, [r7, #15]
 3056              	.L164:
 765:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3057              		.loc 1 765 0 is_stmt 0 discriminator 1
 3058 0122 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3059 0124 072B     		cmp	r3, #7
 3060 0126 DAD9     		bls	.L168
 771:.\Protocolo.c **** 							}
 772:.\Protocolo.c ****                             ///////////''modificacion actual''////
 773:.\Protocolo.c **** 						}
 774:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 3061              		.loc 1 774 0 is_stmt 1
 3062 0128 0023     		movs	r3, #0
 3063 012a FB73     		strb	r3, [r7, #15]
 3064 012c 24E0     		b	.L169
 3065              	.L172:
 775:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 3066              		.loc 1 775 0
 3067 012e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3068 0130 0C33     		adds	r3, r3, #12
 3069 0132 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3070 0134 0D32     		adds	r2, r2, #13
 3071 0136 6E49     		ldr	r1, .L355+12
 3072 0138 8A5C     		ldrb	r2, [r1, r2]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 70


 3073 013a D1B2     		uxtb	r1, r2
 3074 013c 6A4A     		ldr	r2, .L355+4
 3075 013e 1344     		add	r3, r3, r2
 3076 0140 0A46     		mov	r2, r1
 3077 0142 9A70     		strb	r2, [r3, #2]
 776:.\Protocolo.c **** 							if(lado1.totales[0][x+12]==0||(lado1.totales[0][x+12]&0xF0)!=0xE0){
 3078              		.loc 1 776 0
 3079 0144 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3080 0146 0C33     		adds	r3, r3, #12
 3081 0148 674A     		ldr	r2, .L355+4
 3082 014a 1344     		add	r3, r3, r2
 3083 014c 9B78     		ldrb	r3, [r3, #2]
 3084 014e DBB2     		uxtb	r3, r3
 3085 0150 002B     		cmp	r3, #0
 3086 0152 09D0     		beq	.L170
 3087              		.loc 1 776 0 is_stmt 0 discriminator 1
 3088 0154 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3089 0156 0C33     		adds	r3, r3, #12
 3090 0158 634A     		ldr	r2, .L355+4
 3091 015a 1344     		add	r3, r3, r2
 3092 015c 9B78     		ldrb	r3, [r3, #2]
 3093 015e DBB2     		uxtb	r3, r3
 3094 0160 03F0F003 		and	r3, r3, #240
 3095 0164 E02B     		cmp	r3, #224
 3096 0166 04D0     		beq	.L171
 3097              	.L170:
 777:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3098              		.loc 1 777 0 is_stmt 1
 3099 0168 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 778:.\Protocolo.c **** 								return 0;
 3100              		.loc 1 778 0
 3101 016c 0023     		movs	r3, #0
 3102 016e 00F088BF 		b	.L167
 3103              	.L171:
 774:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 3104              		.loc 1 774 0 discriminator 2
 3105 0172 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3106 0174 0133     		adds	r3, r3, #1
 3107 0176 FB73     		strb	r3, [r7, #15]
 3108              	.L169:
 774:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 3109              		.loc 1 774 0 is_stmt 0 discriminator 1
 3110 0178 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3111 017a 072B     		cmp	r3, #7
 3112 017c D7D9     		bls	.L172
 779:.\Protocolo.c **** 							}							
 780:.\Protocolo.c **** 						}
 781:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 3113              		.loc 1 781 0 is_stmt 1
 3114 017e 0023     		movs	r3, #0
 3115 0180 FB73     		strb	r3, [r7, #15]
 3116 0182 0DE0     		b	.L173
 3117              	.L174:
 782:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+22];							
 3118              		.loc 1 782 0 discriminator 3
 3119 0184 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3120 0186 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 71


 3121 0188 1632     		adds	r2, r2, #22
 3122 018a 5949     		ldr	r1, .L355+12
 3123 018c 8A5C     		ldrb	r2, [r1, r2]
 3124 018e D1B2     		uxtb	r1, r2
 3125 0190 554A     		ldr	r2, .L355+4
 3126 0192 1344     		add	r3, r3, r2
 3127 0194 0A46     		mov	r2, r1
 3128 0196 83F84A20 		strb	r2, [r3, #74]
 781:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+22];							
 3129              		.loc 1 781 0 discriminator 3
 3130 019a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3131 019c 0133     		adds	r3, r3, #1
 3132 019e FB73     		strb	r3, [r7, #15]
 3133              	.L173:
 781:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+22];							
 3134              		.loc 1 781 0 is_stmt 0 discriminator 1
 3135 01a0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3136 01a2 032B     		cmp	r3, #3
 3137 01a4 EED9     		bls	.L174
 783:.\Protocolo.c **** 						}					
 784:.\Protocolo.c **** 						if(nmangueras==2){
 3138              		.loc 1 784 0 is_stmt 1
 3139 01a6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3140 01a8 022B     		cmp	r3, #2
 3141 01aa 6BD1     		bne	.L175
 785:.\Protocolo.c **** 							for(x=0;x<=7;x++){ ///producto 2
 3142              		.loc 1 785 0
 3143 01ac 0023     		movs	r3, #0
 3144 01ae FB73     		strb	r3, [r7, #15]
 3145 01b0 21E0     		b	.L176
 3146              	.L179:
 786:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3147              		.loc 1 786 0
 3148 01b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3149 01b4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3150 01b6 2232     		adds	r2, r2, #34
 3151 01b8 4D49     		ldr	r1, .L355+12
 3152 01ba 8A5C     		ldrb	r2, [r1, r2]
 3153 01bc D1B2     		uxtb	r1, r2
 3154 01be 4A4A     		ldr	r2, .L355+4
 3155 01c0 1344     		add	r3, r3, r2
 3156 01c2 0A46     		mov	r2, r1
 3157 01c4 9A76     		strb	r2, [r3, #26]
 787:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3158              		.loc 1 787 0
 3159 01c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3160 01c8 474A     		ldr	r2, .L355+4
 3161 01ca 1344     		add	r3, r3, r2
 3162 01cc 9B7E     		ldrb	r3, [r3, #26]
 3163 01ce DBB2     		uxtb	r3, r3
 3164 01d0 002B     		cmp	r3, #0
 3165 01d2 08D0     		beq	.L177
 3166              		.loc 1 787 0 is_stmt 0 discriminator 1
 3167 01d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3168 01d6 444A     		ldr	r2, .L355+4
 3169 01d8 1344     		add	r3, r3, r2
 3170 01da 9B7E     		ldrb	r3, [r3, #26]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 72


 3171 01dc DBB2     		uxtb	r3, r3
 3172 01de 03F0F003 		and	r3, r3, #240
 3173 01e2 E02B     		cmp	r3, #224
 3174 01e4 04D0     		beq	.L178
 3175              	.L177:
 788:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3176              		.loc 1 788 0 is_stmt 1
 3177 01e6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 789:.\Protocolo.c **** 									return 0;
 3178              		.loc 1 789 0
 3179 01ea 0023     		movs	r3, #0
 3180 01ec 00F049BF 		b	.L167
 3181              	.L178:
 785:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3182              		.loc 1 785 0 discriminator 2
 3183 01f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3184 01f2 0133     		adds	r3, r3, #1
 3185 01f4 FB73     		strb	r3, [r7, #15]
 3186              	.L176:
 785:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3187              		.loc 1 785 0 is_stmt 0 discriminator 1
 3188 01f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3189 01f8 072B     		cmp	r3, #7
 3190 01fa DAD9     		bls	.L179
 790:.\Protocolo.c **** 								}								
 791:.\Protocolo.c **** 							}
 792:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3191              		.loc 1 792 0 is_stmt 1
 3192 01fc 0023     		movs	r3, #0
 3193 01fe FB73     		strb	r3, [r7, #15]
 3194 0200 24E0     		b	.L180
 3195              	.L183:
 793:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3196              		.loc 1 793 0
 3197 0202 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3198 0204 0C33     		adds	r3, r3, #12
 3199 0206 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3200 0208 2B32     		adds	r2, r2, #43
 3201 020a 3949     		ldr	r1, .L355+12
 3202 020c 8A5C     		ldrb	r2, [r1, r2]
 3203 020e D1B2     		uxtb	r1, r2
 3204 0210 354A     		ldr	r2, .L355+4
 3205 0212 1344     		add	r3, r3, r2
 3206 0214 0A46     		mov	r2, r1
 3207 0216 9A76     		strb	r2, [r3, #26]
 794:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3208              		.loc 1 794 0
 3209 0218 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3210 021a 0C33     		adds	r3, r3, #12
 3211 021c 324A     		ldr	r2, .L355+4
 3212 021e 1344     		add	r3, r3, r2
 3213 0220 9B7E     		ldrb	r3, [r3, #26]
 3214 0222 DBB2     		uxtb	r3, r3
 3215 0224 002B     		cmp	r3, #0
 3216 0226 09D0     		beq	.L181
 3217              		.loc 1 794 0 is_stmt 0 discriminator 1
 3218 0228 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 73


 3219 022a 0C33     		adds	r3, r3, #12
 3220 022c 2E4A     		ldr	r2, .L355+4
 3221 022e 1344     		add	r3, r3, r2
 3222 0230 9B7E     		ldrb	r3, [r3, #26]
 3223 0232 DBB2     		uxtb	r3, r3
 3224 0234 03F0F003 		and	r3, r3, #240
 3225 0238 E02B     		cmp	r3, #224
 3226 023a 04D0     		beq	.L182
 3227              	.L181:
 795:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3228              		.loc 1 795 0 is_stmt 1
 3229 023c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 796:.\Protocolo.c **** 									return 0;
 3230              		.loc 1 796 0
 3231 0240 0023     		movs	r3, #0
 3232 0242 00F01EBF 		b	.L167
 3233              	.L182:
 792:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3234              		.loc 1 792 0 discriminator 2
 3235 0246 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3236 0248 0133     		adds	r3, r3, #1
 3237 024a FB73     		strb	r3, [r7, #15]
 3238              	.L180:
 792:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3239              		.loc 1 792 0 is_stmt 0 discriminator 1
 3240 024c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3241 024e 072B     		cmp	r3, #7
 3242 0250 D7D9     		bls	.L183
 797:.\Protocolo.c **** 								}								
 798:.\Protocolo.c **** 							}
 799:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3243              		.loc 1 799 0 is_stmt 1
 3244 0252 0023     		movs	r3, #0
 3245 0254 FB73     		strb	r3, [r7, #15]
 3246 0256 0DE0     		b	.L184
 3247              	.L185:
 800:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3248              		.loc 1 800 0 discriminator 3
 3249 0258 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3250 025a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3251 025c 3432     		adds	r2, r2, #52
 3252 025e 2449     		ldr	r1, .L355+12
 3253 0260 8A5C     		ldrb	r2, [r1, r2]
 3254 0262 D1B2     		uxtb	r1, r2
 3255 0264 204A     		ldr	r2, .L355+4
 3256 0266 1344     		add	r3, r3, r2
 3257 0268 0A46     		mov	r2, r1
 3258 026a 83F84F20 		strb	r2, [r3, #79]
 799:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3259              		.loc 1 799 0 discriminator 3
 3260 026e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3261 0270 0133     		adds	r3, r3, #1
 3262 0272 FB73     		strb	r3, [r7, #15]
 3263              	.L184:
 799:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3264              		.loc 1 799 0 is_stmt 0 discriminator 1
 3265 0274 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 74


 3266 0276 032B     		cmp	r3, #3
 3267 0278 EED9     		bls	.L185
 801:.\Protocolo.c **** 							}	
 802:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3268              		.loc 1 802 0 is_stmt 1
 3269 027a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 803:.\Protocolo.c ****     						return 2;                            
 3270              		.loc 1 803 0
 3271 027e 0223     		movs	r3, #2
 3272 0280 00F0FFBE 		b	.L167
 3273              	.L175:
 804:.\Protocolo.c **** 						}
 805:.\Protocolo.c **** 						if(nmangueras==3){
 3274              		.loc 1 805 0
 3275 0284 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3276 0286 032B     		cmp	r3, #3
 3277 0288 40F0E280 		bne	.L186
 806:.\Protocolo.c **** 							for(x=0;x<=7;x++){///producto 2
 3278              		.loc 1 806 0
 3279 028c 0023     		movs	r3, #0
 3280 028e FB73     		strb	r3, [r7, #15]
 3281 0290 21E0     		b	.L187
 3282              	.L190:
 807:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3283              		.loc 1 807 0
 3284 0292 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3285 0294 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3286 0296 2232     		adds	r2, r2, #34
 3287 0298 1549     		ldr	r1, .L355+12
 3288 029a 8A5C     		ldrb	r2, [r1, r2]
 3289 029c D1B2     		uxtb	r1, r2
 3290 029e 124A     		ldr	r2, .L355+4
 3291 02a0 1344     		add	r3, r3, r2
 3292 02a2 0A46     		mov	r2, r1
 3293 02a4 9A76     		strb	r2, [r3, #26]
 808:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3294              		.loc 1 808 0
 3295 02a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3296 02a8 0F4A     		ldr	r2, .L355+4
 3297 02aa 1344     		add	r3, r3, r2
 3298 02ac 9B7E     		ldrb	r3, [r3, #26]
 3299 02ae DBB2     		uxtb	r3, r3
 3300 02b0 002B     		cmp	r3, #0
 3301 02b2 08D0     		beq	.L188
 3302              		.loc 1 808 0 is_stmt 0 discriminator 1
 3303 02b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3304 02b6 0C4A     		ldr	r2, .L355+4
 3305 02b8 1344     		add	r3, r3, r2
 3306 02ba 9B7E     		ldrb	r3, [r3, #26]
 3307 02bc DBB2     		uxtb	r3, r3
 3308 02be 03F0F003 		and	r3, r3, #240
 3309 02c2 E02B     		cmp	r3, #224
 3310 02c4 04D0     		beq	.L189
 3311              	.L188:
 809:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3312              		.loc 1 809 0 is_stmt 1
 3313 02c6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 75


 810:.\Protocolo.c **** 									return 0;
 3314              		.loc 1 810 0
 3315 02ca 0023     		movs	r3, #0
 3316 02cc 00F0D9BE 		b	.L167
 3317              	.L189:
 806:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3318              		.loc 1 806 0 discriminator 2
 3319 02d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3320 02d2 0133     		adds	r3, r3, #1
 3321 02d4 FB73     		strb	r3, [r7, #15]
 3322              	.L187:
 806:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3323              		.loc 1 806 0 is_stmt 0 discriminator 1
 3324 02d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3325 02d8 072B     		cmp	r3, #7
 3326 02da DAD9     		bls	.L190
 811:.\Protocolo.c **** 								}								
 812:.\Protocolo.c **** 							}
 813:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3327              		.loc 1 813 0 is_stmt 1
 3328 02dc 0023     		movs	r3, #0
 3329 02de FB73     		strb	r3, [r7, #15]
 3330 02e0 2DE0     		b	.L191
 3331              	.L356:
 3332 02e2 00BF     		.align	2
 3333              	.L355:
 3334 02e4 00000000 		.word	rx_timeout
 3335 02e8 00000000 		.word	lado1
 3336 02ec 00000000 		.word	version
 3337 02f0 00000000 		.word	Surtidor_rxBuffer
 3338              	.L194:
 814:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3339              		.loc 1 814 0
 3340 02f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3341 02f6 0C33     		adds	r3, r3, #12
 3342 02f8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3343 02fa 2B32     		adds	r2, r2, #43
 3344 02fc B349     		ldr	r1, .L357
 3345 02fe 8A5C     		ldrb	r2, [r1, r2]
 3346 0300 D1B2     		uxtb	r1, r2
 3347 0302 B34A     		ldr	r2, .L357+4
 3348 0304 1344     		add	r3, r3, r2
 3349 0306 0A46     		mov	r2, r1
 3350 0308 9A76     		strb	r2, [r3, #26]
 815:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3351              		.loc 1 815 0
 3352 030a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3353 030c 0C33     		adds	r3, r3, #12
 3354 030e B04A     		ldr	r2, .L357+4
 3355 0310 1344     		add	r3, r3, r2
 3356 0312 9B7E     		ldrb	r3, [r3, #26]
 3357 0314 DBB2     		uxtb	r3, r3
 3358 0316 002B     		cmp	r3, #0
 3359 0318 09D0     		beq	.L192
 3360              		.loc 1 815 0 is_stmt 0 discriminator 1
 3361 031a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3362 031c 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 76


 3363 031e AC4A     		ldr	r2, .L357+4
 3364 0320 1344     		add	r3, r3, r2
 3365 0322 9B7E     		ldrb	r3, [r3, #26]
 3366 0324 DBB2     		uxtb	r3, r3
 3367 0326 03F0F003 		and	r3, r3, #240
 3368 032a E02B     		cmp	r3, #224
 3369 032c 04D0     		beq	.L193
 3370              	.L192:
 816:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3371              		.loc 1 816 0 is_stmt 1
 3372 032e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 817:.\Protocolo.c **** 									return 0;
 3373              		.loc 1 817 0
 3374 0332 0023     		movs	r3, #0
 3375 0334 00F0A5BE 		b	.L167
 3376              	.L193:
 813:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3377              		.loc 1 813 0 discriminator 2
 3378 0338 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3379 033a 0133     		adds	r3, r3, #1
 3380 033c FB73     		strb	r3, [r7, #15]
 3381              	.L191:
 813:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3382              		.loc 1 813 0 is_stmt 0 discriminator 1
 3383 033e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3384 0340 072B     		cmp	r3, #7
 3385 0342 D7D9     		bls	.L194
 818:.\Protocolo.c **** 								}								
 819:.\Protocolo.c **** 							}
 820:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3386              		.loc 1 820 0 is_stmt 1
 3387 0344 0023     		movs	r3, #0
 3388 0346 FB73     		strb	r3, [r7, #15]
 3389 0348 0DE0     		b	.L195
 3390              	.L196:
 821:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3391              		.loc 1 821 0 discriminator 3
 3392 034a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3393 034c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3394 034e 3432     		adds	r2, r2, #52
 3395 0350 9E49     		ldr	r1, .L357
 3396 0352 8A5C     		ldrb	r2, [r1, r2]
 3397 0354 D1B2     		uxtb	r1, r2
 3398 0356 9E4A     		ldr	r2, .L357+4
 3399 0358 1344     		add	r3, r3, r2
 3400 035a 0A46     		mov	r2, r1
 3401 035c 83F84F20 		strb	r2, [r3, #79]
 820:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3402              		.loc 1 820 0 discriminator 3
 3403 0360 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3404 0362 0133     		adds	r3, r3, #1
 3405 0364 FB73     		strb	r3, [r7, #15]
 3406              	.L195:
 820:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3407              		.loc 1 820 0 is_stmt 0 discriminator 1
 3408 0366 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3409 0368 032B     		cmp	r3, #3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 77


 3410 036a EED9     		bls	.L196
 822:.\Protocolo.c **** 							}					
 823:.\Protocolo.c **** 							for(x=0;x<=7;x++){///producto 3
 3411              		.loc 1 823 0 is_stmt 1
 3412 036c 0023     		movs	r3, #0
 3413 036e FB73     		strb	r3, [r7, #15]
 3414 0370 24E0     		b	.L197
 3415              	.L200:
 824:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+64];
 3416              		.loc 1 824 0
 3417 0372 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3418 0374 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3419 0376 4032     		adds	r2, r2, #64
 3420 0378 9449     		ldr	r1, .L357
 3421 037a 8A5C     		ldrb	r2, [r1, r2]
 3422 037c D1B2     		uxtb	r1, r2
 3423 037e 944A     		ldr	r2, .L357+4
 3424 0380 1344     		add	r3, r3, r2
 3425 0382 0A46     		mov	r2, r1
 3426 0384 83F83220 		strb	r2, [r3, #50]
 825:.\Protocolo.c **** 								if(lado1.totales[2][x]==0||(lado1.totales[2][x]&0xF0)!=0xE0){
 3427              		.loc 1 825 0
 3428 0388 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3429 038a 914A     		ldr	r2, .L357+4
 3430 038c 1344     		add	r3, r3, r2
 3431 038e 93F83230 		ldrb	r3, [r3, #50]
 3432 0392 DBB2     		uxtb	r3, r3
 3433 0394 002B     		cmp	r3, #0
 3434 0396 09D0     		beq	.L198
 3435              		.loc 1 825 0 is_stmt 0 discriminator 1
 3436 0398 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3437 039a 8D4A     		ldr	r2, .L357+4
 3438 039c 1344     		add	r3, r3, r2
 3439 039e 93F83230 		ldrb	r3, [r3, #50]
 3440 03a2 DBB2     		uxtb	r3, r3
 3441 03a4 03F0F003 		and	r3, r3, #240
 3442 03a8 E02B     		cmp	r3, #224
 3443 03aa 04D0     		beq	.L199
 3444              	.L198:
 826:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3445              		.loc 1 826 0 is_stmt 1
 3446 03ac FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 827:.\Protocolo.c **** 									return 0;
 3447              		.loc 1 827 0
 3448 03b0 0023     		movs	r3, #0
 3449 03b2 00F066BE 		b	.L167
 3450              	.L199:
 823:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+64];
 3451              		.loc 1 823 0 discriminator 2
 3452 03b6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3453 03b8 0133     		adds	r3, r3, #1
 3454 03ba FB73     		strb	r3, [r7, #15]
 3455              	.L197:
 823:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+64];
 3456              		.loc 1 823 0 is_stmt 0 discriminator 1
 3457 03bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3458 03be 072B     		cmp	r3, #7
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 78


 3459 03c0 D7D9     		bls	.L200
 828:.\Protocolo.c **** 								}								
 829:.\Protocolo.c **** 							}
 830:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3460              		.loc 1 830 0 is_stmt 1
 3461 03c2 0023     		movs	r3, #0
 3462 03c4 FB73     		strb	r3, [r7, #15]
 3463 03c6 27E0     		b	.L201
 3464              	.L204:
 831:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 3465              		.loc 1 831 0
 3466 03c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3467 03ca 0C33     		adds	r3, r3, #12
 3468 03cc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3469 03ce 4932     		adds	r2, r2, #73
 3470 03d0 7E49     		ldr	r1, .L357
 3471 03d2 8A5C     		ldrb	r2, [r1, r2]
 3472 03d4 D1B2     		uxtb	r1, r2
 3473 03d6 7E4A     		ldr	r2, .L357+4
 3474 03d8 1344     		add	r3, r3, r2
 3475 03da 0A46     		mov	r2, r1
 3476 03dc 83F83220 		strb	r2, [r3, #50]
 832:.\Protocolo.c **** 								if(lado1.totales[2][x+12]==0||(lado1.totales[2][x+12]&0xF0)!=0xE0){
 3477              		.loc 1 832 0
 3478 03e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3479 03e2 0C33     		adds	r3, r3, #12
 3480 03e4 7A4A     		ldr	r2, .L357+4
 3481 03e6 1344     		add	r3, r3, r2
 3482 03e8 93F83230 		ldrb	r3, [r3, #50]
 3483 03ec DBB2     		uxtb	r3, r3
 3484 03ee 002B     		cmp	r3, #0
 3485 03f0 0AD0     		beq	.L202
 3486              		.loc 1 832 0 is_stmt 0 discriminator 1
 3487 03f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3488 03f4 0C33     		adds	r3, r3, #12
 3489 03f6 764A     		ldr	r2, .L357+4
 3490 03f8 1344     		add	r3, r3, r2
 3491 03fa 93F83230 		ldrb	r3, [r3, #50]
 3492 03fe DBB2     		uxtb	r3, r3
 3493 0400 03F0F003 		and	r3, r3, #240
 3494 0404 E02B     		cmp	r3, #224
 3495 0406 04D0     		beq	.L203
 3496              	.L202:
 833:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3497              		.loc 1 833 0 is_stmt 1
 3498 0408 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 834:.\Protocolo.c **** 									return 0;
 3499              		.loc 1 834 0
 3500 040c 0023     		movs	r3, #0
 3501 040e 00F038BE 		b	.L167
 3502              	.L203:
 830:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 3503              		.loc 1 830 0 discriminator 2
 3504 0412 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3505 0414 0133     		adds	r3, r3, #1
 3506 0416 FB73     		strb	r3, [r7, #15]
 3507              	.L201:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 79


 830:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 3508              		.loc 1 830 0 is_stmt 0 discriminator 1
 3509 0418 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3510 041a 072B     		cmp	r3, #7
 3511 041c D4D9     		bls	.L204
 835:.\Protocolo.c **** 								}								
 836:.\Protocolo.c **** 							}
 837:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3512              		.loc 1 837 0 is_stmt 1
 3513 041e 0023     		movs	r3, #0
 3514 0420 FB73     		strb	r3, [r7, #15]
 3515 0422 0DE0     		b	.L205
 3516              	.L206:
 838:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+82];
 3517              		.loc 1 838 0 discriminator 3
 3518 0424 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3519 0426 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3520 0428 5232     		adds	r2, r2, #82
 3521 042a 6849     		ldr	r1, .L357
 3522 042c 8A5C     		ldrb	r2, [r1, r2]
 3523 042e D1B2     		uxtb	r1, r2
 3524 0430 674A     		ldr	r2, .L357+4
 3525 0432 1344     		add	r3, r3, r2
 3526 0434 0A46     		mov	r2, r1
 3527 0436 83F85420 		strb	r2, [r3, #84]
 837:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+82];
 3528              		.loc 1 837 0 discriminator 3
 3529 043a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3530 043c 0133     		adds	r3, r3, #1
 3531 043e FB73     		strb	r3, [r7, #15]
 3532              	.L205:
 837:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+82];
 3533              		.loc 1 837 0 is_stmt 0 discriminator 1
 3534 0440 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3535 0442 032B     		cmp	r3, #3
 3536 0444 EED9     		bls	.L206
 839:.\Protocolo.c **** 							}
 840:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3537              		.loc 1 840 0 is_stmt 1
 3538 0446 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 841:.\Protocolo.c ****     						return 3;                            
 3539              		.loc 1 841 0
 3540 044a 0323     		movs	r3, #3
 3541 044c 00F019BE 		b	.L167
 3542              	.L186:
 842:.\Protocolo.c **** 						}
 843:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 3543              		.loc 1 843 0
 3544 0450 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 844:.\Protocolo.c **** 						return 1;
 3545              		.loc 1 844 0
 3546 0454 0123     		movs	r3, #1
 3547 0456 00F014BE 		b	.L167
 3548              	.L159:
 845:.\Protocolo.c **** 					}
 846:.\Protocolo.c **** 					else{
 847:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 80


 3549              		.loc 1 847 0
 3550 045a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 848:.\Protocolo.c **** 						return 0;
 3551              		.loc 1 848 0
 3552 045e 0023     		movs	r3, #0
 3553 0460 00F00FBE 		b	.L167
 3554              	.L158:
 849:.\Protocolo.c **** 					}					
 850:.\Protocolo.c **** 				}
 851:.\Protocolo.c **** 				else{
 852:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 3555              		.loc 1 852 0
 3556 0464 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 853:.\Protocolo.c **** 					return 0;		
 3557              		.loc 1 853 0
 3558 0468 0023     		movs	r3, #0
 3559 046a 00F00ABE 		b	.L167
 3560              	.L156:
 854:.\Protocolo.c **** 				}
 855:.\Protocolo.c **** 			}
 856:.\Protocolo.c **** 			else{
 857:.\Protocolo.c **** 				CyDelay(900);
 3561              		.loc 1 857 0
 3562 046e 4FF46170 		mov	r0, #900
 3563 0472 FFF7FEFF 		bl	CyDelay
 858:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 3564              		.loc 1 858 0
 3565 0476 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 3566 047a 0346     		mov	r3, r0
 3567 047c FB73     		strb	r3, [r7, #15]
 859:.\Protocolo.c **** 				if((x==46)||(x==88)||(x==130)){				
 3568              		.loc 1 859 0
 3569 047e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3570 0480 2E2B     		cmp	r3, #46
 3571 0482 06D0     		beq	.L207
 3572              		.loc 1 859 0 is_stmt 0 discriminator 1
 3573 0484 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3574 0486 582B     		cmp	r3, #88
 3575 0488 03D0     		beq	.L207
 3576              		.loc 1 859 0 discriminator 2
 3577 048a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3578 048c 822B     		cmp	r3, #130
 3579 048e 40F0F181 		bne	.L208
 3580              	.L207:
 860:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 3581              		.loc 1 860 0 is_stmt 1
 3582 0492 4E4B     		ldr	r3, .L357
 3583 0494 1B78     		ldrb	r3, [r3]
 3584 0496 DBB2     		uxtb	r3, r3
 3585 0498 FF2B     		cmp	r3, #255
 3586 049a 40F0E681 		bne	.L209
 3587              		.loc 1 860 0 is_stmt 0 discriminator 1
 3588 049e 4B4B     		ldr	r3, .L357
 3589 04a0 5B78     		ldrb	r3, [r3, #1]
 3590 04a2 DBB2     		uxtb	r3, r3
 3591 04a4 F62B     		cmp	r3, #246
 3592 04a6 40F0E081 		bne	.L209
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 81


 3593              		.loc 1 860 0 discriminator 2
 3594 04aa 484B     		ldr	r3, .L357
 3595 04ac DB78     		ldrb	r3, [r3, #3]
 3596 04ae DBB2     		uxtb	r3, r3
 3597 04b0 F92B     		cmp	r3, #249
 3598 04b2 40F0DA81 		bne	.L209
 861:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3599              		.loc 1 861 0 is_stmt 1
 3600 04b6 0023     		movs	r3, #0
 3601 04b8 BB73     		strb	r3, [r7, #14]
 3602 04ba 16E0     		b	.L210
 3603              	.L213:
 862:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3604              		.loc 1 862 0
 3605 04bc 0023     		movs	r3, #0
 3606 04be FB73     		strb	r3, [r7, #15]
 3607 04c0 0DE0     		b	.L211
 3608              	.L212:
 863:.\Protocolo.c ****                     			lado1.totales[y][x]=0;
 3609              		.loc 1 863 0 discriminator 3
 3610 04c2 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 3611 04c4 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 3612 04c6 4248     		ldr	r0, .L357+4
 3613 04c8 1346     		mov	r3, r2
 3614 04ca 5B00     		lsls	r3, r3, #1
 3615 04cc 1344     		add	r3, r3, r2
 3616 04ce DB00     		lsls	r3, r3, #3
 3617 04d0 0B44     		add	r3, r3, r1
 3618 04d2 0344     		add	r3, r3, r0
 3619 04d4 0022     		movs	r2, #0
 3620 04d6 9A70     		strb	r2, [r3, #2]
 862:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3621              		.loc 1 862 0 discriminator 3
 3622 04d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3623 04da 0133     		adds	r3, r3, #1
 3624 04dc FB73     		strb	r3, [r7, #15]
 3625              	.L211:
 862:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3626              		.loc 1 862 0 is_stmt 0 discriminator 1
 3627 04de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3628 04e0 172B     		cmp	r3, #23
 3629 04e2 EED9     		bls	.L212
 861:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3630              		.loc 1 861 0 is_stmt 1 discriminator 2
 3631 04e4 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3632 04e6 0133     		adds	r3, r3, #1
 3633 04e8 BB73     		strb	r3, [r7, #14]
 3634              	.L210:
 861:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3635              		.loc 1 861 0 is_stmt 0 discriminator 1
 3636 04ea BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3637 04ec 022B     		cmp	r3, #2
 3638 04ee E5D9     		bls	.L213
 864:.\Protocolo.c ****                     		}
 865:.\Protocolo.c ****                     	}                        
 866:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3639              		.loc 1 866 0 is_stmt 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 82


 3640 04f0 0023     		movs	r3, #0
 3641 04f2 FB73     		strb	r3, [r7, #15]
 3642 04f4 21E0     		b	.L214
 3643              	.L217:
 867:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3644              		.loc 1 867 0
 3645 04f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3646 04f8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3647 04fa 0432     		adds	r2, r2, #4
 3648 04fc 3349     		ldr	r1, .L357
 3649 04fe 8A5C     		ldrb	r2, [r1, r2]
 3650 0500 D1B2     		uxtb	r1, r2
 3651 0502 334A     		ldr	r2, .L357+4
 3652 0504 1344     		add	r3, r3, r2
 3653 0506 0A46     		mov	r2, r1
 3654 0508 9A70     		strb	r2, [r3, #2]
 868:.\Protocolo.c **** 							if(lado1.totales[0][x]==0||(lado1.totales[0][x]&0xF0)!=0xE0){
 3655              		.loc 1 868 0
 3656 050a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3657 050c 304A     		ldr	r2, .L357+4
 3658 050e 1344     		add	r3, r3, r2
 3659 0510 9B78     		ldrb	r3, [r3, #2]
 3660 0512 DBB2     		uxtb	r3, r3
 3661 0514 002B     		cmp	r3, #0
 3662 0516 08D0     		beq	.L215
 3663              		.loc 1 868 0 is_stmt 0 discriminator 1
 3664 0518 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3665 051a 2D4A     		ldr	r2, .L357+4
 3666 051c 1344     		add	r3, r3, r2
 3667 051e 9B78     		ldrb	r3, [r3, #2]
 3668 0520 DBB2     		uxtb	r3, r3
 3669 0522 03F0F003 		and	r3, r3, #240
 3670 0526 E02B     		cmp	r3, #224
 3671 0528 04D0     		beq	.L216
 3672              	.L215:
 869:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3673              		.loc 1 869 0 is_stmt 1
 3674 052a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 870:.\Protocolo.c **** 								return 0;
 3675              		.loc 1 870 0
 3676 052e 0023     		movs	r3, #0
 3677 0530 00F0A7BD 		b	.L167
 3678              	.L216:
 866:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3679              		.loc 1 866 0 discriminator 2
 3680 0534 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3681 0536 0133     		adds	r3, r3, #1
 3682 0538 FB73     		strb	r3, [r7, #15]
 3683              	.L214:
 866:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3684              		.loc 1 866 0 is_stmt 0 discriminator 1
 3685 053a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3686 053c 0B2B     		cmp	r3, #11
 3687 053e DAD9     		bls	.L217
 871:.\Protocolo.c **** 							}							
 872:.\Protocolo.c **** 						}
 873:.\Protocolo.c **** 						for(x=0;x<=11;x++){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 83


 3688              		.loc 1 873 0 is_stmt 1
 3689 0540 0023     		movs	r3, #0
 3690 0542 FB73     		strb	r3, [r7, #15]
 3691 0544 24E0     		b	.L218
 3692              	.L221:
 874:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 3693              		.loc 1 874 0
 3694 0546 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3695 0548 0C33     		adds	r3, r3, #12
 3696 054a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3697 054c 1132     		adds	r2, r2, #17
 3698 054e 1F49     		ldr	r1, .L357
 3699 0550 8A5C     		ldrb	r2, [r1, r2]
 3700 0552 D1B2     		uxtb	r1, r2
 3701 0554 1E4A     		ldr	r2, .L357+4
 3702 0556 1344     		add	r3, r3, r2
 3703 0558 0A46     		mov	r2, r1
 3704 055a 9A70     		strb	r2, [r3, #2]
 875:.\Protocolo.c **** 							if(lado1.totales[0][x+12]==0||(lado1.totales[0][x+12]&0xF0)!=0xE0){
 3705              		.loc 1 875 0
 3706 055c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3707 055e 0C33     		adds	r3, r3, #12
 3708 0560 1B4A     		ldr	r2, .L357+4
 3709 0562 1344     		add	r3, r3, r2
 3710 0564 9B78     		ldrb	r3, [r3, #2]
 3711 0566 DBB2     		uxtb	r3, r3
 3712 0568 002B     		cmp	r3, #0
 3713 056a 09D0     		beq	.L219
 3714              		.loc 1 875 0 is_stmt 0 discriminator 1
 3715 056c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3716 056e 0C33     		adds	r3, r3, #12
 3717 0570 174A     		ldr	r2, .L357+4
 3718 0572 1344     		add	r3, r3, r2
 3719 0574 9B78     		ldrb	r3, [r3, #2]
 3720 0576 DBB2     		uxtb	r3, r3
 3721 0578 03F0F003 		and	r3, r3, #240
 3722 057c E02B     		cmp	r3, #224
 3723 057e 04D0     		beq	.L220
 3724              	.L219:
 876:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3725              		.loc 1 876 0 is_stmt 1
 3726 0580 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 877:.\Protocolo.c **** 								return 0;
 3727              		.loc 1 877 0
 3728 0584 0023     		movs	r3, #0
 3729 0586 00F07CBD 		b	.L167
 3730              	.L220:
 873:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 3731              		.loc 1 873 0 discriminator 2
 3732 058a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3733 058c 0133     		adds	r3, r3, #1
 3734 058e FB73     		strb	r3, [r7, #15]
 3735              	.L218:
 873:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 3736              		.loc 1 873 0 is_stmt 0 discriminator 1
 3737 0590 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3738 0592 0B2B     		cmp	r3, #11
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 84


 3739 0594 D7D9     		bls	.L221
 878:.\Protocolo.c **** 							}							
 879:.\Protocolo.c **** 						}
 880:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 3740              		.loc 1 880 0 is_stmt 1
 3741 0596 0023     		movs	r3, #0
 3742 0598 FB73     		strb	r3, [r7, #15]
 3743 059a 0DE0     		b	.L222
 3744              	.L223:
 881:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+30];
 3745              		.loc 1 881 0 discriminator 3
 3746 059c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3747 059e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3748 05a0 1E32     		adds	r2, r2, #30
 3749 05a2 0A49     		ldr	r1, .L357
 3750 05a4 8A5C     		ldrb	r2, [r1, r2]
 3751 05a6 D1B2     		uxtb	r1, r2
 3752 05a8 094A     		ldr	r2, .L357+4
 3753 05aa 1344     		add	r3, r3, r2
 3754 05ac 0A46     		mov	r2, r1
 3755 05ae 83F84A20 		strb	r2, [r3, #74]
 880:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+30];
 3756              		.loc 1 880 0 discriminator 3
 3757 05b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3758 05b4 0133     		adds	r3, r3, #1
 3759 05b6 FB73     		strb	r3, [r7, #15]
 3760              	.L222:
 880:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+30];
 3761              		.loc 1 880 0 is_stmt 0 discriminator 1
 3762 05b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3763 05ba 042B     		cmp	r3, #4
 3764 05bc EED9     		bls	.L223
 882:.\Protocolo.c **** 						}				
 883:.\Protocolo.c **** 						if(nmangueras==2){
 3765              		.loc 1 883 0 is_stmt 1
 3766 05be BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3767 05c0 022B     		cmp	r3, #2
 3768 05c2 70D1     		bne	.L224
 884:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3769              		.loc 1 884 0
 3770 05c4 0023     		movs	r3, #0
 3771 05c6 FB73     		strb	r3, [r7, #15]
 3772 05c8 26E0     		b	.L225
 3773              	.L358:
 3774 05ca 00BF     		.align	2
 3775              	.L357:
 3776 05cc 00000000 		.word	Surtidor_rxBuffer
 3777 05d0 00000000 		.word	lado1
 3778              	.L228:
 885:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3779              		.loc 1 885 0
 3780 05d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3781 05d6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3782 05d8 2E32     		adds	r2, r2, #46
 3783 05da A949     		ldr	r1, .L359
 3784 05dc 8A5C     		ldrb	r2, [r1, r2]
 3785 05de D1B2     		uxtb	r1, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 85


 3786 05e0 A84A     		ldr	r2, .L359+4
 3787 05e2 1344     		add	r3, r3, r2
 3788 05e4 0A46     		mov	r2, r1
 3789 05e6 9A76     		strb	r2, [r3, #26]
 886:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3790              		.loc 1 886 0
 3791 05e8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3792 05ea A64A     		ldr	r2, .L359+4
 3793 05ec 1344     		add	r3, r3, r2
 3794 05ee 9B7E     		ldrb	r3, [r3, #26]
 3795 05f0 DBB2     		uxtb	r3, r3
 3796 05f2 002B     		cmp	r3, #0
 3797 05f4 08D0     		beq	.L226
 3798              		.loc 1 886 0 is_stmt 0 discriminator 1
 3799 05f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3800 05f8 A24A     		ldr	r2, .L359+4
 3801 05fa 1344     		add	r3, r3, r2
 3802 05fc 9B7E     		ldrb	r3, [r3, #26]
 3803 05fe DBB2     		uxtb	r3, r3
 3804 0600 03F0F003 		and	r3, r3, #240
 3805 0604 E02B     		cmp	r3, #224
 3806 0606 04D0     		beq	.L227
 3807              	.L226:
 887:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3808              		.loc 1 887 0 is_stmt 1
 3809 0608 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 888:.\Protocolo.c **** 									return 0;
 3810              		.loc 1 888 0
 3811 060c 0023     		movs	r3, #0
 3812 060e 00F038BD 		b	.L167
 3813              	.L227:
 884:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3814              		.loc 1 884 0 discriminator 2
 3815 0612 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3816 0614 0133     		adds	r3, r3, #1
 3817 0616 FB73     		strb	r3, [r7, #15]
 3818              	.L225:
 884:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3819              		.loc 1 884 0 is_stmt 0 discriminator 1
 3820 0618 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3821 061a 0B2B     		cmp	r3, #11
 3822 061c DAD9     		bls	.L228
 889:.\Protocolo.c **** 								}								
 890:.\Protocolo.c **** 							}
 891:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3823              		.loc 1 891 0 is_stmt 1
 3824 061e 0023     		movs	r3, #0
 3825 0620 FB73     		strb	r3, [r7, #15]
 3826 0622 24E0     		b	.L229
 3827              	.L232:
 892:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3828              		.loc 1 892 0
 3829 0624 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3830 0626 0C33     		adds	r3, r3, #12
 3831 0628 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3832 062a 3B32     		adds	r2, r2, #59
 3833 062c 9449     		ldr	r1, .L359
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 86


 3834 062e 8A5C     		ldrb	r2, [r1, r2]
 3835 0630 D1B2     		uxtb	r1, r2
 3836 0632 944A     		ldr	r2, .L359+4
 3837 0634 1344     		add	r3, r3, r2
 3838 0636 0A46     		mov	r2, r1
 3839 0638 9A76     		strb	r2, [r3, #26]
 893:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3840              		.loc 1 893 0
 3841 063a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3842 063c 0C33     		adds	r3, r3, #12
 3843 063e 914A     		ldr	r2, .L359+4
 3844 0640 1344     		add	r3, r3, r2
 3845 0642 9B7E     		ldrb	r3, [r3, #26]
 3846 0644 DBB2     		uxtb	r3, r3
 3847 0646 002B     		cmp	r3, #0
 3848 0648 09D0     		beq	.L230
 3849              		.loc 1 893 0 is_stmt 0 discriminator 1
 3850 064a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3851 064c 0C33     		adds	r3, r3, #12
 3852 064e 8D4A     		ldr	r2, .L359+4
 3853 0650 1344     		add	r3, r3, r2
 3854 0652 9B7E     		ldrb	r3, [r3, #26]
 3855 0654 DBB2     		uxtb	r3, r3
 3856 0656 03F0F003 		and	r3, r3, #240
 3857 065a E02B     		cmp	r3, #224
 3858 065c 04D0     		beq	.L231
 3859              	.L230:
 894:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3860              		.loc 1 894 0 is_stmt 1
 3861 065e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 895:.\Protocolo.c **** 									return 0;
 3862              		.loc 1 895 0
 3863 0662 0023     		movs	r3, #0
 3864 0664 00F00DBD 		b	.L167
 3865              	.L231:
 891:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3866              		.loc 1 891 0 discriminator 2
 3867 0668 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3868 066a 0133     		adds	r3, r3, #1
 3869 066c FB73     		strb	r3, [r7, #15]
 3870              	.L229:
 891:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3871              		.loc 1 891 0 is_stmt 0 discriminator 1
 3872 066e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3873 0670 0B2B     		cmp	r3, #11
 3874 0672 D7D9     		bls	.L232
 896:.\Protocolo.c **** 								}								
 897:.\Protocolo.c **** 							}
 898:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 3875              		.loc 1 898 0 is_stmt 1
 3876 0674 0023     		movs	r3, #0
 3877 0676 FB73     		strb	r3, [r7, #15]
 3878 0678 0DE0     		b	.L233
 3879              	.L234:
 899:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 3880              		.loc 1 899 0 discriminator 3
 3881 067a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 87


 3882 067c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3883 067e 4832     		adds	r2, r2, #72
 3884 0680 7F49     		ldr	r1, .L359
 3885 0682 8A5C     		ldrb	r2, [r1, r2]
 3886 0684 D1B2     		uxtb	r1, r2
 3887 0686 7F4A     		ldr	r2, .L359+4
 3888 0688 1344     		add	r3, r3, r2
 3889 068a 0A46     		mov	r2, r1
 3890 068c 83F84F20 		strb	r2, [r3, #79]
 898:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 3891              		.loc 1 898 0 discriminator 3
 3892 0690 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3893 0692 0133     		adds	r3, r3, #1
 3894 0694 FB73     		strb	r3, [r7, #15]
 3895              	.L233:
 898:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 3896              		.loc 1 898 0 is_stmt 0 discriminator 1
 3897 0696 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3898 0698 042B     		cmp	r3, #4
 3899 069a EED9     		bls	.L234
 900:.\Protocolo.c **** 							}
 901:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3900              		.loc 1 901 0 is_stmt 1
 3901 069c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 902:.\Protocolo.c ****     						return 2;                            
 3902              		.loc 1 902 0
 3903 06a0 0223     		movs	r3, #2
 3904 06a2 00F0EEBC 		b	.L167
 3905              	.L224:
 903:.\Protocolo.c **** 						}
 904:.\Protocolo.c **** 						if(nmangueras==3){
 3906              		.loc 1 904 0
 3907 06a6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3908 06a8 032B     		cmp	r3, #3
 3909 06aa 40F0D980 		bne	.L235
 905:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3910              		.loc 1 905 0
 3911 06ae 0023     		movs	r3, #0
 3912 06b0 FB73     		strb	r3, [r7, #15]
 3913 06b2 21E0     		b	.L236
 3914              	.L239:
 906:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3915              		.loc 1 906 0
 3916 06b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3917 06b6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3918 06b8 2E32     		adds	r2, r2, #46
 3919 06ba 7149     		ldr	r1, .L359
 3920 06bc 8A5C     		ldrb	r2, [r1, r2]
 3921 06be D1B2     		uxtb	r1, r2
 3922 06c0 704A     		ldr	r2, .L359+4
 3923 06c2 1344     		add	r3, r3, r2
 3924 06c4 0A46     		mov	r2, r1
 3925 06c6 9A76     		strb	r2, [r3, #26]
 907:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3926              		.loc 1 907 0
 3927 06c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3928 06ca 6E4A     		ldr	r2, .L359+4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 88


 3929 06cc 1344     		add	r3, r3, r2
 3930 06ce 9B7E     		ldrb	r3, [r3, #26]
 3931 06d0 DBB2     		uxtb	r3, r3
 3932 06d2 002B     		cmp	r3, #0
 3933 06d4 08D0     		beq	.L237
 3934              		.loc 1 907 0 is_stmt 0 discriminator 1
 3935 06d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3936 06d8 6A4A     		ldr	r2, .L359+4
 3937 06da 1344     		add	r3, r3, r2
 3938 06dc 9B7E     		ldrb	r3, [r3, #26]
 3939 06de DBB2     		uxtb	r3, r3
 3940 06e0 03F0F003 		and	r3, r3, #240
 3941 06e4 E02B     		cmp	r3, #224
 3942 06e6 04D0     		beq	.L238
 3943              	.L237:
 908:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3944              		.loc 1 908 0 is_stmt 1
 3945 06e8 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 909:.\Protocolo.c **** 									return 0;
 3946              		.loc 1 909 0
 3947 06ec 0023     		movs	r3, #0
 3948 06ee 00F0C8BC 		b	.L167
 3949              	.L238:
 905:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3950              		.loc 1 905 0 discriminator 2
 3951 06f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3952 06f4 0133     		adds	r3, r3, #1
 3953 06f6 FB73     		strb	r3, [r7, #15]
 3954              	.L236:
 905:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3955              		.loc 1 905 0 is_stmt 0 discriminator 1
 3956 06f8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3957 06fa 0B2B     		cmp	r3, #11
 3958 06fc DAD9     		bls	.L239
 910:.\Protocolo.c **** 								}								
 911:.\Protocolo.c **** 							}
 912:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3959              		.loc 1 912 0 is_stmt 1
 3960 06fe 0023     		movs	r3, #0
 3961 0700 FB73     		strb	r3, [r7, #15]
 3962 0702 24E0     		b	.L240
 3963              	.L243:
 913:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3964              		.loc 1 913 0
 3965 0704 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3966 0706 0C33     		adds	r3, r3, #12
 3967 0708 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3968 070a 3B32     		adds	r2, r2, #59
 3969 070c 5C49     		ldr	r1, .L359
 3970 070e 8A5C     		ldrb	r2, [r1, r2]
 3971 0710 D1B2     		uxtb	r1, r2
 3972 0712 5C4A     		ldr	r2, .L359+4
 3973 0714 1344     		add	r3, r3, r2
 3974 0716 0A46     		mov	r2, r1
 3975 0718 9A76     		strb	r2, [r3, #26]
 914:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3976              		.loc 1 914 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 89


 3977 071a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3978 071c 0C33     		adds	r3, r3, #12
 3979 071e 594A     		ldr	r2, .L359+4
 3980 0720 1344     		add	r3, r3, r2
 3981 0722 9B7E     		ldrb	r3, [r3, #26]
 3982 0724 DBB2     		uxtb	r3, r3
 3983 0726 002B     		cmp	r3, #0
 3984 0728 09D0     		beq	.L241
 3985              		.loc 1 914 0 is_stmt 0 discriminator 1
 3986 072a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3987 072c 0C33     		adds	r3, r3, #12
 3988 072e 554A     		ldr	r2, .L359+4
 3989 0730 1344     		add	r3, r3, r2
 3990 0732 9B7E     		ldrb	r3, [r3, #26]
 3991 0734 DBB2     		uxtb	r3, r3
 3992 0736 03F0F003 		and	r3, r3, #240
 3993 073a E02B     		cmp	r3, #224
 3994 073c 04D0     		beq	.L242
 3995              	.L241:
 915:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3996              		.loc 1 915 0 is_stmt 1
 3997 073e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 916:.\Protocolo.c **** 									return 0;
 3998              		.loc 1 916 0
 3999 0742 0023     		movs	r3, #0
 4000 0744 00F09DBC 		b	.L167
 4001              	.L242:
 912:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 4002              		.loc 1 912 0 discriminator 2
 4003 0748 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4004 074a 0133     		adds	r3, r3, #1
 4005 074c FB73     		strb	r3, [r7, #15]
 4006              	.L240:
 912:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 4007              		.loc 1 912 0 is_stmt 0 discriminator 1
 4008 074e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4009 0750 0B2B     		cmp	r3, #11
 4010 0752 D7D9     		bls	.L243
 917:.\Protocolo.c **** 								}								
 918:.\Protocolo.c **** 							}
 919:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4011              		.loc 1 919 0 is_stmt 1
 4012 0754 0023     		movs	r3, #0
 4013 0756 FB73     		strb	r3, [r7, #15]
 4014 0758 0DE0     		b	.L244
 4015              	.L245:
 920:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4016              		.loc 1 920 0 discriminator 3
 4017 075a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4018 075c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4019 075e 4832     		adds	r2, r2, #72
 4020 0760 4749     		ldr	r1, .L359
 4021 0762 8A5C     		ldrb	r2, [r1, r2]
 4022 0764 D1B2     		uxtb	r1, r2
 4023 0766 474A     		ldr	r2, .L359+4
 4024 0768 1344     		add	r3, r3, r2
 4025 076a 0A46     		mov	r2, r1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 90


 4026 076c 83F84F20 		strb	r2, [r3, #79]
 919:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4027              		.loc 1 919 0 discriminator 3
 4028 0770 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4029 0772 0133     		adds	r3, r3, #1
 4030 0774 FB73     		strb	r3, [r7, #15]
 4031              	.L244:
 919:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4032              		.loc 1 919 0 is_stmt 0 discriminator 1
 4033 0776 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4034 0778 042B     		cmp	r3, #4
 4035 077a EED9     		bls	.L245
 921:.\Protocolo.c **** 							}					
 922:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4036              		.loc 1 922 0 is_stmt 1
 4037 077c 0023     		movs	r3, #0
 4038 077e FB73     		strb	r3, [r7, #15]
 4039 0780 24E0     		b	.L246
 4040              	.L249:
 923:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+88];
 4041              		.loc 1 923 0
 4042 0782 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4043 0784 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4044 0786 5832     		adds	r2, r2, #88
 4045 0788 3D49     		ldr	r1, .L359
 4046 078a 8A5C     		ldrb	r2, [r1, r2]
 4047 078c D1B2     		uxtb	r1, r2
 4048 078e 3D4A     		ldr	r2, .L359+4
 4049 0790 1344     		add	r3, r3, r2
 4050 0792 0A46     		mov	r2, r1
 4051 0794 83F83220 		strb	r2, [r3, #50]
 924:.\Protocolo.c **** 								if(lado1.totales[2][x]==0||(lado1.totales[2][x]&0xF0)!=0xE0){
 4052              		.loc 1 924 0
 4053 0798 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4054 079a 3A4A     		ldr	r2, .L359+4
 4055 079c 1344     		add	r3, r3, r2
 4056 079e 93F83230 		ldrb	r3, [r3, #50]
 4057 07a2 DBB2     		uxtb	r3, r3
 4058 07a4 002B     		cmp	r3, #0
 4059 07a6 09D0     		beq	.L247
 4060              		.loc 1 924 0 is_stmt 0 discriminator 1
 4061 07a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4062 07aa 364A     		ldr	r2, .L359+4
 4063 07ac 1344     		add	r3, r3, r2
 4064 07ae 93F83230 		ldrb	r3, [r3, #50]
 4065 07b2 DBB2     		uxtb	r3, r3
 4066 07b4 03F0F003 		and	r3, r3, #240
 4067 07b8 E02B     		cmp	r3, #224
 4068 07ba 04D0     		beq	.L248
 4069              	.L247:
 925:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4070              		.loc 1 925 0 is_stmt 1
 4071 07bc FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 926:.\Protocolo.c **** 									return 0;
 4072              		.loc 1 926 0
 4073 07c0 0023     		movs	r3, #0
 4074 07c2 00F05EBC 		b	.L167
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 91


 4075              	.L248:
 922:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+88];
 4076              		.loc 1 922 0 discriminator 2
 4077 07c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4078 07c8 0133     		adds	r3, r3, #1
 4079 07ca FB73     		strb	r3, [r7, #15]
 4080              	.L246:
 922:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+88];
 4081              		.loc 1 922 0 is_stmt 0 discriminator 1
 4082 07cc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4083 07ce 0B2B     		cmp	r3, #11
 4084 07d0 D7D9     		bls	.L249
 927:.\Protocolo.c **** 								}								
 928:.\Protocolo.c **** 							}
 929:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4085              		.loc 1 929 0 is_stmt 1
 4086 07d2 0023     		movs	r3, #0
 4087 07d4 FB73     		strb	r3, [r7, #15]
 4088 07d6 27E0     		b	.L250
 4089              	.L253:
 930:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 4090              		.loc 1 930 0
 4091 07d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4092 07da 0C33     		adds	r3, r3, #12
 4093 07dc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4094 07de 6532     		adds	r2, r2, #101
 4095 07e0 2749     		ldr	r1, .L359
 4096 07e2 8A5C     		ldrb	r2, [r1, r2]
 4097 07e4 D1B2     		uxtb	r1, r2
 4098 07e6 274A     		ldr	r2, .L359+4
 4099 07e8 1344     		add	r3, r3, r2
 4100 07ea 0A46     		mov	r2, r1
 4101 07ec 83F83220 		strb	r2, [r3, #50]
 931:.\Protocolo.c **** 								if(lado1.totales[2][x+12]==0||(lado1.totales[2][x+12]&0xF0)!=0xE0){
 4102              		.loc 1 931 0
 4103 07f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4104 07f2 0C33     		adds	r3, r3, #12
 4105 07f4 234A     		ldr	r2, .L359+4
 4106 07f6 1344     		add	r3, r3, r2
 4107 07f8 93F83230 		ldrb	r3, [r3, #50]
 4108 07fc DBB2     		uxtb	r3, r3
 4109 07fe 002B     		cmp	r3, #0
 4110 0800 0AD0     		beq	.L251
 4111              		.loc 1 931 0 is_stmt 0 discriminator 1
 4112 0802 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4113 0804 0C33     		adds	r3, r3, #12
 4114 0806 1F4A     		ldr	r2, .L359+4
 4115 0808 1344     		add	r3, r3, r2
 4116 080a 93F83230 		ldrb	r3, [r3, #50]
 4117 080e DBB2     		uxtb	r3, r3
 4118 0810 03F0F003 		and	r3, r3, #240
 4119 0814 E02B     		cmp	r3, #224
 4120 0816 04D0     		beq	.L252
 4121              	.L251:
 932:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4122              		.loc 1 932 0 is_stmt 1
 4123 0818 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 92


 933:.\Protocolo.c **** 									return 0;
 4124              		.loc 1 933 0
 4125 081c 0023     		movs	r3, #0
 4126 081e 00F030BC 		b	.L167
 4127              	.L252:
 929:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 4128              		.loc 1 929 0 discriminator 2
 4129 0822 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4130 0824 0133     		adds	r3, r3, #1
 4131 0826 FB73     		strb	r3, [r7, #15]
 4132              	.L250:
 929:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 4133              		.loc 1 929 0 is_stmt 0 discriminator 1
 4134 0828 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4135 082a 0B2B     		cmp	r3, #11
 4136 082c D4D9     		bls	.L253
 934:.\Protocolo.c **** 								}								
 935:.\Protocolo.c **** 							}
 936:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4137              		.loc 1 936 0 is_stmt 1
 4138 082e 0023     		movs	r3, #0
 4139 0830 FB73     		strb	r3, [r7, #15]
 4140 0832 0DE0     		b	.L254
 4141              	.L255:
 937:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+114];
 4142              		.loc 1 937 0 discriminator 3
 4143 0834 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4144 0836 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4145 0838 7232     		adds	r2, r2, #114
 4146 083a 1149     		ldr	r1, .L359
 4147 083c 8A5C     		ldrb	r2, [r1, r2]
 4148 083e D1B2     		uxtb	r1, r2
 4149 0840 104A     		ldr	r2, .L359+4
 4150 0842 1344     		add	r3, r3, r2
 4151 0844 0A46     		mov	r2, r1
 4152 0846 83F85420 		strb	r2, [r3, #84]
 936:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+114];
 4153              		.loc 1 936 0 discriminator 3
 4154 084a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4155 084c 0133     		adds	r3, r3, #1
 4156 084e FB73     		strb	r3, [r7, #15]
 4157              	.L254:
 936:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+114];
 4158              		.loc 1 936 0 is_stmt 0 discriminator 1
 4159 0850 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4160 0852 042B     		cmp	r3, #4
 4161 0854 EED9     		bls	.L255
 938:.\Protocolo.c **** 							}
 939:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4162              		.loc 1 939 0 is_stmt 1
 4163 0856 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 940:.\Protocolo.c ****     						return 3;                            
 4164              		.loc 1 940 0
 4165 085a 0323     		movs	r3, #3
 4166 085c 00F011BC 		b	.L167
 4167              	.L235:
 941:.\Protocolo.c **** 						}
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 93


 942:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4168              		.loc 1 942 0
 4169 0860 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 943:.\Protocolo.c **** 						return 1;			
 4170              		.loc 1 943 0
 4171 0864 0123     		movs	r3, #1
 4172 0866 00F00CBC 		b	.L167
 4173              	.L209:
 944:.\Protocolo.c **** 					}
 945:.\Protocolo.c **** 					else{
 946:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4174              		.loc 1 946 0
 4175 086a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 947:.\Protocolo.c **** 						return 0;					
 4176              		.loc 1 947 0
 4177 086e 0023     		movs	r3, #0
 4178 0870 00F007BC 		b	.L167
 4179              	.L208:
 948:.\Protocolo.c **** 					}
 949:.\Protocolo.c **** 				}
 950:.\Protocolo.c **** 				else{
 951:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 4180              		.loc 1 951 0
 4181 0874 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 952:.\Protocolo.c **** 					return 0;		
 4182              		.loc 1 952 0
 4183 0878 0023     		movs	r3, #0
 4184 087a 00F002BC 		b	.L167
 4185              	.L360:
 4186 087e 00BF     		.align	2
 4187              	.L359:
 4188 0880 00000000 		.word	Surtidor_rxBuffer
 4189 0884 00000000 		.word	lado1
 4190              	.L155:
 953:.\Protocolo.c **** 				}	
 954:.\Protocolo.c **** 			}
 955:.\Protocolo.c **** 		}
 956:.\Protocolo.c **** 		else{
 957:.\Protocolo.c **** 			if(version[1]!=7){
 4191              		.loc 1 957 0
 4192 0888 A24B     		ldr	r3, .L361
 4193 088a 5B78     		ldrb	r3, [r3, #1]
 4194 088c DBB2     		uxtb	r3, r3
 4195 088e 072B     		cmp	r3, #7
 4196 0890 00F0FC81 		beq	.L256
 958:.\Protocolo.c **** 				CyDelay(900);
 4197              		.loc 1 958 0
 4198 0894 4FF46170 		mov	r0, #900
 4199 0898 FFF7FEFF 		bl	CyDelay
 959:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 4200              		.loc 1 959 0
 4201 089c FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 4202 08a0 0346     		mov	r3, r0
 4203 08a2 FB73     		strb	r3, [r7, #15]
 960:.\Protocolo.c **** 				if((x==34)||(x==64)||(x==94)){				
 4204              		.loc 1 960 0
 4205 08a4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 94


 4206 08a6 222B     		cmp	r3, #34
 4207 08a8 06D0     		beq	.L257
 4208              		.loc 1 960 0 is_stmt 0 discriminator 1
 4209 08aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4210 08ac 402B     		cmp	r3, #64
 4211 08ae 03D0     		beq	.L257
 4212              		.loc 1 960 0 discriminator 2
 4213 08b0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4214 08b2 5E2B     		cmp	r3, #94
 4215 08b4 40F0E681 		bne	.L258
 4216              	.L257:
 961:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 4217              		.loc 1 961 0 is_stmt 1
 4218 08b8 974B     		ldr	r3, .L361+4
 4219 08ba 1B78     		ldrb	r3, [r3]
 4220 08bc DBB2     		uxtb	r3, r3
 4221 08be FF2B     		cmp	r3, #255
 4222 08c0 40F0DC81 		bne	.L259
 4223              		.loc 1 961 0 is_stmt 0 discriminator 1
 4224 08c4 944B     		ldr	r3, .L361+4
 4225 08c6 5B78     		ldrb	r3, [r3, #1]
 4226 08c8 DBB2     		uxtb	r3, r3
 4227 08ca F62B     		cmp	r3, #246
 4228 08cc 40F0D681 		bne	.L259
 4229              		.loc 1 961 0 discriminator 2
 4230 08d0 914B     		ldr	r3, .L361+4
 4231 08d2 DB78     		ldrb	r3, [r3, #3]
 4232 08d4 DBB2     		uxtb	r3, r3
 4233 08d6 F92B     		cmp	r3, #249
 4234 08d8 40F0D081 		bne	.L259
 962:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4235              		.loc 1 962 0 is_stmt 1
 4236 08dc 0023     		movs	r3, #0
 4237 08de BB73     		strb	r3, [r7, #14]
 4238 08e0 16E0     		b	.L260
 4239              	.L263:
 963:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4240              		.loc 1 963 0
 4241 08e2 0023     		movs	r3, #0
 4242 08e4 FB73     		strb	r3, [r7, #15]
 4243 08e6 0DE0     		b	.L261
 4244              	.L262:
 964:.\Protocolo.c ****                     			lado2.totales[y][x]=0;
 4245              		.loc 1 964 0 discriminator 3
 4246 08e8 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 4247 08ea F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 4248 08ec 8B48     		ldr	r0, .L361+8
 4249 08ee 1346     		mov	r3, r2
 4250 08f0 5B00     		lsls	r3, r3, #1
 4251 08f2 1344     		add	r3, r3, r2
 4252 08f4 DB00     		lsls	r3, r3, #3
 4253 08f6 0B44     		add	r3, r3, r1
 4254 08f8 0344     		add	r3, r3, r0
 4255 08fa 0022     		movs	r2, #0
 4256 08fc 9A70     		strb	r2, [r3, #2]
 963:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4257              		.loc 1 963 0 discriminator 3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 95


 4258 08fe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4259 0900 0133     		adds	r3, r3, #1
 4260 0902 FB73     		strb	r3, [r7, #15]
 4261              	.L261:
 963:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4262              		.loc 1 963 0 is_stmt 0 discriminator 1
 4263 0904 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4264 0906 172B     		cmp	r3, #23
 4265 0908 EED9     		bls	.L262
 962:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4266              		.loc 1 962 0 is_stmt 1 discriminator 2
 4267 090a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4268 090c 0133     		adds	r3, r3, #1
 4269 090e BB73     		strb	r3, [r7, #14]
 4270              	.L260:
 962:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4271              		.loc 1 962 0 is_stmt 0 discriminator 1
 4272 0910 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4273 0912 022B     		cmp	r3, #2
 4274 0914 E5D9     		bls	.L263
 965:.\Protocolo.c ****                     		}
 966:.\Protocolo.c ****                     	}                        
 967:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 4275              		.loc 1 967 0 is_stmt 1
 4276 0916 0023     		movs	r3, #0
 4277 0918 FB73     		strb	r3, [r7, #15]
 4278 091a 20E0     		b	.L264
 4279              	.L267:
 968:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4280              		.loc 1 968 0
 4281 091c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4282 091e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4283 0920 0432     		adds	r2, r2, #4
 4284 0922 7D49     		ldr	r1, .L361+4
 4285 0924 8A5C     		ldrb	r2, [r1, r2]
 4286 0926 D1B2     		uxtb	r1, r2
 4287 0928 7C4A     		ldr	r2, .L361+8
 4288 092a 1344     		add	r3, r3, r2
 4289 092c 0A46     		mov	r2, r1
 4290 092e 9A70     		strb	r2, [r3, #2]
 969:.\Protocolo.c **** 							if(lado2.totales[0][x]==0||(lado2.totales[0][x]&0xF0)!=0xE0){
 4291              		.loc 1 969 0
 4292 0930 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4293 0932 7A4A     		ldr	r2, .L361+8
 4294 0934 1344     		add	r3, r3, r2
 4295 0936 9B78     		ldrb	r3, [r3, #2]
 4296 0938 DBB2     		uxtb	r3, r3
 4297 093a 002B     		cmp	r3, #0
 4298 093c 08D0     		beq	.L265
 4299              		.loc 1 969 0 is_stmt 0 discriminator 1
 4300 093e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4301 0940 764A     		ldr	r2, .L361+8
 4302 0942 1344     		add	r3, r3, r2
 4303 0944 9B78     		ldrb	r3, [r3, #2]
 4304 0946 DBB2     		uxtb	r3, r3
 4305 0948 03F0F003 		and	r3, r3, #240
 4306 094c E02B     		cmp	r3, #224
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 96


 4307 094e 03D0     		beq	.L266
 4308              	.L265:
 970:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4309              		.loc 1 970 0 is_stmt 1
 4310 0950 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 971:.\Protocolo.c **** 								return 0;
 4311              		.loc 1 971 0
 4312 0954 0023     		movs	r3, #0
 4313 0956 94E3     		b	.L167
 4314              	.L266:
 967:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4315              		.loc 1 967 0 discriminator 2
 4316 0958 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4317 095a 0133     		adds	r3, r3, #1
 4318 095c FB73     		strb	r3, [r7, #15]
 4319              	.L264:
 967:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4320              		.loc 1 967 0 is_stmt 0 discriminator 1
 4321 095e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4322 0960 072B     		cmp	r3, #7
 4323 0962 DBD9     		bls	.L267
 972:.\Protocolo.c **** 							}							
 973:.\Protocolo.c **** 						}
 974:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 4324              		.loc 1 974 0 is_stmt 1
 4325 0964 0023     		movs	r3, #0
 4326 0966 FB73     		strb	r3, [r7, #15]
 4327 0968 23E0     		b	.L268
 4328              	.L271:
 975:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 4329              		.loc 1 975 0
 4330 096a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4331 096c 0C33     		adds	r3, r3, #12
 4332 096e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4333 0970 0D32     		adds	r2, r2, #13
 4334 0972 6949     		ldr	r1, .L361+4
 4335 0974 8A5C     		ldrb	r2, [r1, r2]
 4336 0976 D1B2     		uxtb	r1, r2
 4337 0978 684A     		ldr	r2, .L361+8
 4338 097a 1344     		add	r3, r3, r2
 4339 097c 0A46     		mov	r2, r1
 4340 097e 9A70     		strb	r2, [r3, #2]
 976:.\Protocolo.c **** 							if(lado2.totales[0][x+12]==0||(lado2.totales[0][x+12]&0xF0)!=0xE0){
 4341              		.loc 1 976 0
 4342 0980 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4343 0982 0C33     		adds	r3, r3, #12
 4344 0984 654A     		ldr	r2, .L361+8
 4345 0986 1344     		add	r3, r3, r2
 4346 0988 9B78     		ldrb	r3, [r3, #2]
 4347 098a DBB2     		uxtb	r3, r3
 4348 098c 002B     		cmp	r3, #0
 4349 098e 09D0     		beq	.L269
 4350              		.loc 1 976 0 is_stmt 0 discriminator 1
 4351 0990 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4352 0992 0C33     		adds	r3, r3, #12
 4353 0994 614A     		ldr	r2, .L361+8
 4354 0996 1344     		add	r3, r3, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 97


 4355 0998 9B78     		ldrb	r3, [r3, #2]
 4356 099a DBB2     		uxtb	r3, r3
 4357 099c 03F0F003 		and	r3, r3, #240
 4358 09a0 E02B     		cmp	r3, #224
 4359 09a2 03D0     		beq	.L270
 4360              	.L269:
 977:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4361              		.loc 1 977 0 is_stmt 1
 4362 09a4 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 978:.\Protocolo.c **** 								return 0;
 4363              		.loc 1 978 0
 4364 09a8 0023     		movs	r3, #0
 4365 09aa 6AE3     		b	.L167
 4366              	.L270:
 974:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 4367              		.loc 1 974 0 discriminator 2
 4368 09ac FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4369 09ae 0133     		adds	r3, r3, #1
 4370 09b0 FB73     		strb	r3, [r7, #15]
 4371              	.L268:
 974:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 4372              		.loc 1 974 0 is_stmt 0 discriminator 1
 4373 09b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4374 09b4 072B     		cmp	r3, #7
 4375 09b6 D8D9     		bls	.L271
 979:.\Protocolo.c **** 							}							
 980:.\Protocolo.c **** 						}
 981:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 4376              		.loc 1 981 0 is_stmt 1
 4377 09b8 0023     		movs	r3, #0
 4378 09ba FB73     		strb	r3, [r7, #15]
 4379 09bc 0DE0     		b	.L272
 4380              	.L273:
 982:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+22];
 4381              		.loc 1 982 0 discriminator 3
 4382 09be FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4383 09c0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4384 09c2 1632     		adds	r2, r2, #22
 4385 09c4 5449     		ldr	r1, .L361+4
 4386 09c6 8A5C     		ldrb	r2, [r1, r2]
 4387 09c8 D1B2     		uxtb	r1, r2
 4388 09ca 544A     		ldr	r2, .L361+8
 4389 09cc 1344     		add	r3, r3, r2
 4390 09ce 0A46     		mov	r2, r1
 4391 09d0 83F84A20 		strb	r2, [r3, #74]
 981:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+22];
 4392              		.loc 1 981 0 discriminator 3
 4393 09d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4394 09d6 0133     		adds	r3, r3, #1
 4395 09d8 FB73     		strb	r3, [r7, #15]
 4396              	.L272:
 981:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+22];
 4397              		.loc 1 981 0 is_stmt 0 discriminator 1
 4398 09da FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4399 09dc 032B     		cmp	r3, #3
 4400 09de EED9     		bls	.L273
 983:.\Protocolo.c **** 						}				
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 98


 984:.\Protocolo.c **** 						if(nmangueras==2){
 4401              		.loc 1 984 0 is_stmt 1
 4402 09e0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4403 09e2 022B     		cmp	r3, #2
 4404 09e4 68D1     		bne	.L274
 985:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4405              		.loc 1 985 0
 4406 09e6 0023     		movs	r3, #0
 4407 09e8 FB73     		strb	r3, [r7, #15]
 4408 09ea 20E0     		b	.L275
 4409              	.L278:
 986:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4410              		.loc 1 986 0
 4411 09ec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4412 09ee FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4413 09f0 2232     		adds	r2, r2, #34
 4414 09f2 4949     		ldr	r1, .L361+4
 4415 09f4 8A5C     		ldrb	r2, [r1, r2]
 4416 09f6 D1B2     		uxtb	r1, r2
 4417 09f8 484A     		ldr	r2, .L361+8
 4418 09fa 1344     		add	r3, r3, r2
 4419 09fc 0A46     		mov	r2, r1
 4420 09fe 9A76     		strb	r2, [r3, #26]
 987:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 4421              		.loc 1 987 0
 4422 0a00 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4423 0a02 464A     		ldr	r2, .L361+8
 4424 0a04 1344     		add	r3, r3, r2
 4425 0a06 9B7E     		ldrb	r3, [r3, #26]
 4426 0a08 DBB2     		uxtb	r3, r3
 4427 0a0a 002B     		cmp	r3, #0
 4428 0a0c 08D0     		beq	.L276
 4429              		.loc 1 987 0 is_stmt 0 discriminator 1
 4430 0a0e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4431 0a10 424A     		ldr	r2, .L361+8
 4432 0a12 1344     		add	r3, r3, r2
 4433 0a14 9B7E     		ldrb	r3, [r3, #26]
 4434 0a16 DBB2     		uxtb	r3, r3
 4435 0a18 03F0F003 		and	r3, r3, #240
 4436 0a1c E02B     		cmp	r3, #224
 4437 0a1e 03D0     		beq	.L277
 4438              	.L276:
 988:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4439              		.loc 1 988 0 is_stmt 1
 4440 0a20 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 989:.\Protocolo.c **** 									return 0;
 4441              		.loc 1 989 0
 4442 0a24 0023     		movs	r3, #0
 4443 0a26 2CE3     		b	.L167
 4444              	.L277:
 985:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4445              		.loc 1 985 0 discriminator 2
 4446 0a28 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4447 0a2a 0133     		adds	r3, r3, #1
 4448 0a2c FB73     		strb	r3, [r7, #15]
 4449              	.L275:
 985:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 99


 4450              		.loc 1 985 0 is_stmt 0 discriminator 1
 4451 0a2e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4452 0a30 072B     		cmp	r3, #7
 4453 0a32 DBD9     		bls	.L278
 990:.\Protocolo.c **** 								}								
 991:.\Protocolo.c **** 							}
 992:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4454              		.loc 1 992 0 is_stmt 1
 4455 0a34 0023     		movs	r3, #0
 4456 0a36 FB73     		strb	r3, [r7, #15]
 4457 0a38 23E0     		b	.L279
 4458              	.L282:
 993:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4459              		.loc 1 993 0
 4460 0a3a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4461 0a3c 0C33     		adds	r3, r3, #12
 4462 0a3e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4463 0a40 2B32     		adds	r2, r2, #43
 4464 0a42 3549     		ldr	r1, .L361+4
 4465 0a44 8A5C     		ldrb	r2, [r1, r2]
 4466 0a46 D1B2     		uxtb	r1, r2
 4467 0a48 344A     		ldr	r2, .L361+8
 4468 0a4a 1344     		add	r3, r3, r2
 4469 0a4c 0A46     		mov	r2, r1
 4470 0a4e 9A76     		strb	r2, [r3, #26]
 994:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 4471              		.loc 1 994 0
 4472 0a50 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4473 0a52 0C33     		adds	r3, r3, #12
 4474 0a54 314A     		ldr	r2, .L361+8
 4475 0a56 1344     		add	r3, r3, r2
 4476 0a58 9B7E     		ldrb	r3, [r3, #26]
 4477 0a5a DBB2     		uxtb	r3, r3
 4478 0a5c 002B     		cmp	r3, #0
 4479 0a5e 09D0     		beq	.L280
 4480              		.loc 1 994 0 is_stmt 0 discriminator 1
 4481 0a60 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4482 0a62 0C33     		adds	r3, r3, #12
 4483 0a64 2D4A     		ldr	r2, .L361+8
 4484 0a66 1344     		add	r3, r3, r2
 4485 0a68 9B7E     		ldrb	r3, [r3, #26]
 4486 0a6a DBB2     		uxtb	r3, r3
 4487 0a6c 03F0F003 		and	r3, r3, #240
 4488 0a70 E02B     		cmp	r3, #224
 4489 0a72 03D0     		beq	.L281
 4490              	.L280:
 995:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4491              		.loc 1 995 0 is_stmt 1
 4492 0a74 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 996:.\Protocolo.c **** 									return 0;
 4493              		.loc 1 996 0
 4494 0a78 0023     		movs	r3, #0
 4495 0a7a 02E3     		b	.L167
 4496              	.L281:
 992:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4497              		.loc 1 992 0 discriminator 2
 4498 0a7c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 100


 4499 0a7e 0133     		adds	r3, r3, #1
 4500 0a80 FB73     		strb	r3, [r7, #15]
 4501              	.L279:
 992:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4502              		.loc 1 992 0 is_stmt 0 discriminator 1
 4503 0a82 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4504 0a84 072B     		cmp	r3, #7
 4505 0a86 D8D9     		bls	.L282
 997:.\Protocolo.c **** 								}								
 998:.\Protocolo.c **** 							}
 999:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4506              		.loc 1 999 0 is_stmt 1
 4507 0a88 0023     		movs	r3, #0
 4508 0a8a FB73     		strb	r3, [r7, #15]
 4509 0a8c 0DE0     		b	.L283
 4510              	.L284:
1000:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4511              		.loc 1 1000 0 discriminator 3
 4512 0a8e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4513 0a90 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4514 0a92 3432     		adds	r2, r2, #52
 4515 0a94 2049     		ldr	r1, .L361+4
 4516 0a96 8A5C     		ldrb	r2, [r1, r2]
 4517 0a98 D1B2     		uxtb	r1, r2
 4518 0a9a 204A     		ldr	r2, .L361+8
 4519 0a9c 1344     		add	r3, r3, r2
 4520 0a9e 0A46     		mov	r2, r1
 4521 0aa0 83F84F20 		strb	r2, [r3, #79]
 999:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4522              		.loc 1 999 0 discriminator 3
 4523 0aa4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4524 0aa6 0133     		adds	r3, r3, #1
 4525 0aa8 FB73     		strb	r3, [r7, #15]
 4526              	.L283:
 999:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4527              		.loc 1 999 0 is_stmt 0 discriminator 1
 4528 0aaa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4529 0aac 032B     		cmp	r3, #3
 4530 0aae EED9     		bls	.L284
1001:.\Protocolo.c **** 							}
1002:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4531              		.loc 1 1002 0 is_stmt 1
 4532 0ab0 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1003:.\Protocolo.c ****     						return 2;                            
 4533              		.loc 1 1003 0
 4534 0ab4 0223     		movs	r3, #2
 4535 0ab6 E4E2     		b	.L167
 4536              	.L274:
1004:.\Protocolo.c **** 						}
1005:.\Protocolo.c **** 						if(nmangueras==3){
 4537              		.loc 1 1005 0
 4538 0ab8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4539 0aba 032B     		cmp	r3, #3
 4540 0abc 40F0DA80 		bne	.L285
1006:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4541              		.loc 1 1006 0
 4542 0ac0 0023     		movs	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 101


 4543 0ac2 FB73     		strb	r3, [r7, #15]
 4544 0ac4 20E0     		b	.L286
 4545              	.L289:
1007:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4546              		.loc 1 1007 0
 4547 0ac6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4548 0ac8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4549 0aca 2232     		adds	r2, r2, #34
 4550 0acc 1249     		ldr	r1, .L361+4
 4551 0ace 8A5C     		ldrb	r2, [r1, r2]
 4552 0ad0 D1B2     		uxtb	r1, r2
 4553 0ad2 124A     		ldr	r2, .L361+8
 4554 0ad4 1344     		add	r3, r3, r2
 4555 0ad6 0A46     		mov	r2, r1
 4556 0ad8 9A76     		strb	r2, [r3, #26]
1008:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 4557              		.loc 1 1008 0
 4558 0ada FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4559 0adc 0F4A     		ldr	r2, .L361+8
 4560 0ade 1344     		add	r3, r3, r2
 4561 0ae0 9B7E     		ldrb	r3, [r3, #26]
 4562 0ae2 DBB2     		uxtb	r3, r3
 4563 0ae4 002B     		cmp	r3, #0
 4564 0ae6 08D0     		beq	.L287
 4565              		.loc 1 1008 0 is_stmt 0 discriminator 1
 4566 0ae8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4567 0aea 0C4A     		ldr	r2, .L361+8
 4568 0aec 1344     		add	r3, r3, r2
 4569 0aee 9B7E     		ldrb	r3, [r3, #26]
 4570 0af0 DBB2     		uxtb	r3, r3
 4571 0af2 03F0F003 		and	r3, r3, #240
 4572 0af6 E02B     		cmp	r3, #224
 4573 0af8 03D0     		beq	.L288
 4574              	.L287:
1009:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4575              		.loc 1 1009 0 is_stmt 1
 4576 0afa FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1010:.\Protocolo.c **** 									return 0;
 4577              		.loc 1 1010 0
 4578 0afe 0023     		movs	r3, #0
 4579 0b00 BFE2     		b	.L167
 4580              	.L288:
1006:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4581              		.loc 1 1006 0 discriminator 2
 4582 0b02 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4583 0b04 0133     		adds	r3, r3, #1
 4584 0b06 FB73     		strb	r3, [r7, #15]
 4585              	.L286:
1006:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4586              		.loc 1 1006 0 is_stmt 0 discriminator 1
 4587 0b08 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4588 0b0a 072B     		cmp	r3, #7
 4589 0b0c DBD9     		bls	.L289
1011:.\Protocolo.c **** 								}								
1012:.\Protocolo.c **** 							}
1013:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4590              		.loc 1 1013 0 is_stmt 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 102


 4591 0b0e 0023     		movs	r3, #0
 4592 0b10 FB73     		strb	r3, [r7, #15]
 4593 0b12 29E0     		b	.L290
 4594              	.L362:
 4595              		.align	2
 4596              	.L361:
 4597 0b14 00000000 		.word	version
 4598 0b18 00000000 		.word	Surtidor_rxBuffer
 4599 0b1c 00000000 		.word	lado2
 4600              	.L293:
1014:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4601              		.loc 1 1014 0
 4602 0b20 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4603 0b22 0C33     		adds	r3, r3, #12
 4604 0b24 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4605 0b26 2B32     		adds	r2, r2, #43
 4606 0b28 AE49     		ldr	r1, .L363
 4607 0b2a 8A5C     		ldrb	r2, [r1, r2]
 4608 0b2c D1B2     		uxtb	r1, r2
 4609 0b2e AE4A     		ldr	r2, .L363+4
 4610 0b30 1344     		add	r3, r3, r2
 4611 0b32 0A46     		mov	r2, r1
 4612 0b34 9A76     		strb	r2, [r3, #26]
1015:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 4613              		.loc 1 1015 0
 4614 0b36 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4615 0b38 0C33     		adds	r3, r3, #12
 4616 0b3a AB4A     		ldr	r2, .L363+4
 4617 0b3c 1344     		add	r3, r3, r2
 4618 0b3e 9B7E     		ldrb	r3, [r3, #26]
 4619 0b40 DBB2     		uxtb	r3, r3
 4620 0b42 002B     		cmp	r3, #0
 4621 0b44 09D0     		beq	.L291
 4622              		.loc 1 1015 0 is_stmt 0 discriminator 1
 4623 0b46 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4624 0b48 0C33     		adds	r3, r3, #12
 4625 0b4a A74A     		ldr	r2, .L363+4
 4626 0b4c 1344     		add	r3, r3, r2
 4627 0b4e 9B7E     		ldrb	r3, [r3, #26]
 4628 0b50 DBB2     		uxtb	r3, r3
 4629 0b52 03F0F003 		and	r3, r3, #240
 4630 0b56 E02B     		cmp	r3, #224
 4631 0b58 03D0     		beq	.L292
 4632              	.L291:
1016:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4633              		.loc 1 1016 0 is_stmt 1
 4634 0b5a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1017:.\Protocolo.c **** 									return 0;
 4635              		.loc 1 1017 0
 4636 0b5e 0023     		movs	r3, #0
 4637 0b60 8FE2     		b	.L167
 4638              	.L292:
1013:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4639              		.loc 1 1013 0 discriminator 2
 4640 0b62 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4641 0b64 0133     		adds	r3, r3, #1
 4642 0b66 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 103


 4643              	.L290:
1013:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4644              		.loc 1 1013 0 is_stmt 0 discriminator 1
 4645 0b68 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4646 0b6a 072B     		cmp	r3, #7
 4647 0b6c D8D9     		bls	.L293
1018:.\Protocolo.c **** 								}								
1019:.\Protocolo.c **** 							}
1020:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4648              		.loc 1 1020 0 is_stmt 1
 4649 0b6e 0023     		movs	r3, #0
 4650 0b70 FB73     		strb	r3, [r7, #15]
 4651 0b72 0DE0     		b	.L294
 4652              	.L295:
1021:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4653              		.loc 1 1021 0 discriminator 3
 4654 0b74 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4655 0b76 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4656 0b78 3432     		adds	r2, r2, #52
 4657 0b7a 9A49     		ldr	r1, .L363
 4658 0b7c 8A5C     		ldrb	r2, [r1, r2]
 4659 0b7e D1B2     		uxtb	r1, r2
 4660 0b80 994A     		ldr	r2, .L363+4
 4661 0b82 1344     		add	r3, r3, r2
 4662 0b84 0A46     		mov	r2, r1
 4663 0b86 83F84F20 		strb	r2, [r3, #79]
1020:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4664              		.loc 1 1020 0 discriminator 3
 4665 0b8a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4666 0b8c 0133     		adds	r3, r3, #1
 4667 0b8e FB73     		strb	r3, [r7, #15]
 4668              	.L294:
1020:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4669              		.loc 1 1020 0 is_stmt 0 discriminator 1
 4670 0b90 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4671 0b92 032B     		cmp	r3, #3
 4672 0b94 EED9     		bls	.L295
1022:.\Protocolo.c **** 							}						
1023:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4673              		.loc 1 1023 0 is_stmt 1
 4674 0b96 0023     		movs	r3, #0
 4675 0b98 FB73     		strb	r3, [r7, #15]
 4676 0b9a 23E0     		b	.L296
 4677              	.L299:
1024:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+64];
 4678              		.loc 1 1024 0
 4679 0b9c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4680 0b9e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4681 0ba0 4032     		adds	r2, r2, #64
 4682 0ba2 9049     		ldr	r1, .L363
 4683 0ba4 8A5C     		ldrb	r2, [r1, r2]
 4684 0ba6 D1B2     		uxtb	r1, r2
 4685 0ba8 8F4A     		ldr	r2, .L363+4
 4686 0baa 1344     		add	r3, r3, r2
 4687 0bac 0A46     		mov	r2, r1
 4688 0bae 83F83220 		strb	r2, [r3, #50]
1025:.\Protocolo.c **** 								if(lado2.totales[2][x]==0||(lado2.totales[2][x]&0xF0)!=0xE0){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 104


 4689              		.loc 1 1025 0
 4690 0bb2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4691 0bb4 8C4A     		ldr	r2, .L363+4
 4692 0bb6 1344     		add	r3, r3, r2
 4693 0bb8 93F83230 		ldrb	r3, [r3, #50]
 4694 0bbc DBB2     		uxtb	r3, r3
 4695 0bbe 002B     		cmp	r3, #0
 4696 0bc0 09D0     		beq	.L297
 4697              		.loc 1 1025 0 is_stmt 0 discriminator 1
 4698 0bc2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4699 0bc4 884A     		ldr	r2, .L363+4
 4700 0bc6 1344     		add	r3, r3, r2
 4701 0bc8 93F83230 		ldrb	r3, [r3, #50]
 4702 0bcc DBB2     		uxtb	r3, r3
 4703 0bce 03F0F003 		and	r3, r3, #240
 4704 0bd2 E02B     		cmp	r3, #224
 4705 0bd4 03D0     		beq	.L298
 4706              	.L297:
1026:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4707              		.loc 1 1026 0 is_stmt 1
 4708 0bd6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1027:.\Protocolo.c **** 									return 0;
 4709              		.loc 1 1027 0
 4710 0bda 0023     		movs	r3, #0
 4711 0bdc 51E2     		b	.L167
 4712              	.L298:
1023:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+64];
 4713              		.loc 1 1023 0 discriminator 2
 4714 0bde FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4715 0be0 0133     		adds	r3, r3, #1
 4716 0be2 FB73     		strb	r3, [r7, #15]
 4717              	.L296:
1023:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+64];
 4718              		.loc 1 1023 0 is_stmt 0 discriminator 1
 4719 0be4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4720 0be6 072B     		cmp	r3, #7
 4721 0be8 D8D9     		bls	.L299
1028:.\Protocolo.c **** 								}								
1029:.\Protocolo.c **** 							}
1030:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4722              		.loc 1 1030 0 is_stmt 1
 4723 0bea 0023     		movs	r3, #0
 4724 0bec FB73     		strb	r3, [r7, #15]
 4725 0bee 26E0     		b	.L300
 4726              	.L303:
1031:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 4727              		.loc 1 1031 0
 4728 0bf0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4729 0bf2 0C33     		adds	r3, r3, #12
 4730 0bf4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4731 0bf6 4932     		adds	r2, r2, #73
 4732 0bf8 7A49     		ldr	r1, .L363
 4733 0bfa 8A5C     		ldrb	r2, [r1, r2]
 4734 0bfc D1B2     		uxtb	r1, r2
 4735 0bfe 7A4A     		ldr	r2, .L363+4
 4736 0c00 1344     		add	r3, r3, r2
 4737 0c02 0A46     		mov	r2, r1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 105


 4738 0c04 83F83220 		strb	r2, [r3, #50]
1032:.\Protocolo.c **** 								if(lado2.totales[2][x+12]==0||(lado2.totales[2][x+12]&0xF0)!=0xE0){
 4739              		.loc 1 1032 0
 4740 0c08 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4741 0c0a 0C33     		adds	r3, r3, #12
 4742 0c0c 764A     		ldr	r2, .L363+4
 4743 0c0e 1344     		add	r3, r3, r2
 4744 0c10 93F83230 		ldrb	r3, [r3, #50]
 4745 0c14 DBB2     		uxtb	r3, r3
 4746 0c16 002B     		cmp	r3, #0
 4747 0c18 0AD0     		beq	.L301
 4748              		.loc 1 1032 0 is_stmt 0 discriminator 1
 4749 0c1a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4750 0c1c 0C33     		adds	r3, r3, #12
 4751 0c1e 724A     		ldr	r2, .L363+4
 4752 0c20 1344     		add	r3, r3, r2
 4753 0c22 93F83230 		ldrb	r3, [r3, #50]
 4754 0c26 DBB2     		uxtb	r3, r3
 4755 0c28 03F0F003 		and	r3, r3, #240
 4756 0c2c E02B     		cmp	r3, #224
 4757 0c2e 03D0     		beq	.L302
 4758              	.L301:
1033:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4759              		.loc 1 1033 0 is_stmt 1
 4760 0c30 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1034:.\Protocolo.c **** 									return 0;
 4761              		.loc 1 1034 0
 4762 0c34 0023     		movs	r3, #0
 4763 0c36 24E2     		b	.L167
 4764              	.L302:
1030:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 4765              		.loc 1 1030 0 discriminator 2
 4766 0c38 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4767 0c3a 0133     		adds	r3, r3, #1
 4768 0c3c FB73     		strb	r3, [r7, #15]
 4769              	.L300:
1030:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 4770              		.loc 1 1030 0 is_stmt 0 discriminator 1
 4771 0c3e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4772 0c40 072B     		cmp	r3, #7
 4773 0c42 D5D9     		bls	.L303
1035:.\Protocolo.c **** 								}								
1036:.\Protocolo.c **** 							}
1037:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4774              		.loc 1 1037 0 is_stmt 1
 4775 0c44 0023     		movs	r3, #0
 4776 0c46 FB73     		strb	r3, [r7, #15]
 4777 0c48 0DE0     		b	.L304
 4778              	.L305:
1038:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+82];
 4779              		.loc 1 1038 0 discriminator 3
 4780 0c4a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4781 0c4c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4782 0c4e 5232     		adds	r2, r2, #82
 4783 0c50 6449     		ldr	r1, .L363
 4784 0c52 8A5C     		ldrb	r2, [r1, r2]
 4785 0c54 D1B2     		uxtb	r1, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 106


 4786 0c56 644A     		ldr	r2, .L363+4
 4787 0c58 1344     		add	r3, r3, r2
 4788 0c5a 0A46     		mov	r2, r1
 4789 0c5c 83F85420 		strb	r2, [r3, #84]
1037:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+82];
 4790              		.loc 1 1037 0 discriminator 3
 4791 0c60 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4792 0c62 0133     		adds	r3, r3, #1
 4793 0c64 FB73     		strb	r3, [r7, #15]
 4794              	.L304:
1037:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+82];
 4795              		.loc 1 1037 0 is_stmt 0 discriminator 1
 4796 0c66 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4797 0c68 032B     		cmp	r3, #3
 4798 0c6a EED9     		bls	.L305
1039:.\Protocolo.c **** 							}
1040:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4799              		.loc 1 1040 0 is_stmt 1
 4800 0c6c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1041:.\Protocolo.c ****     						return 3;                            
 4801              		.loc 1 1041 0
 4802 0c70 0323     		movs	r3, #3
 4803 0c72 06E2     		b	.L167
 4804              	.L285:
1042:.\Protocolo.c **** 						}
1043:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4805              		.loc 1 1043 0
 4806 0c74 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1044:.\Protocolo.c **** 						return 1;			
 4807              		.loc 1 1044 0
 4808 0c78 0123     		movs	r3, #1
 4809 0c7a 02E2     		b	.L167
 4810              	.L259:
1045:.\Protocolo.c **** 					}
1046:.\Protocolo.c **** 					else{
1047:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4811              		.loc 1 1047 0
 4812 0c7c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1048:.\Protocolo.c **** 						return 0;		
 4813              		.loc 1 1048 0
 4814 0c80 0023     		movs	r3, #0
 4815 0c82 FEE1     		b	.L167
 4816              	.L258:
1049:.\Protocolo.c **** 					}
1050:.\Protocolo.c **** 				}
1051:.\Protocolo.c **** 				else{
1052:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 4817              		.loc 1 1052 0
 4818 0c84 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1053:.\Protocolo.c **** 					return 0;		
 4819              		.loc 1 1053 0
 4820 0c88 0023     		movs	r3, #0
 4821 0c8a FAE1     		b	.L167
 4822              	.L256:
1054:.\Protocolo.c **** 				}				
1055:.\Protocolo.c **** 			}
1056:.\Protocolo.c **** 			else{
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 107


1057:.\Protocolo.c **** 				CyDelay(900);
 4823              		.loc 1 1057 0
 4824 0c8c 4FF46170 		mov	r0, #900
 4825 0c90 FFF7FEFF 		bl	CyDelay
1058:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 4826              		.loc 1 1058 0
 4827 0c94 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 4828 0c98 0346     		mov	r3, r0
 4829 0c9a FB73     		strb	r3, [r7, #15]
1059:.\Protocolo.c **** 				if((x==46)||(x==88)||(x==130)){					
 4830              		.loc 1 1059 0
 4831 0c9c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4832 0c9e 2E2B     		cmp	r3, #46
 4833 0ca0 06D0     		beq	.L306
 4834              		.loc 1 1059 0 is_stmt 0 discriminator 1
 4835 0ca2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4836 0ca4 582B     		cmp	r3, #88
 4837 0ca6 03D0     		beq	.L306
 4838              		.loc 1 1059 0 discriminator 2
 4839 0ca8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4840 0caa 822B     		cmp	r3, #130
 4841 0cac 40F0E481 		bne	.L307
 4842              	.L306:
1060:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 4843              		.loc 1 1060 0 is_stmt 1
 4844 0cb0 4C4B     		ldr	r3, .L363
 4845 0cb2 1B78     		ldrb	r3, [r3]
 4846 0cb4 DBB2     		uxtb	r3, r3
 4847 0cb6 FF2B     		cmp	r3, #255
 4848 0cb8 40F0DA81 		bne	.L308
 4849              		.loc 1 1060 0 is_stmt 0 discriminator 1
 4850 0cbc 494B     		ldr	r3, .L363
 4851 0cbe 5B78     		ldrb	r3, [r3, #1]
 4852 0cc0 DBB2     		uxtb	r3, r3
 4853 0cc2 F62B     		cmp	r3, #246
 4854 0cc4 40F0D481 		bne	.L308
 4855              		.loc 1 1060 0 discriminator 2
 4856 0cc8 464B     		ldr	r3, .L363
 4857 0cca DB78     		ldrb	r3, [r3, #3]
 4858 0ccc DBB2     		uxtb	r3, r3
 4859 0cce F92B     		cmp	r3, #249
 4860 0cd0 40F0CE81 		bne	.L308
1061:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4861              		.loc 1 1061 0 is_stmt 1
 4862 0cd4 0023     		movs	r3, #0
 4863 0cd6 BB73     		strb	r3, [r7, #14]
 4864 0cd8 16E0     		b	.L309
 4865              	.L312:
1062:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4866              		.loc 1 1062 0
 4867 0cda 0023     		movs	r3, #0
 4868 0cdc FB73     		strb	r3, [r7, #15]
 4869 0cde 0DE0     		b	.L310
 4870              	.L311:
1063:.\Protocolo.c ****                     			lado2.totales[y][x]=0;
 4871              		.loc 1 1063 0 discriminator 3
 4872 0ce0 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 108


 4873 0ce2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 4874 0ce4 4048     		ldr	r0, .L363+4
 4875 0ce6 1346     		mov	r3, r2
 4876 0ce8 5B00     		lsls	r3, r3, #1
 4877 0cea 1344     		add	r3, r3, r2
 4878 0cec DB00     		lsls	r3, r3, #3
 4879 0cee 0B44     		add	r3, r3, r1
 4880 0cf0 0344     		add	r3, r3, r0
 4881 0cf2 0022     		movs	r2, #0
 4882 0cf4 9A70     		strb	r2, [r3, #2]
1062:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4883              		.loc 1 1062 0 discriminator 3
 4884 0cf6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4885 0cf8 0133     		adds	r3, r3, #1
 4886 0cfa FB73     		strb	r3, [r7, #15]
 4887              	.L310:
1062:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4888              		.loc 1 1062 0 is_stmt 0 discriminator 1
 4889 0cfc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4890 0cfe 172B     		cmp	r3, #23
 4891 0d00 EED9     		bls	.L311
1061:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4892              		.loc 1 1061 0 is_stmt 1 discriminator 2
 4893 0d02 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4894 0d04 0133     		adds	r3, r3, #1
 4895 0d06 BB73     		strb	r3, [r7, #14]
 4896              	.L309:
1061:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4897              		.loc 1 1061 0 is_stmt 0 discriminator 1
 4898 0d08 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4899 0d0a 022B     		cmp	r3, #2
 4900 0d0c E5D9     		bls	.L312
1064:.\Protocolo.c ****                     		}
1065:.\Protocolo.c ****                     	}                         
1066:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4901              		.loc 1 1066 0 is_stmt 1
 4902 0d0e 0023     		movs	r3, #0
 4903 0d10 FB73     		strb	r3, [r7, #15]
 4904 0d12 20E0     		b	.L313
 4905              	.L316:
1067:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4906              		.loc 1 1067 0
 4907 0d14 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4908 0d16 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4909 0d18 0432     		adds	r2, r2, #4
 4910 0d1a 3249     		ldr	r1, .L363
 4911 0d1c 8A5C     		ldrb	r2, [r1, r2]
 4912 0d1e D1B2     		uxtb	r1, r2
 4913 0d20 314A     		ldr	r2, .L363+4
 4914 0d22 1344     		add	r3, r3, r2
 4915 0d24 0A46     		mov	r2, r1
 4916 0d26 9A70     		strb	r2, [r3, #2]
1068:.\Protocolo.c **** 							if(lado2.totales[0][x]==0||(lado2.totales[0][x]&0xF0)!=0xE0){
 4917              		.loc 1 1068 0
 4918 0d28 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4919 0d2a 2F4A     		ldr	r2, .L363+4
 4920 0d2c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 109


 4921 0d2e 9B78     		ldrb	r3, [r3, #2]
 4922 0d30 DBB2     		uxtb	r3, r3
 4923 0d32 002B     		cmp	r3, #0
 4924 0d34 08D0     		beq	.L314
 4925              		.loc 1 1068 0 is_stmt 0 discriminator 1
 4926 0d36 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4927 0d38 2B4A     		ldr	r2, .L363+4
 4928 0d3a 1344     		add	r3, r3, r2
 4929 0d3c 9B78     		ldrb	r3, [r3, #2]
 4930 0d3e DBB2     		uxtb	r3, r3
 4931 0d40 03F0F003 		and	r3, r3, #240
 4932 0d44 E02B     		cmp	r3, #224
 4933 0d46 03D0     		beq	.L315
 4934              	.L314:
1069:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4935              		.loc 1 1069 0 is_stmt 1
 4936 0d48 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1070:.\Protocolo.c **** 								return 0;
 4937              		.loc 1 1070 0
 4938 0d4c 0023     		movs	r3, #0
 4939 0d4e 98E1     		b	.L167
 4940              	.L315:
1066:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4941              		.loc 1 1066 0 discriminator 2
 4942 0d50 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4943 0d52 0133     		adds	r3, r3, #1
 4944 0d54 FB73     		strb	r3, [r7, #15]
 4945              	.L313:
1066:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4946              		.loc 1 1066 0 is_stmt 0 discriminator 1
 4947 0d56 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4948 0d58 0B2B     		cmp	r3, #11
 4949 0d5a DBD9     		bls	.L316
1071:.\Protocolo.c **** 							}							
1072:.\Protocolo.c **** 						}
1073:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4950              		.loc 1 1073 0 is_stmt 1
 4951 0d5c 0023     		movs	r3, #0
 4952 0d5e FB73     		strb	r3, [r7, #15]
 4953 0d60 23E0     		b	.L317
 4954              	.L320:
1074:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 4955              		.loc 1 1074 0
 4956 0d62 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4957 0d64 0C33     		adds	r3, r3, #12
 4958 0d66 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4959 0d68 1132     		adds	r2, r2, #17
 4960 0d6a 1E49     		ldr	r1, .L363
 4961 0d6c 8A5C     		ldrb	r2, [r1, r2]
 4962 0d6e D1B2     		uxtb	r1, r2
 4963 0d70 1D4A     		ldr	r2, .L363+4
 4964 0d72 1344     		add	r3, r3, r2
 4965 0d74 0A46     		mov	r2, r1
 4966 0d76 9A70     		strb	r2, [r3, #2]
1075:.\Protocolo.c **** 							if(lado2.totales[0][x+12]==0||(lado2.totales[0][x+12]&0xF0)!=0xE0){
 4967              		.loc 1 1075 0
 4968 0d78 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 110


 4969 0d7a 0C33     		adds	r3, r3, #12
 4970 0d7c 1A4A     		ldr	r2, .L363+4
 4971 0d7e 1344     		add	r3, r3, r2
 4972 0d80 9B78     		ldrb	r3, [r3, #2]
 4973 0d82 DBB2     		uxtb	r3, r3
 4974 0d84 002B     		cmp	r3, #0
 4975 0d86 09D0     		beq	.L318
 4976              		.loc 1 1075 0 is_stmt 0 discriminator 1
 4977 0d88 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4978 0d8a 0C33     		adds	r3, r3, #12
 4979 0d8c 164A     		ldr	r2, .L363+4
 4980 0d8e 1344     		add	r3, r3, r2
 4981 0d90 9B78     		ldrb	r3, [r3, #2]
 4982 0d92 DBB2     		uxtb	r3, r3
 4983 0d94 03F0F003 		and	r3, r3, #240
 4984 0d98 E02B     		cmp	r3, #224
 4985 0d9a 03D0     		beq	.L319
 4986              	.L318:
1076:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4987              		.loc 1 1076 0 is_stmt 1
 4988 0d9c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1077:.\Protocolo.c **** 								return 0;
 4989              		.loc 1 1077 0
 4990 0da0 0023     		movs	r3, #0
 4991 0da2 6EE1     		b	.L167
 4992              	.L319:
1073:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 4993              		.loc 1 1073 0 discriminator 2
 4994 0da4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4995 0da6 0133     		adds	r3, r3, #1
 4996 0da8 FB73     		strb	r3, [r7, #15]
 4997              	.L317:
1073:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 4998              		.loc 1 1073 0 is_stmt 0 discriminator 1
 4999 0daa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5000 0dac 0B2B     		cmp	r3, #11
 5001 0dae D8D9     		bls	.L320
1078:.\Protocolo.c **** 							}							
1079:.\Protocolo.c **** 						}
1080:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 5002              		.loc 1 1080 0 is_stmt 1
 5003 0db0 0023     		movs	r3, #0
 5004 0db2 FB73     		strb	r3, [r7, #15]
 5005 0db4 0DE0     		b	.L321
 5006              	.L322:
1081:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+30];
 5007              		.loc 1 1081 0 discriminator 3
 5008 0db6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5009 0db8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5010 0dba 1E32     		adds	r2, r2, #30
 5011 0dbc 0949     		ldr	r1, .L363
 5012 0dbe 8A5C     		ldrb	r2, [r1, r2]
 5013 0dc0 D1B2     		uxtb	r1, r2
 5014 0dc2 094A     		ldr	r2, .L363+4
 5015 0dc4 1344     		add	r3, r3, r2
 5016 0dc6 0A46     		mov	r2, r1
 5017 0dc8 83F84A20 		strb	r2, [r3, #74]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 111


1080:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+30];
 5018              		.loc 1 1080 0 discriminator 3
 5019 0dcc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5020 0dce 0133     		adds	r3, r3, #1
 5021 0dd0 FB73     		strb	r3, [r7, #15]
 5022              	.L321:
1080:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+30];
 5023              		.loc 1 1080 0 is_stmt 0 discriminator 1
 5024 0dd2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5025 0dd4 042B     		cmp	r3, #4
 5026 0dd6 EED9     		bls	.L322
1082:.\Protocolo.c **** 						}				
1083:.\Protocolo.c **** 						if(nmangueras==2){
 5027              		.loc 1 1083 0 is_stmt 1
 5028 0dd8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5029 0dda 022B     		cmp	r3, #2
 5030 0ddc 6CD1     		bne	.L323
1084:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5031              		.loc 1 1084 0
 5032 0dde 0023     		movs	r3, #0
 5033 0de0 FB73     		strb	r3, [r7, #15]
 5034 0de2 24E0     		b	.L324
 5035              	.L364:
 5036              		.align	2
 5037              	.L363:
 5038 0de4 00000000 		.word	Surtidor_rxBuffer
 5039 0de8 00000000 		.word	lado2
 5040              	.L327:
1085:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5041              		.loc 1 1085 0
 5042 0dec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5043 0dee FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5044 0df0 2E32     		adds	r2, r2, #46
 5045 0df2 A649     		ldr	r1, .L365
 5046 0df4 8A5C     		ldrb	r2, [r1, r2]
 5047 0df6 D1B2     		uxtb	r1, r2
 5048 0df8 A54A     		ldr	r2, .L365+4
 5049 0dfa 1344     		add	r3, r3, r2
 5050 0dfc 0A46     		mov	r2, r1
 5051 0dfe 9A76     		strb	r2, [r3, #26]
1086:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 5052              		.loc 1 1086 0
 5053 0e00 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5054 0e02 A34A     		ldr	r2, .L365+4
 5055 0e04 1344     		add	r3, r3, r2
 5056 0e06 9B7E     		ldrb	r3, [r3, #26]
 5057 0e08 DBB2     		uxtb	r3, r3
 5058 0e0a 002B     		cmp	r3, #0
 5059 0e0c 08D0     		beq	.L325
 5060              		.loc 1 1086 0 is_stmt 0 discriminator 1
 5061 0e0e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5062 0e10 9F4A     		ldr	r2, .L365+4
 5063 0e12 1344     		add	r3, r3, r2
 5064 0e14 9B7E     		ldrb	r3, [r3, #26]
 5065 0e16 DBB2     		uxtb	r3, r3
 5066 0e18 03F0F003 		and	r3, r3, #240
 5067 0e1c E02B     		cmp	r3, #224
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 112


 5068 0e1e 03D0     		beq	.L326
 5069              	.L325:
1087:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5070              		.loc 1 1087 0 is_stmt 1
 5071 0e20 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1088:.\Protocolo.c **** 									return 0;
 5072              		.loc 1 1088 0
 5073 0e24 0023     		movs	r3, #0
 5074 0e26 2CE1     		b	.L167
 5075              	.L326:
1084:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5076              		.loc 1 1084 0 discriminator 2
 5077 0e28 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5078 0e2a 0133     		adds	r3, r3, #1
 5079 0e2c FB73     		strb	r3, [r7, #15]
 5080              	.L324:
1084:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5081              		.loc 1 1084 0 is_stmt 0 discriminator 1
 5082 0e2e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5083 0e30 0B2B     		cmp	r3, #11
 5084 0e32 DBD9     		bls	.L327
1089:.\Protocolo.c **** 								}								
1090:.\Protocolo.c **** 							}
1091:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5085              		.loc 1 1091 0 is_stmt 1
 5086 0e34 0023     		movs	r3, #0
 5087 0e36 FB73     		strb	r3, [r7, #15]
 5088 0e38 23E0     		b	.L328
 5089              	.L331:
1092:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5090              		.loc 1 1092 0
 5091 0e3a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5092 0e3c 0C33     		adds	r3, r3, #12
 5093 0e3e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5094 0e40 3B32     		adds	r2, r2, #59
 5095 0e42 9249     		ldr	r1, .L365
 5096 0e44 8A5C     		ldrb	r2, [r1, r2]
 5097 0e46 D1B2     		uxtb	r1, r2
 5098 0e48 914A     		ldr	r2, .L365+4
 5099 0e4a 1344     		add	r3, r3, r2
 5100 0e4c 0A46     		mov	r2, r1
 5101 0e4e 9A76     		strb	r2, [r3, #26]
1093:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 5102              		.loc 1 1093 0
 5103 0e50 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5104 0e52 0C33     		adds	r3, r3, #12
 5105 0e54 8E4A     		ldr	r2, .L365+4
 5106 0e56 1344     		add	r3, r3, r2
 5107 0e58 9B7E     		ldrb	r3, [r3, #26]
 5108 0e5a DBB2     		uxtb	r3, r3
 5109 0e5c 002B     		cmp	r3, #0
 5110 0e5e 09D0     		beq	.L329
 5111              		.loc 1 1093 0 is_stmt 0 discriminator 1
 5112 0e60 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5113 0e62 0C33     		adds	r3, r3, #12
 5114 0e64 8A4A     		ldr	r2, .L365+4
 5115 0e66 1344     		add	r3, r3, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 113


 5116 0e68 9B7E     		ldrb	r3, [r3, #26]
 5117 0e6a DBB2     		uxtb	r3, r3
 5118 0e6c 03F0F003 		and	r3, r3, #240
 5119 0e70 E02B     		cmp	r3, #224
 5120 0e72 03D0     		beq	.L330
 5121              	.L329:
1094:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5122              		.loc 1 1094 0 is_stmt 1
 5123 0e74 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1095:.\Protocolo.c **** 									return 0;
 5124              		.loc 1 1095 0
 5125 0e78 0023     		movs	r3, #0
 5126 0e7a 02E1     		b	.L167
 5127              	.L330:
1091:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5128              		.loc 1 1091 0 discriminator 2
 5129 0e7c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5130 0e7e 0133     		adds	r3, r3, #1
 5131 0e80 FB73     		strb	r3, [r7, #15]
 5132              	.L328:
1091:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5133              		.loc 1 1091 0 is_stmt 0 discriminator 1
 5134 0e82 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5135 0e84 0B2B     		cmp	r3, #11
 5136 0e86 D8D9     		bls	.L331
1096:.\Protocolo.c **** 								}								
1097:.\Protocolo.c **** 							}
1098:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5137              		.loc 1 1098 0 is_stmt 1
 5138 0e88 0023     		movs	r3, #0
 5139 0e8a FB73     		strb	r3, [r7, #15]
 5140 0e8c 0DE0     		b	.L332
 5141              	.L333:
1099:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5142              		.loc 1 1099 0 discriminator 3
 5143 0e8e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5144 0e90 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5145 0e92 4832     		adds	r2, r2, #72
 5146 0e94 7D49     		ldr	r1, .L365
 5147 0e96 8A5C     		ldrb	r2, [r1, r2]
 5148 0e98 D1B2     		uxtb	r1, r2
 5149 0e9a 7D4A     		ldr	r2, .L365+4
 5150 0e9c 1344     		add	r3, r3, r2
 5151 0e9e 0A46     		mov	r2, r1
 5152 0ea0 83F84F20 		strb	r2, [r3, #79]
1098:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5153              		.loc 1 1098 0 discriminator 3
 5154 0ea4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5155 0ea6 0133     		adds	r3, r3, #1
 5156 0ea8 FB73     		strb	r3, [r7, #15]
 5157              	.L332:
1098:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5158              		.loc 1 1098 0 is_stmt 0 discriminator 1
 5159 0eaa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5160 0eac 042B     		cmp	r3, #4
 5161 0eae EED9     		bls	.L333
1100:.\Protocolo.c **** 							}
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 114


1101:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 5162              		.loc 1 1101 0 is_stmt 1
 5163 0eb0 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1102:.\Protocolo.c ****     						return 2;                            
 5164              		.loc 1 1102 0
 5165 0eb4 0223     		movs	r3, #2
 5166 0eb6 E4E0     		b	.L167
 5167              	.L323:
1103:.\Protocolo.c **** 						}
1104:.\Protocolo.c **** 						if(nmangueras==3){
 5168              		.loc 1 1104 0
 5169 0eb8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5170 0eba 032B     		cmp	r3, #3
 5171 0ebc 40F0D480 		bne	.L334
1105:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5172              		.loc 1 1105 0
 5173 0ec0 0023     		movs	r3, #0
 5174 0ec2 FB73     		strb	r3, [r7, #15]
 5175 0ec4 20E0     		b	.L335
 5176              	.L338:
1106:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5177              		.loc 1 1106 0
 5178 0ec6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5179 0ec8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5180 0eca 2E32     		adds	r2, r2, #46
 5181 0ecc 6F49     		ldr	r1, .L365
 5182 0ece 8A5C     		ldrb	r2, [r1, r2]
 5183 0ed0 D1B2     		uxtb	r1, r2
 5184 0ed2 6F4A     		ldr	r2, .L365+4
 5185 0ed4 1344     		add	r3, r3, r2
 5186 0ed6 0A46     		mov	r2, r1
 5187 0ed8 9A76     		strb	r2, [r3, #26]
1107:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 5188              		.loc 1 1107 0
 5189 0eda FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5190 0edc 6C4A     		ldr	r2, .L365+4
 5191 0ede 1344     		add	r3, r3, r2
 5192 0ee0 9B7E     		ldrb	r3, [r3, #26]
 5193 0ee2 DBB2     		uxtb	r3, r3
 5194 0ee4 002B     		cmp	r3, #0
 5195 0ee6 08D0     		beq	.L336
 5196              		.loc 1 1107 0 is_stmt 0 discriminator 1
 5197 0ee8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5198 0eea 694A     		ldr	r2, .L365+4
 5199 0eec 1344     		add	r3, r3, r2
 5200 0eee 9B7E     		ldrb	r3, [r3, #26]
 5201 0ef0 DBB2     		uxtb	r3, r3
 5202 0ef2 03F0F003 		and	r3, r3, #240
 5203 0ef6 E02B     		cmp	r3, #224
 5204 0ef8 03D0     		beq	.L337
 5205              	.L336:
1108:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5206              		.loc 1 1108 0 is_stmt 1
 5207 0efa FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1109:.\Protocolo.c **** 									return 0;
 5208              		.loc 1 1109 0
 5209 0efe 0023     		movs	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 115


 5210 0f00 BFE0     		b	.L167
 5211              	.L337:
1105:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5212              		.loc 1 1105 0 discriminator 2
 5213 0f02 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5214 0f04 0133     		adds	r3, r3, #1
 5215 0f06 FB73     		strb	r3, [r7, #15]
 5216              	.L335:
1105:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5217              		.loc 1 1105 0 is_stmt 0 discriminator 1
 5218 0f08 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5219 0f0a 0B2B     		cmp	r3, #11
 5220 0f0c DBD9     		bls	.L338
1110:.\Protocolo.c **** 								}								
1111:.\Protocolo.c **** 							}
1112:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5221              		.loc 1 1112 0 is_stmt 1
 5222 0f0e 0023     		movs	r3, #0
 5223 0f10 FB73     		strb	r3, [r7, #15]
 5224 0f12 23E0     		b	.L339
 5225              	.L342:
1113:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5226              		.loc 1 1113 0
 5227 0f14 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5228 0f16 0C33     		adds	r3, r3, #12
 5229 0f18 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5230 0f1a 3B32     		adds	r2, r2, #59
 5231 0f1c 5B49     		ldr	r1, .L365
 5232 0f1e 8A5C     		ldrb	r2, [r1, r2]
 5233 0f20 D1B2     		uxtb	r1, r2
 5234 0f22 5B4A     		ldr	r2, .L365+4
 5235 0f24 1344     		add	r3, r3, r2
 5236 0f26 0A46     		mov	r2, r1
 5237 0f28 9A76     		strb	r2, [r3, #26]
1114:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 5238              		.loc 1 1114 0
 5239 0f2a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5240 0f2c 0C33     		adds	r3, r3, #12
 5241 0f2e 584A     		ldr	r2, .L365+4
 5242 0f30 1344     		add	r3, r3, r2
 5243 0f32 9B7E     		ldrb	r3, [r3, #26]
 5244 0f34 DBB2     		uxtb	r3, r3
 5245 0f36 002B     		cmp	r3, #0
 5246 0f38 09D0     		beq	.L340
 5247              		.loc 1 1114 0 is_stmt 0 discriminator 1
 5248 0f3a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5249 0f3c 0C33     		adds	r3, r3, #12
 5250 0f3e 544A     		ldr	r2, .L365+4
 5251 0f40 1344     		add	r3, r3, r2
 5252 0f42 9B7E     		ldrb	r3, [r3, #26]
 5253 0f44 DBB2     		uxtb	r3, r3
 5254 0f46 03F0F003 		and	r3, r3, #240
 5255 0f4a E02B     		cmp	r3, #224
 5256 0f4c 03D0     		beq	.L341
 5257              	.L340:
1115:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5258              		.loc 1 1115 0 is_stmt 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 116


 5259 0f4e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1116:.\Protocolo.c **** 									return 0;
 5260              		.loc 1 1116 0
 5261 0f52 0023     		movs	r3, #0
 5262 0f54 95E0     		b	.L167
 5263              	.L341:
1112:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5264              		.loc 1 1112 0 discriminator 2
 5265 0f56 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5266 0f58 0133     		adds	r3, r3, #1
 5267 0f5a FB73     		strb	r3, [r7, #15]
 5268              	.L339:
1112:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5269              		.loc 1 1112 0 is_stmt 0 discriminator 1
 5270 0f5c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5271 0f5e 0B2B     		cmp	r3, #11
 5272 0f60 D8D9     		bls	.L342
1117:.\Protocolo.c **** 								}								
1118:.\Protocolo.c **** 							}
1119:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5273              		.loc 1 1119 0 is_stmt 1
 5274 0f62 0023     		movs	r3, #0
 5275 0f64 FB73     		strb	r3, [r7, #15]
 5276 0f66 0DE0     		b	.L343
 5277              	.L344:
1120:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5278              		.loc 1 1120 0 discriminator 3
 5279 0f68 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5280 0f6a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5281 0f6c 4832     		adds	r2, r2, #72
 5282 0f6e 4749     		ldr	r1, .L365
 5283 0f70 8A5C     		ldrb	r2, [r1, r2]
 5284 0f72 D1B2     		uxtb	r1, r2
 5285 0f74 464A     		ldr	r2, .L365+4
 5286 0f76 1344     		add	r3, r3, r2
 5287 0f78 0A46     		mov	r2, r1
 5288 0f7a 83F84F20 		strb	r2, [r3, #79]
1119:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5289              		.loc 1 1119 0 discriminator 3
 5290 0f7e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5291 0f80 0133     		adds	r3, r3, #1
 5292 0f82 FB73     		strb	r3, [r7, #15]
 5293              	.L343:
1119:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5294              		.loc 1 1119 0 is_stmt 0 discriminator 1
 5295 0f84 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5296 0f86 042B     		cmp	r3, #4
 5297 0f88 EED9     		bls	.L344
1121:.\Protocolo.c **** 							}					
1122:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5298              		.loc 1 1122 0 is_stmt 1
 5299 0f8a 0023     		movs	r3, #0
 5300 0f8c FB73     		strb	r3, [r7, #15]
 5301 0f8e 23E0     		b	.L345
 5302              	.L348:
1123:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+88];
 5303              		.loc 1 1123 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 117


 5304 0f90 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5305 0f92 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5306 0f94 5832     		adds	r2, r2, #88
 5307 0f96 3D49     		ldr	r1, .L365
 5308 0f98 8A5C     		ldrb	r2, [r1, r2]
 5309 0f9a D1B2     		uxtb	r1, r2
 5310 0f9c 3C4A     		ldr	r2, .L365+4
 5311 0f9e 1344     		add	r3, r3, r2
 5312 0fa0 0A46     		mov	r2, r1
 5313 0fa2 83F83220 		strb	r2, [r3, #50]
1124:.\Protocolo.c **** 								if(lado2.totales[2][x]==0||(lado2.totales[2][x]&0xF0)!=0xE0){
 5314              		.loc 1 1124 0
 5315 0fa6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5316 0fa8 394A     		ldr	r2, .L365+4
 5317 0faa 1344     		add	r3, r3, r2
 5318 0fac 93F83230 		ldrb	r3, [r3, #50]
 5319 0fb0 DBB2     		uxtb	r3, r3
 5320 0fb2 002B     		cmp	r3, #0
 5321 0fb4 09D0     		beq	.L346
 5322              		.loc 1 1124 0 is_stmt 0 discriminator 1
 5323 0fb6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5324 0fb8 354A     		ldr	r2, .L365+4
 5325 0fba 1344     		add	r3, r3, r2
 5326 0fbc 93F83230 		ldrb	r3, [r3, #50]
 5327 0fc0 DBB2     		uxtb	r3, r3
 5328 0fc2 03F0F003 		and	r3, r3, #240
 5329 0fc6 E02B     		cmp	r3, #224
 5330 0fc8 03D0     		beq	.L347
 5331              	.L346:
1125:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5332              		.loc 1 1125 0 is_stmt 1
 5333 0fca FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1126:.\Protocolo.c **** 									return 0;
 5334              		.loc 1 1126 0
 5335 0fce 0023     		movs	r3, #0
 5336 0fd0 57E0     		b	.L167
 5337              	.L347:
1122:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+88];
 5338              		.loc 1 1122 0 discriminator 2
 5339 0fd2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5340 0fd4 0133     		adds	r3, r3, #1
 5341 0fd6 FB73     		strb	r3, [r7, #15]
 5342              	.L345:
1122:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+88];
 5343              		.loc 1 1122 0 is_stmt 0 discriminator 1
 5344 0fd8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5345 0fda 0B2B     		cmp	r3, #11
 5346 0fdc D8D9     		bls	.L348
1127:.\Protocolo.c **** 								}								
1128:.\Protocolo.c **** 							}
1129:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5347              		.loc 1 1129 0 is_stmt 1
 5348 0fde 0023     		movs	r3, #0
 5349 0fe0 FB73     		strb	r3, [r7, #15]
 5350 0fe2 26E0     		b	.L349
 5351              	.L352:
1130:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+101];
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 118


 5352              		.loc 1 1130 0
 5353 0fe4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5354 0fe6 0C33     		adds	r3, r3, #12
 5355 0fe8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5356 0fea 6532     		adds	r2, r2, #101
 5357 0fec 2749     		ldr	r1, .L365
 5358 0fee 8A5C     		ldrb	r2, [r1, r2]
 5359 0ff0 D1B2     		uxtb	r1, r2
 5360 0ff2 274A     		ldr	r2, .L365+4
 5361 0ff4 1344     		add	r3, r3, r2
 5362 0ff6 0A46     		mov	r2, r1
 5363 0ff8 83F83220 		strb	r2, [r3, #50]
1131:.\Protocolo.c **** 								if(lado2.totales[2][x+12]==0||(lado2.totales[2][x+12]&0xF0)!=0xE0){
 5364              		.loc 1 1131 0
 5365 0ffc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5366 0ffe 0C33     		adds	r3, r3, #12
 5367 1000 234A     		ldr	r2, .L365+4
 5368 1002 1344     		add	r3, r3, r2
 5369 1004 93F83230 		ldrb	r3, [r3, #50]
 5370 1008 DBB2     		uxtb	r3, r3
 5371 100a 002B     		cmp	r3, #0
 5372 100c 0AD0     		beq	.L350
 5373              		.loc 1 1131 0 is_stmt 0 discriminator 1
 5374 100e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5375 1010 0C33     		adds	r3, r3, #12
 5376 1012 1F4A     		ldr	r2, .L365+4
 5377 1014 1344     		add	r3, r3, r2
 5378 1016 93F83230 		ldrb	r3, [r3, #50]
 5379 101a DBB2     		uxtb	r3, r3
 5380 101c 03F0F003 		and	r3, r3, #240
 5381 1020 E02B     		cmp	r3, #224
 5382 1022 03D0     		beq	.L351
 5383              	.L350:
1132:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5384              		.loc 1 1132 0 is_stmt 1
 5385 1024 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1133:.\Protocolo.c **** 									return 0;
 5386              		.loc 1 1133 0
 5387 1028 0023     		movs	r3, #0
 5388 102a 2AE0     		b	.L167
 5389              	.L351:
1129:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 5390              		.loc 1 1129 0 discriminator 2
 5391 102c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5392 102e 0133     		adds	r3, r3, #1
 5393 1030 FB73     		strb	r3, [r7, #15]
 5394              	.L349:
1129:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 5395              		.loc 1 1129 0 is_stmt 0 discriminator 1
 5396 1032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5397 1034 0B2B     		cmp	r3, #11
 5398 1036 D5D9     		bls	.L352
1134:.\Protocolo.c **** 								}								
1135:.\Protocolo.c **** 							}
1136:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5399              		.loc 1 1136 0 is_stmt 1
 5400 1038 0023     		movs	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 119


 5401 103a FB73     		strb	r3, [r7, #15]
 5402 103c 0DE0     		b	.L353
 5403              	.L354:
1137:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+114];
 5404              		.loc 1 1137 0 discriminator 3
 5405 103e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5406 1040 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5407 1042 7232     		adds	r2, r2, #114
 5408 1044 1149     		ldr	r1, .L365
 5409 1046 8A5C     		ldrb	r2, [r1, r2]
 5410 1048 D1B2     		uxtb	r1, r2
 5411 104a 114A     		ldr	r2, .L365+4
 5412 104c 1344     		add	r3, r3, r2
 5413 104e 0A46     		mov	r2, r1
 5414 1050 83F85420 		strb	r2, [r3, #84]
1136:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+114];
 5415              		.loc 1 1136 0 discriminator 3
 5416 1054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5417 1056 0133     		adds	r3, r3, #1
 5418 1058 FB73     		strb	r3, [r7, #15]
 5419              	.L353:
1136:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+114];
 5420              		.loc 1 1136 0 is_stmt 0 discriminator 1
 5421 105a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5422 105c 042B     		cmp	r3, #4
 5423 105e EED9     		bls	.L354
1138:.\Protocolo.c **** 							}
1139:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 5424              		.loc 1 1139 0 is_stmt 1
 5425 1060 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1140:.\Protocolo.c ****     						return 3;                            
 5426              		.loc 1 1140 0
 5427 1064 0323     		movs	r3, #3
 5428 1066 0CE0     		b	.L167
 5429              	.L334:
1141:.\Protocolo.c **** 						}
1142:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 5430              		.loc 1 1142 0
 5431 1068 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1143:.\Protocolo.c **** 						return 1;			
 5432              		.loc 1 1143 0
 5433 106c 0123     		movs	r3, #1
 5434 106e 08E0     		b	.L167
 5435              	.L308:
1144:.\Protocolo.c **** 					}
1145:.\Protocolo.c **** 					else{
1146:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 5436              		.loc 1 1146 0
 5437 1070 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1147:.\Protocolo.c **** 						return 0;		
 5438              		.loc 1 1147 0
 5439 1074 0023     		movs	r3, #0
 5440 1076 04E0     		b	.L167
 5441              	.L307:
1148:.\Protocolo.c **** 					}
1149:.\Protocolo.c **** 				}
1150:.\Protocolo.c **** 				else{
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 120


1151:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 5442              		.loc 1 1151 0
 5443 1078 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1152:.\Protocolo.c **** 					return 0;		
 5444              		.loc 1 1152 0
 5445 107c 0023     		movs	r3, #0
 5446 107e 00E0     		b	.L167
 5447              	.L154:
1153:.\Protocolo.c **** 				}				
1154:.\Protocolo.c **** 			}		
1155:.\Protocolo.c **** 		}
1156:.\Protocolo.c **** 	}
1157:.\Protocolo.c **** 	else{
1158:.\Protocolo.c **** 		return 0;
 5448              		.loc 1 1158 0
 5449 1080 0023     		movs	r3, #0
 5450              	.L167:
1159:.\Protocolo.c **** 	}
1160:.\Protocolo.c **** }
 5451              		.loc 1 1160 0
 5452 1082 1846     		mov	r0, r3
 5453 1084 1037     		adds	r7, r7, #16
 5454              		.cfi_def_cfa_offset 8
 5455 1086 BD46     		mov	sp, r7
 5456              		.cfi_def_cfa_register 13
 5457              		@ sp needed
 5458 1088 80BD     		pop	{r7, pc}
 5459              	.L366:
 5460 108a 00BF     		.align	2
 5461              	.L365:
 5462 108c 00000000 		.word	Surtidor_rxBuffer
 5463 1090 00000000 		.word	lado2
 5464              		.cfi_endproc
 5465              	.LFE72:
 5466              		.size	totales, .-totales
 5467              		.text
 5468              	.Letext0:
 5469              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5470              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5471              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 5472              		.file 5 ".\\VariablesG.h"
 5473              		.file 6 "Generated_Source\\PSoC5/Surtidor.h"
 5474              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 5475              		.section	.debug_info,"",%progbits
 5476              	.Ldebug_info0:
 5477 0000 260B0000 		.4byte	0xb26
 5478 0004 0400     		.2byte	0x4
 5479 0006 00000000 		.4byte	.Ldebug_abbrev0
 5480 000a 04       		.byte	0x4
 5481 000b 01       		.uleb128 0x1
 5482 000c E7020000 		.4byte	.LASF119
 5483 0010 01       		.byte	0x1
 5484 0011 31010000 		.4byte	.LASF120
 5485 0015 2A020000 		.4byte	.LASF121
 5486 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5487 001d 00000000 		.4byte	0
 5488 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 121


 5489 0025 02       		.uleb128 0x2
 5490 0026 01       		.byte	0x1
 5491 0027 06       		.byte	0x6
 5492 0028 D2040000 		.4byte	.LASF0
 5493 002c 02       		.uleb128 0x2
 5494 002d 01       		.byte	0x1
 5495 002e 08       		.byte	0x8
 5496 002f 82040000 		.4byte	.LASF1
 5497 0033 02       		.uleb128 0x2
 5498 0034 02       		.byte	0x2
 5499 0035 05       		.byte	0x5
 5500 0036 EC030000 		.4byte	.LASF2
 5501 003a 02       		.uleb128 0x2
 5502 003b 02       		.byte	0x2
 5503 003c 07       		.byte	0x7
 5504 003d F4040000 		.4byte	.LASF3
 5505 0041 03       		.uleb128 0x3
 5506 0042 6C000000 		.4byte	.LASF9
 5507 0046 02       		.byte	0x2
 5508 0047 3F       		.byte	0x3f
 5509 0048 4C000000 		.4byte	0x4c
 5510 004c 02       		.uleb128 0x2
 5511 004d 04       		.byte	0x4
 5512 004e 05       		.byte	0x5
 5513 004f F6030000 		.4byte	.LASF4
 5514 0053 02       		.uleb128 0x2
 5515 0054 04       		.byte	0x4
 5516 0055 07       		.byte	0x7
 5517 0056 5D040000 		.4byte	.LASF5
 5518 005a 02       		.uleb128 0x2
 5519 005b 08       		.byte	0x8
 5520 005c 05       		.byte	0x5
 5521 005d B3020000 		.4byte	.LASF6
 5522 0061 02       		.uleb128 0x2
 5523 0062 08       		.byte	0x8
 5524 0063 07       		.byte	0x7
 5525 0064 1A010000 		.4byte	.LASF7
 5526 0068 04       		.uleb128 0x4
 5527 0069 04       		.byte	0x4
 5528 006a 05       		.byte	0x5
 5529 006b 696E7400 		.ascii	"int\000"
 5530 006f 02       		.uleb128 0x2
 5531 0070 04       		.byte	0x4
 5532 0071 07       		.byte	0x7
 5533 0072 57000000 		.4byte	.LASF8
 5534 0076 03       		.uleb128 0x3
 5535 0077 6F040000 		.4byte	.LASF10
 5536 007b 03       		.byte	0x3
 5537 007c 2C       		.byte	0x2c
 5538 007d 41000000 		.4byte	0x41
 5539 0081 03       		.uleb128 0x3
 5540 0082 07050000 		.4byte	.LASF11
 5541 0086 04       		.byte	0x4
 5542 0087 B4       		.byte	0xb4
 5543 0088 2C000000 		.4byte	0x2c
 5544 008c 03       		.uleb128 0x3
 5545 008d 23020000 		.4byte	.LASF12
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 122


 5546 0091 04       		.byte	0x4
 5547 0092 B5       		.byte	0xb5
 5548 0093 3A000000 		.4byte	0x3a
 5549 0097 02       		.uleb128 0x2
 5550 0098 04       		.byte	0x4
 5551 0099 04       		.byte	0x4
 5552 009a DC000000 		.4byte	.LASF13
 5553 009e 02       		.uleb128 0x2
 5554 009f 08       		.byte	0x8
 5555 00a0 04       		.byte	0x4
 5556 00a1 0D050000 		.4byte	.LASF14
 5557 00a5 02       		.uleb128 0x2
 5558 00a6 01       		.byte	0x1
 5559 00a7 08       		.byte	0x8
 5560 00a8 08020000 		.4byte	.LASF15
 5561 00ac 05       		.uleb128 0x5
 5562 00ad 81000000 		.4byte	0x81
 5563 00b1 05       		.uleb128 0x5
 5564 00b2 8C000000 		.4byte	0x8c
 5565 00b6 02       		.uleb128 0x2
 5566 00b7 04       		.byte	0x4
 5567 00b8 07       		.byte	0x7
 5568 00b9 54040000 		.4byte	.LASF16
 5569 00bd 06       		.uleb128 0x6
 5570 00be 81000000 		.4byte	0x81
 5571 00c2 CD000000 		.4byte	0xcd
 5572 00c6 07       		.uleb128 0x7
 5573 00c7 B6000000 		.4byte	0xb6
 5574 00cb 03       		.byte	0x3
 5575 00cc 00       		.byte	0
 5576 00cd 08       		.uleb128 0x8
 5577 00ce 0C040000 		.4byte	.LASF21
 5578 00d2 5D       		.byte	0x5d
 5579 00d3 05       		.byte	0x5
 5580 00d4 60       		.byte	0x60
 5581 00d5 22010000 		.4byte	0x122
 5582 00d9 09       		.uleb128 0x9
 5583 00da 64697200 		.ascii	"dir\000"
 5584 00de 05       		.byte	0x5
 5585 00df 61       		.byte	0x61
 5586 00e0 AC000000 		.4byte	0xac
 5587 00e4 00       		.byte	0
 5588 00e5 0A       		.uleb128 0xa
 5589 00e6 AB030000 		.4byte	.LASF17
 5590 00ea 05       		.byte	0x5
 5591 00eb 62       		.byte	0x62
 5592 00ec AC000000 		.4byte	0xac
 5593 00f0 01       		.byte	0x1
 5594 00f1 0A       		.uleb128 0xa
 5595 00f2 76020000 		.4byte	.LASF18
 5596 00f6 05       		.byte	0x5
 5597 00f7 63       		.byte	0x63
 5598 00f8 38010000 		.4byte	0x138
 5599 00fc 02       		.byte	0x2
 5600 00fd 09       		.uleb128 0x9
 5601 00fe 70707500 		.ascii	"ppu\000"
 5602 0102 05       		.byte	0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 123


 5603 0103 64       		.byte	0x64
 5604 0104 53010000 		.4byte	0x153
 5605 0108 4A       		.byte	0x4a
 5606 0109 0A       		.uleb128 0xa
 5607 010a 33050000 		.4byte	.LASF19
 5608 010e 05       		.byte	0x5
 5609 010f 65       		.byte	0x65
 5610 0110 6E010000 		.4byte	0x16e
 5611 0114 59       		.byte	0x59
 5612 0115 0A       		.uleb128 0xa
 5613 0116 19020000 		.4byte	.LASF20
 5614 011a 05       		.byte	0x5
 5615 011b 66       		.byte	0x66
 5616 011c AC000000 		.4byte	0xac
 5617 0120 5C       		.byte	0x5c
 5618 0121 00       		.byte	0
 5619 0122 06       		.uleb128 0x6
 5620 0123 81000000 		.4byte	0x81
 5621 0127 38010000 		.4byte	0x138
 5622 012b 07       		.uleb128 0x7
 5623 012c B6000000 		.4byte	0xb6
 5624 0130 02       		.byte	0x2
 5625 0131 07       		.uleb128 0x7
 5626 0132 B6000000 		.4byte	0xb6
 5627 0136 17       		.byte	0x17
 5628 0137 00       		.byte	0
 5629 0138 05       		.uleb128 0x5
 5630 0139 22010000 		.4byte	0x122
 5631 013d 06       		.uleb128 0x6
 5632 013e 81000000 		.4byte	0x81
 5633 0142 53010000 		.4byte	0x153
 5634 0146 07       		.uleb128 0x7
 5635 0147 B6000000 		.4byte	0xb6
 5636 014b 02       		.byte	0x2
 5637 014c 07       		.uleb128 0x7
 5638 014d B6000000 		.4byte	0xb6
 5639 0151 04       		.byte	0x4
 5640 0152 00       		.byte	0
 5641 0153 05       		.uleb128 0x5
 5642 0154 3D010000 		.4byte	0x13d
 5643 0158 06       		.uleb128 0x6
 5644 0159 81000000 		.4byte	0x81
 5645 015d 6E010000 		.4byte	0x16e
 5646 0161 07       		.uleb128 0x7
 5647 0162 B6000000 		.4byte	0xb6
 5648 0166 02       		.byte	0x2
 5649 0167 07       		.uleb128 0x7
 5650 0168 B6000000 		.4byte	0xb6
 5651 016c 00       		.byte	0
 5652 016d 00       		.byte	0
 5653 016e 05       		.uleb128 0x5
 5654 016f 58010000 		.4byte	0x158
 5655 0173 08       		.uleb128 0x8
 5656 0174 91030000 		.4byte	.LASF22
 5657 0178 66       		.byte	0x66
 5658 0179 05       		.byte	0x5
 5659 017a 77       		.byte	0x77
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 124


 5660 017b 56020000 		.4byte	0x256
 5661 017f 0A       		.uleb128 0xa
 5662 0180 A8000000 		.4byte	.LASF23
 5663 0184 05       		.byte	0x5
 5664 0185 78       		.byte	0x78
 5665 0186 81000000 		.4byte	0x81
 5666 018a 00       		.byte	0
 5667 018b 0A       		.uleb128 0xa
 5668 018c 33050000 		.4byte	.LASF19
 5669 0190 05       		.byte	0x5
 5670 0191 79       		.byte	0x79
 5671 0192 81000000 		.4byte	0x81
 5672 0196 01       		.byte	0x1
 5673 0197 09       		.uleb128 0x9
 5674 0198 70707500 		.ascii	"ppu\000"
 5675 019c 05       		.byte	0x5
 5676 019d 7A       		.byte	0x7a
 5677 019e 56020000 		.4byte	0x256
 5678 01a2 02       		.byte	0x2
 5679 01a3 0A       		.uleb128 0xa
 5680 01a4 98030000 		.4byte	.LASF24
 5681 01a8 05       		.byte	0x5
 5682 01a9 7B       		.byte	0x7b
 5683 01aa 66020000 		.4byte	0x266
 5684 01ae 07       		.byte	0x7
 5685 01af 0A       		.uleb128 0xa
 5686 01b0 8C010000 		.4byte	.LASF25
 5687 01b4 05       		.byte	0x5
 5688 01b5 7C       		.byte	0x7c
 5689 01b6 66020000 		.4byte	0x266
 5690 01ba 10       		.byte	0x10
 5691 01bb 0A       		.uleb128 0xa
 5692 01bc C1020000 		.4byte	.LASF26
 5693 01c0 05       		.byte	0x5
 5694 01c1 7D       		.byte	0x7d
 5695 01c2 81000000 		.4byte	0x81
 5696 01c6 19       		.byte	0x19
 5697 01c7 0A       		.uleb128 0xa
 5698 01c8 2A050000 		.4byte	.LASF27
 5699 01cc 05       		.byte	0x5
 5700 01cd 7E       		.byte	0x7e
 5701 01ce 81000000 		.4byte	0x81
 5702 01d2 1A       		.byte	0x1a
 5703 01d3 0A       		.uleb128 0xa
 5704 01d4 D5000000 		.4byte	.LASF28
 5705 01d8 05       		.byte	0x5
 5706 01d9 7F       		.byte	0x7f
 5707 01da 76020000 		.4byte	0x276
 5708 01de 1B       		.byte	0x1b
 5709 01df 09       		.uleb128 0x9
 5710 01e0 696400   		.ascii	"id\000"
 5711 01e3 05       		.byte	0x5
 5712 01e4 80       		.byte	0x80
 5713 01e5 86020000 		.4byte	0x286
 5714 01e9 23       		.byte	0x23
 5715 01ea 09       		.uleb128 0x9
 5716 01eb 6B6D00   		.ascii	"km\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 125


 5717 01ee 05       		.byte	0x5
 5718 01ef 81       		.byte	0x81
 5719 01f0 96020000 		.4byte	0x296
 5720 01f4 33       		.byte	0x33
 5721 01f5 0A       		.uleb128 0xa
 5722 01f6 7E010000 		.4byte	.LASF29
 5723 01fa 05       		.byte	0x5
 5724 01fb 82       		.byte	0x82
 5725 01fc 66020000 		.4byte	0x266
 5726 0200 3E       		.byte	0x3e
 5727 0201 0A       		.uleb128 0xa
 5728 0202 11010000 		.4byte	.LASF30
 5729 0206 05       		.byte	0x5
 5730 0207 83       		.byte	0x83
 5731 0208 81000000 		.4byte	0x81
 5732 020c 47       		.byte	0x47
 5733 020d 0A       		.uleb128 0xa
 5734 020e 65020000 		.4byte	.LASF31
 5735 0212 05       		.byte	0x5
 5736 0213 84       		.byte	0x84
 5737 0214 81000000 		.4byte	0x81
 5738 0218 48       		.byte	0x48
 5739 0219 0A       		.uleb128 0xa
 5740 021a D9020000 		.4byte	.LASF32
 5741 021e 05       		.byte	0x5
 5742 021f 85       		.byte	0x85
 5743 0220 96020000 		.4byte	0x296
 5744 0224 49       		.byte	0x49
 5745 0225 0A       		.uleb128 0xa
 5746 0226 00000000 		.4byte	.LASF33
 5747 022a 05       		.byte	0x5
 5748 022b 86       		.byte	0x86
 5749 022c 96020000 		.4byte	0x296
 5750 0230 54       		.byte	0x54
 5751 0231 0A       		.uleb128 0xa
 5752 0232 70020000 		.4byte	.LASF34
 5753 0236 05       		.byte	0x5
 5754 0237 87       		.byte	0x87
 5755 0238 81000000 		.4byte	0x81
 5756 023c 5F       		.byte	0x5f
 5757 023d 0A       		.uleb128 0xa
 5758 023e 77040000 		.4byte	.LASF35
 5759 0242 05       		.byte	0x5
 5760 0243 88       		.byte	0x88
 5761 0244 81000000 		.4byte	0x81
 5762 0248 60       		.byte	0x60
 5763 0249 0A       		.uleb128 0xa
 5764 024a B2030000 		.4byte	.LASF36
 5765 024e 05       		.byte	0x5
 5766 024f 89       		.byte	0x89
 5767 0250 56020000 		.4byte	0x256
 5768 0254 61       		.byte	0x61
 5769 0255 00       		.byte	0
 5770 0256 06       		.uleb128 0x6
 5771 0257 81000000 		.4byte	0x81
 5772 025b 66020000 		.4byte	0x266
 5773 025f 07       		.uleb128 0x7
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 126


 5774 0260 B6000000 		.4byte	0xb6
 5775 0264 04       		.byte	0x4
 5776 0265 00       		.byte	0
 5777 0266 06       		.uleb128 0x6
 5778 0267 81000000 		.4byte	0x81
 5779 026b 76020000 		.4byte	0x276
 5780 026f 07       		.uleb128 0x7
 5781 0270 B6000000 		.4byte	0xb6
 5782 0274 08       		.byte	0x8
 5783 0275 00       		.byte	0
 5784 0276 06       		.uleb128 0x6
 5785 0277 81000000 		.4byte	0x81
 5786 027b 86020000 		.4byte	0x286
 5787 027f 07       		.uleb128 0x7
 5788 0280 B6000000 		.4byte	0xb6
 5789 0284 07       		.byte	0x7
 5790 0285 00       		.byte	0
 5791 0286 06       		.uleb128 0x6
 5792 0287 81000000 		.4byte	0x81
 5793 028b 96020000 		.4byte	0x296
 5794 028f 07       		.uleb128 0x7
 5795 0290 B6000000 		.4byte	0xb6
 5796 0294 0F       		.byte	0xf
 5797 0295 00       		.byte	0
 5798 0296 06       		.uleb128 0x6
 5799 0297 81000000 		.4byte	0x81
 5800 029b A6020000 		.4byte	0x2a6
 5801 029f 07       		.uleb128 0x7
 5802 02a0 B6000000 		.4byte	0xb6
 5803 02a4 0A       		.byte	0xa
 5804 02a5 00       		.byte	0
 5805 02a6 0B       		.uleb128 0xb
 5806 02a7 39050000 		.4byte	.LASF122
 5807 02ab 01       		.byte	0x1
 5808 02ac 3F       		.byte	0x3f
 5809 02ad 00000000 		.4byte	.LFB63
 5810 02b1 14000000 		.4byte	.LFE63-.LFB63
 5811 02b5 01       		.uleb128 0x1
 5812 02b6 9C       		.byte	0x9c
 5813 02b7 0C       		.uleb128 0xc
 5814 02b8 90040000 		.4byte	.LASF37
 5815 02bc 01       		.byte	0x1
 5816 02bd 56       		.byte	0x56
 5817 02be 81000000 		.4byte	0x81
 5818 02c2 00000000 		.4byte	.LFB64
 5819 02c6 98000000 		.4byte	.LFE64-.LFB64
 5820 02ca 01       		.uleb128 0x1
 5821 02cb 9C       		.byte	0x9c
 5822 02cc ED020000 		.4byte	0x2ed
 5823 02d0 0D       		.uleb128 0xd
 5824 02d1 64697200 		.ascii	"dir\000"
 5825 02d5 01       		.byte	0x1
 5826 02d6 56       		.byte	0x56
 5827 02d7 81000000 		.4byte	0x81
 5828 02db 02       		.uleb128 0x2
 5829 02dc 91       		.byte	0x91
 5830 02dd 6F       		.sleb128 -17
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 127


 5831 02de 0E       		.uleb128 0xe
 5832 02df AB030000 		.4byte	.LASF17
 5833 02e3 01       		.byte	0x1
 5834 02e4 57       		.byte	0x57
 5835 02e5 81000000 		.4byte	0x81
 5836 02e9 02       		.uleb128 0x2
 5837 02ea 91       		.byte	0x91
 5838 02eb 77       		.sleb128 -9
 5839 02ec 00       		.byte	0
 5840 02ed 0C       		.uleb128 0xc
 5841 02ee 84010000 		.4byte	.LASF38
 5842 02f2 01       		.byte	0x1
 5843 02f3 86       		.byte	0x86
 5844 02f4 81000000 		.4byte	0x81
 5845 02f8 00000000 		.4byte	.LFB65
 5846 02fc A0000000 		.4byte	.LFE65-.LFB65
 5847 0300 01       		.uleb128 0x1
 5848 0301 9C       		.byte	0x9c
 5849 0302 13030000 		.4byte	0x313
 5850 0306 0F       		.uleb128 0xf
 5851 0307 7800     		.ascii	"x\000"
 5852 0309 01       		.byte	0x1
 5853 030a 87       		.byte	0x87
 5854 030b 81000000 		.4byte	0x81
 5855 030f 02       		.uleb128 0x2
 5856 0310 91       		.byte	0x91
 5857 0311 77       		.sleb128 -9
 5858 0312 00       		.byte	0
 5859 0313 10       		.uleb128 0x10
 5860 0314 B1040000 		.4byte	.LASF42
 5861 0318 01       		.byte	0x1
 5862 0319 B2       		.byte	0xb2
 5863 031a 00000000 		.4byte	.LFB66
 5864 031e 36000000 		.4byte	.LFE66-.LFB66
 5865 0322 01       		.uleb128 0x1
 5866 0323 9C       		.byte	0x9c
 5867 0324 45030000 		.4byte	0x345
 5868 0328 0D       		.uleb128 0xd
 5869 0329 76616C00 		.ascii	"val\000"
 5870 032d 01       		.byte	0x1
 5871 032e B2       		.byte	0xb2
 5872 032f 81000000 		.4byte	0x81
 5873 0333 02       		.uleb128 0x2
 5874 0334 91       		.byte	0x91
 5875 0335 6F       		.sleb128 -17
 5876 0336 0E       		.uleb128 0xe
 5877 0337 AB030000 		.4byte	.LASF17
 5878 033b 01       		.byte	0x1
 5879 033c B3       		.byte	0xb3
 5880 033d 81000000 		.4byte	0x81
 5881 0341 02       		.uleb128 0x2
 5882 0342 91       		.byte	0x91
 5883 0343 77       		.sleb128 -9
 5884 0344 00       		.byte	0
 5885 0345 0C       		.uleb128 0xc
 5886 0346 40040000 		.4byte	.LASF39
 5887 034a 01       		.byte	0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 128


 5888 034b CF       		.byte	0xcf
 5889 034c 81000000 		.4byte	0x81
 5890 0350 00000000 		.4byte	.LFB67
 5891 0354 7C010000 		.4byte	.LFE67-.LFB67
 5892 0358 01       		.uleb128 0x1
 5893 0359 9C       		.byte	0x9c
 5894 035a 95030000 		.4byte	0x395
 5895 035e 0D       		.uleb128 0xd
 5896 035f 76616C00 		.ascii	"val\000"
 5897 0363 01       		.byte	0x1
 5898 0364 CF       		.byte	0xcf
 5899 0365 81000000 		.4byte	0x81
 5900 0369 02       		.uleb128 0x2
 5901 036a 91       		.byte	0x91
 5902 036b 4F       		.sleb128 -49
 5903 036c 0E       		.uleb128 0xe
 5904 036d 14050000 		.4byte	.LASF40
 5905 0371 01       		.byte	0x1
 5906 0372 D0       		.byte	0xd0
 5907 0373 95030000 		.4byte	0x395
 5908 0377 02       		.uleb128 0x2
 5909 0378 91       		.byte	0x91
 5910 0379 5C       		.sleb128 -36
 5911 037a 0F       		.uleb128 0xf
 5912 037b 7800     		.ascii	"x\000"
 5913 037d 01       		.byte	0x1
 5914 037e D0       		.byte	0xd0
 5915 037f 81000000 		.4byte	0x81
 5916 0383 02       		.uleb128 0x2
 5917 0384 91       		.byte	0x91
 5918 0385 6F       		.sleb128 -17
 5919 0386 0E       		.uleb128 0xe
 5920 0387 EF010000 		.4byte	.LASF41
 5921 038b 01       		.byte	0x1
 5922 038c D0       		.byte	0xd0
 5923 038d 66020000 		.4byte	0x266
 5924 0391 02       		.uleb128 0x2
 5925 0392 91       		.byte	0x91
 5926 0393 50       		.sleb128 -48
 5927 0394 00       		.byte	0
 5928 0395 06       		.uleb128 0x6
 5929 0396 81000000 		.4byte	0x81
 5930 039a A5030000 		.4byte	0x3a5
 5931 039e 07       		.uleb128 0x7
 5932 039f B6000000 		.4byte	0xb6
 5933 03a3 12       		.byte	0x12
 5934 03a4 00       		.byte	0
 5935 03a5 11       		.uleb128 0x11
 5936 03a6 E7010000 		.4byte	.LASF43
 5937 03aa 01       		.byte	0x1
 5938 03ab 2001     		.2byte	0x120
 5939 03ad 00000000 		.4byte	.LFB68
 5940 03b1 24000000 		.4byte	.LFE68-.LFB68
 5941 03b5 01       		.uleb128 0x1
 5942 03b6 9C       		.byte	0x9c
 5943 03b7 CB030000 		.4byte	0x3cb
 5944 03bb 12       		.uleb128 0x12
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 129


 5945 03bc 76616C00 		.ascii	"val\000"
 5946 03c0 01       		.byte	0x1
 5947 03c1 2001     		.2byte	0x120
 5948 03c3 81000000 		.4byte	0x81
 5949 03c7 02       		.uleb128 0x2
 5950 03c8 91       		.byte	0x91
 5951 03c9 77       		.sleb128 -9
 5952 03ca 00       		.byte	0
 5953 03cb 13       		.uleb128 0x13
 5954 03cc 94010000 		.4byte	.LASF44
 5955 03d0 01       		.byte	0x1
 5956 03d1 3501     		.2byte	0x135
 5957 03d3 81000000 		.4byte	0x81
 5958 03d7 00000000 		.4byte	.LFB69
 5959 03db 54030000 		.4byte	.LFE69-.LFB69
 5960 03df 01       		.uleb128 0x1
 5961 03e0 9C       		.byte	0x9c
 5962 03e1 02040000 		.4byte	0x402
 5963 03e5 12       		.uleb128 0x12
 5964 03e6 64697200 		.ascii	"dir\000"
 5965 03ea 01       		.byte	0x1
 5966 03eb 3501     		.2byte	0x135
 5967 03ed 81000000 		.4byte	0x81
 5968 03f1 02       		.uleb128 0x2
 5969 03f2 91       		.byte	0x91
 5970 03f3 6F       		.sleb128 -17
 5971 03f4 14       		.uleb128 0x14
 5972 03f5 7800     		.ascii	"x\000"
 5973 03f7 01       		.byte	0x1
 5974 03f8 3601     		.2byte	0x136
 5975 03fa 81000000 		.4byte	0x81
 5976 03fe 02       		.uleb128 0x2
 5977 03ff 91       		.byte	0x91
 5978 0400 77       		.sleb128 -9
 5979 0401 00       		.byte	0
 5980 0402 13       		.uleb128 0x13
 5981 0403 4A040000 		.4byte	.LASF45
 5982 0407 01       		.byte	0x1
 5983 0408 8D01     		.2byte	0x18d
 5984 040a 81000000 		.4byte	0x81
 5985 040e 00000000 		.4byte	.LFB70
 5986 0412 80080000 		.4byte	.LFE70-.LFB70
 5987 0416 01       		.uleb128 0x1
 5988 0417 9C       		.byte	0x9c
 5989 0418 A2040000 		.4byte	0x4a2
 5990 041c 12       		.uleb128 0x12
 5991 041d 64697200 		.ascii	"dir\000"
 5992 0421 01       		.byte	0x1
 5993 0422 8D01     		.2byte	0x18d
 5994 0424 81000000 		.4byte	0x81
 5995 0428 02       		.uleb128 0x2
 5996 0429 91       		.byte	0x91
 5997 042a 5F       		.sleb128 -33
 5998 042b 15       		.uleb128 0x15
 5999 042c 33050000 		.4byte	.LASF19
 6000 0430 01       		.byte	0x1
 6001 0431 8D01     		.2byte	0x18d
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 130


 6002 0433 81000000 		.4byte	0x81
 6003 0437 02       		.uleb128 0x2
 6004 0438 91       		.byte	0x91
 6005 0439 5E       		.sleb128 -34
 6006 043a 15       		.uleb128 0x15
 6007 043b DE040000 		.4byte	.LASF46
 6008 043f 01       		.byte	0x1
 6009 0440 8D01     		.2byte	0x18d
 6010 0442 A2040000 		.4byte	0x4a2
 6011 0446 02       		.uleb128 0x2
 6012 0447 91       		.byte	0x91
 6013 0448 58       		.sleb128 -40
 6014 0449 15       		.uleb128 0x15
 6015 044a D5000000 		.4byte	.LASF28
 6016 044e 01       		.byte	0x1
 6017 044f 8D01     		.2byte	0x18d
 6018 0451 81000000 		.4byte	0x81
 6019 0455 02       		.uleb128 0x2
 6020 0456 91       		.byte	0x91
 6021 0457 5D       		.sleb128 -35
 6022 0458 16       		.uleb128 0x16
 6023 0459 50000000 		.4byte	.LASF47
 6024 045d 01       		.byte	0x1
 6025 045e 8E01     		.2byte	0x18e
 6026 0460 A8040000 		.4byte	0x4a8
 6027 0464 02       		.uleb128 0x2
 6028 0465 91       		.byte	0x91
 6029 0466 60       		.sleb128 -32
 6030 0467 16       		.uleb128 0x16
 6031 0468 8C030000 		.4byte	.LASF48
 6032 046c 01       		.byte	0x1
 6033 046d 8E01     		.2byte	0x18e
 6034 046f 81000000 		.4byte	0x81
 6035 0473 02       		.uleb128 0x2
 6036 0474 91       		.byte	0x91
 6037 0475 77       		.sleb128 -9
 6038 0476 16       		.uleb128 0x16
 6039 0477 23040000 		.4byte	.LASF49
 6040 047b 01       		.byte	0x1
 6041 047c 8E01     		.2byte	0x18e
 6042 047e 81000000 		.4byte	0x81
 6043 0482 02       		.uleb128 0x2
 6044 0483 91       		.byte	0x91
 6045 0484 76       		.sleb128 -10
 6046 0485 14       		.uleb128 0x14
 6047 0486 6900     		.ascii	"i\000"
 6048 0488 01       		.byte	0x1
 6049 0489 8E01     		.2byte	0x18e
 6050 048b 81000000 		.4byte	0x81
 6051 048f 02       		.uleb128 0x2
 6052 0490 91       		.byte	0x91
 6053 0491 75       		.sleb128 -11
 6054 0492 16       		.uleb128 0x16
 6055 0493 8B000000 		.4byte	.LASF50
 6056 0497 01       		.byte	0x1
 6057 0498 8E01     		.2byte	0x18e
 6058 049a 81000000 		.4byte	0x81
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 131


 6059 049e 02       		.uleb128 0x2
 6060 049f 91       		.byte	0x91
 6061 04a0 74       		.sleb128 -12
 6062 04a1 00       		.byte	0
 6063 04a2 17       		.uleb128 0x17
 6064 04a3 04       		.byte	0x4
 6065 04a4 81000000 		.4byte	0x81
 6066 04a8 06       		.uleb128 0x6
 6067 04a9 81000000 		.4byte	0x81
 6068 04ad B8040000 		.4byte	0x4b8
 6069 04b1 07       		.uleb128 0x7
 6070 04b2 B6000000 		.4byte	0xb6
 6071 04b6 11       		.byte	0x11
 6072 04b7 00       		.byte	0
 6073 04b8 13       		.uleb128 0x13
 6074 04b9 CA020000 		.4byte	.LASF51
 6075 04bd 01       		.byte	0x1
 6076 04be 9102     		.2byte	0x291
 6077 04c0 81000000 		.4byte	0x81
 6078 04c4 00000000 		.4byte	.LFB71
 6079 04c8 7C020000 		.4byte	.LFE71-.LFB71
 6080 04cc 01       		.uleb128 0x1
 6081 04cd 9C       		.byte	0x9c
 6082 04ce 2B050000 		.4byte	0x52b
 6083 04d2 12       		.uleb128 0x12
 6084 04d3 64697200 		.ascii	"dir\000"
 6085 04d7 01       		.byte	0x1
 6086 04d8 9102     		.2byte	0x291
 6087 04da 81000000 		.4byte	0x81
 6088 04de 02       		.uleb128 0x2
 6089 04df 91       		.byte	0x91
 6090 04e0 5F       		.sleb128 -33
 6091 04e1 15       		.uleb128 0x15
 6092 04e2 76000000 		.4byte	.LASF52
 6093 04e6 01       		.byte	0x1
 6094 04e7 9102     		.2byte	0x291
 6095 04e9 A2040000 		.4byte	0x4a2
 6096 04ed 02       		.uleb128 0x2
 6097 04ee 91       		.byte	0x91
 6098 04ef 58       		.sleb128 -40
 6099 04f0 15       		.uleb128 0x15
 6100 04f1 83000000 		.4byte	.LASF53
 6101 04f5 01       		.byte	0x1
 6102 04f6 9102     		.2byte	0x291
 6103 04f8 81000000 		.4byte	0x81
 6104 04fc 02       		.uleb128 0x2
 6105 04fd 91       		.byte	0x91
 6106 04fe 5E       		.sleb128 -34
 6107 04ff 16       		.uleb128 0x16
 6108 0500 50000000 		.4byte	.LASF47
 6109 0504 01       		.byte	0x1
 6110 0505 9202     		.2byte	0x292
 6111 0507 2B050000 		.4byte	0x52b
 6112 050b 02       		.uleb128 0x2
 6113 050c 91       		.byte	0x91
 6114 050d 64       		.sleb128 -28
 6115 050e 16       		.uleb128 0x16
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 132


 6116 050f 8C030000 		.4byte	.LASF48
 6117 0513 01       		.byte	0x1
 6118 0514 9202     		.2byte	0x292
 6119 0516 81000000 		.4byte	0x81
 6120 051a 02       		.uleb128 0x2
 6121 051b 91       		.byte	0x91
 6122 051c 77       		.sleb128 -9
 6123 051d 14       		.uleb128 0x14
 6124 051e 7800     		.ascii	"x\000"
 6125 0520 01       		.byte	0x1
 6126 0521 9202     		.2byte	0x292
 6127 0523 81000000 		.4byte	0x81
 6128 0527 02       		.uleb128 0x2
 6129 0528 91       		.byte	0x91
 6130 0529 76       		.sleb128 -10
 6131 052a 00       		.byte	0
 6132 052b 06       		.uleb128 0x6
 6133 052c 81000000 		.4byte	0x81
 6134 0530 3B050000 		.4byte	0x53b
 6135 0534 07       		.uleb128 0x7
 6136 0535 B6000000 		.4byte	0xb6
 6137 0539 0E       		.byte	0xe
 6138 053a 00       		.byte	0
 6139 053b 13       		.uleb128 0x13
 6140 053c 76020000 		.4byte	.LASF18
 6141 0540 01       		.byte	0x1
 6142 0541 EA02     		.2byte	0x2ea
 6143 0543 81000000 		.4byte	0x81
 6144 0547 00000000 		.4byte	.LFB72
 6145 054b 94100000 		.4byte	.LFE72-.LFB72
 6146 054f 01       		.uleb128 0x1
 6147 0550 9C       		.byte	0x9c
 6148 0551 8E050000 		.4byte	0x58e
 6149 0555 12       		.uleb128 0x12
 6150 0556 64697200 		.ascii	"dir\000"
 6151 055a 01       		.byte	0x1
 6152 055b EA02     		.2byte	0x2ea
 6153 055d 81000000 		.4byte	0x81
 6154 0561 02       		.uleb128 0x2
 6155 0562 91       		.byte	0x91
 6156 0563 6F       		.sleb128 -17
 6157 0564 15       		.uleb128 0x15
 6158 0565 D9030000 		.4byte	.LASF54
 6159 0569 01       		.byte	0x1
 6160 056a EA02     		.2byte	0x2ea
 6161 056c 81000000 		.4byte	0x81
 6162 0570 02       		.uleb128 0x2
 6163 0571 91       		.byte	0x91
 6164 0572 6E       		.sleb128 -18
 6165 0573 14       		.uleb128 0x14
 6166 0574 7800     		.ascii	"x\000"
 6167 0576 01       		.byte	0x1
 6168 0577 EB02     		.2byte	0x2eb
 6169 0579 81000000 		.4byte	0x81
 6170 057d 02       		.uleb128 0x2
 6171 057e 91       		.byte	0x91
 6172 057f 77       		.sleb128 -9
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 133


 6173 0580 14       		.uleb128 0x14
 6174 0581 7900     		.ascii	"y\000"
 6175 0583 01       		.byte	0x1
 6176 0584 EB02     		.2byte	0x2eb
 6177 0586 81000000 		.4byte	0x81
 6178 058a 02       		.uleb128 0x2
 6179 058b 91       		.byte	0x91
 6180 058c 76       		.sleb128 -10
 6181 058d 00       		.byte	0
 6182 058e 06       		.uleb128 0x6
 6183 058f 81000000 		.4byte	0x81
 6184 0593 9E050000 		.4byte	0x59e
 6185 0597 07       		.uleb128 0x7
 6186 0598 B6000000 		.4byte	0xb6
 6187 059c FF       		.byte	0xff
 6188 059d 00       		.byte	0
 6189 059e 18       		.uleb128 0x18
 6190 059f 6C010000 		.4byte	.LASF55
 6191 05a3 06       		.byte	0x6
 6192 05a4 3E01     		.2byte	0x13e
 6193 05a6 AA050000 		.4byte	0x5aa
 6194 05aa 05       		.uleb128 0x5
 6195 05ab 8E050000 		.4byte	0x58e
 6196 05af 18       		.uleb128 0x18
 6197 05b0 FF030000 		.4byte	.LASF56
 6198 05b4 07       		.byte	0x7
 6199 05b5 2A06     		.2byte	0x62a
 6200 05b7 BB050000 		.4byte	0x5bb
 6201 05bb 05       		.uleb128 0x5
 6202 05bc 76000000 		.4byte	0x76
 6203 05c0 19       		.uleb128 0x19
 6204 05c1 8B020000 		.4byte	.LASF57
 6205 05c5 05       		.byte	0x5
 6206 05c6 4A       		.byte	0x4a
 6207 05c7 AC000000 		.4byte	0xac
 6208 05cb 05       		.uleb128 0x5
 6209 05cc 03       		.byte	0x3
 6210 05cd 00000000 		.4byte	count_teclas1
 6211 05d1 19       		.uleb128 0x19
 6212 05d2 15040000 		.4byte	.LASF58
 6213 05d6 05       		.byte	0x5
 6214 05d7 4A       		.byte	0x4a
 6215 05d8 AC000000 		.4byte	0xac
 6216 05dc 05       		.uleb128 0x5
 6217 05dd 03       		.byte	0x3
 6218 05de 00000000 		.4byte	comas1
 6219 05e2 19       		.uleb128 0x19
 6220 05e3 1C040000 		.4byte	.LASF59
 6221 05e7 05       		.byte	0x5
 6222 05e8 4A       		.byte	0x4a
 6223 05e9 AC000000 		.4byte	0xac
 6224 05ed 05       		.uleb128 0x5
 6225 05ee 03       		.byte	0x3
 6226 05ef 00000000 		.4byte	comas2
 6227 05f3 19       		.uleb128 0x19
 6228 05f4 3E000000 		.4byte	.LASF60
 6229 05f8 05       		.byte	0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 134


 6230 05f9 4A       		.byte	0x4a
 6231 05fa AC000000 		.4byte	0xac
 6232 05fe 05       		.uleb128 0x5
 6233 05ff 03       		.byte	0x3
 6234 0600 00000000 		.4byte	id_coma1
 6235 0604 19       		.uleb128 0x19
 6236 0605 A3010000 		.4byte	.LASF61
 6237 0609 05       		.byte	0x5
 6238 060a 4A       		.byte	0x4a
 6239 060b AC000000 		.4byte	0xac
 6240 060f 05       		.uleb128 0x5
 6241 0610 03       		.byte	0x3
 6242 0611 00000000 		.4byte	id_teclado1
 6243 0615 19       		.uleb128 0x19
 6244 0616 99020000 		.4byte	.LASF62
 6245 061a 05       		.byte	0x5
 6246 061b 4A       		.byte	0x4a
 6247 061c AC000000 		.4byte	0xac
 6248 0620 05       		.uleb128 0x5
 6249 0621 03       		.byte	0x3
 6250 0622 00000000 		.4byte	count_teclas2
 6251 0626 19       		.uleb128 0x19
 6252 0627 47000000 		.4byte	.LASF63
 6253 062b 05       		.byte	0x5
 6254 062c 4A       		.byte	0x4a
 6255 062d AC000000 		.4byte	0xac
 6256 0631 05       		.uleb128 0x5
 6257 0632 03       		.byte	0x3
 6258 0633 00000000 		.4byte	id_coma2
 6259 0637 19       		.uleb128 0x19
 6260 0638 AF010000 		.4byte	.LASF64
 6261 063c 05       		.byte	0x5
 6262 063d 4A       		.byte	0x4a
 6263 063e AC000000 		.4byte	0xac
 6264 0642 05       		.uleb128 0x5
 6265 0643 03       		.byte	0x3
 6266 0644 00000000 		.4byte	id_teclado2
 6267 0648 19       		.uleb128 0x19
 6268 0649 A7020000 		.4byte	.LASF65
 6269 064d 05       		.byte	0x5
 6270 064e 4B       		.byte	0x4b
 6271 064f B1000000 		.4byte	0xb1
 6272 0653 05       		.uleb128 0x5
 6273 0654 03       		.byte	0x3
 6274 0655 00000000 		.4byte	posx1
 6275 0659 19       		.uleb128 0x19
 6276 065a 80030000 		.4byte	.LASF66
 6277 065e 05       		.byte	0x5
 6278 065f 4B       		.byte	0x4b
 6279 0660 B1000000 		.4byte	0xb1
 6280 0664 05       		.uleb128 0x5
 6281 0665 03       		.byte	0x3
 6282 0666 00000000 		.4byte	posy1
 6283 066a 19       		.uleb128 0x19
 6284 066b 45050000 		.4byte	.LASF67
 6285 066f 05       		.byte	0x5
 6286 0670 4B       		.byte	0x4b
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 135


 6287 0671 B1000000 		.4byte	0xb1
 6288 0675 05       		.uleb128 0x5
 6289 0676 03       		.byte	0x3
 6290 0677 00000000 		.4byte	sizeletra1
 6291 067b 19       		.uleb128 0x19
 6292 067c AD020000 		.4byte	.LASF68
 6293 0680 05       		.byte	0x5
 6294 0681 4B       		.byte	0x4b
 6295 0682 B1000000 		.4byte	0xb1
 6296 0686 05       		.uleb128 0x5
 6297 0687 03       		.byte	0x3
 6298 0688 00000000 		.4byte	posx2
 6299 068c 19       		.uleb128 0x19
 6300 068d 86030000 		.4byte	.LASF69
 6301 0691 05       		.byte	0x5
 6302 0692 4B       		.byte	0x4b
 6303 0693 B1000000 		.4byte	0xb1
 6304 0697 05       		.uleb128 0x5
 6305 0698 03       		.byte	0x3
 6306 0699 00000000 		.4byte	posy2
 6307 069d 19       		.uleb128 0x19
 6308 069e 50050000 		.4byte	.LASF70
 6309 06a2 05       		.byte	0x5
 6310 06a3 4B       		.byte	0x4b
 6311 06a4 B1000000 		.4byte	0xb1
 6312 06a8 05       		.uleb128 0x5
 6313 06a9 03       		.byte	0x3
 6314 06aa 00000000 		.4byte	sizeletra2
 6315 06ae 19       		.uleb128 0x19
 6316 06af 98000000 		.4byte	.LASF71
 6317 06b3 05       		.byte	0x5
 6318 06b4 4C       		.byte	0x4c
 6319 06b5 AC000000 		.4byte	0xac
 6320 06b9 05       		.uleb128 0x5
 6321 06ba 03       		.byte	0x3
 6322 06bb 00000000 		.4byte	teclas1
 6323 06bf 19       		.uleb128 0x19
 6324 06c0 A0000000 		.4byte	.LASF72
 6325 06c4 05       		.byte	0x5
 6326 06c5 4C       		.byte	0x4c
 6327 06c6 AC000000 		.4byte	0xac
 6328 06ca 05       		.uleb128 0x5
 6329 06cb 03       		.byte	0x3
 6330 06cc 00000000 		.4byte	teclas2
 6331 06d0 19       		.uleb128 0x19
 6332 06d1 09000000 		.4byte	.LASF73
 6333 06d5 05       		.byte	0x5
 6334 06d6 4D       		.byte	0x4d
 6335 06d7 AC000000 		.4byte	0xac
 6336 06db 05       		.uleb128 0x5
 6337 06dc 03       		.byte	0x3
 6338 06dd 00000000 		.4byte	flujo_LCD1
 6339 06e1 19       		.uleb128 0x19
 6340 06e2 14000000 		.4byte	.LASF74
 6341 06e6 05       		.byte	0x5
 6342 06e7 4D       		.byte	0x4d
 6343 06e8 AC000000 		.4byte	0xac
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 136


 6344 06ec 05       		.uleb128 0x5
 6345 06ed 03       		.byte	0x3
 6346 06ee 00000000 		.4byte	flujo_LCD2
 6347 06f2 06       		.uleb128 0x6
 6348 06f3 81000000 		.4byte	0x81
 6349 06f7 02070000 		.4byte	0x702
 6350 06fb 07       		.uleb128 0x7
 6351 06fc B6000000 		.4byte	0xb6
 6352 0700 1D       		.byte	0x1d
 6353 0701 00       		.byte	0
 6354 0702 19       		.uleb128 0x19
 6355 0703 9F030000 		.4byte	.LASF75
 6356 0707 05       		.byte	0x5
 6357 0708 4E       		.byte	0x4e
 6358 0709 13070000 		.4byte	0x713
 6359 070d 05       		.uleb128 0x5
 6360 070e 03       		.byte	0x3
 6361 070f 00000000 		.4byte	Buffer_LCD1
 6362 0713 05       		.uleb128 0x5
 6363 0714 F2060000 		.4byte	0x6f2
 6364 0718 19       		.uleb128 0x19
 6365 0719 FC010000 		.4byte	.LASF76
 6366 071d 05       		.byte	0x5
 6367 071e 4F       		.byte	0x4f
 6368 071f 29070000 		.4byte	0x729
 6369 0723 05       		.uleb128 0x5
 6370 0724 03       		.byte	0x3
 6371 0725 00000000 		.4byte	Buffer_LCD2
 6372 0729 05       		.uleb128 0x5
 6373 072a F2060000 		.4byte	0x6f2
 6374 072e 19       		.uleb128 0x19
 6375 072f E4040000 		.4byte	.LASF77
 6376 0733 05       		.byte	0x5
 6377 0734 50       		.byte	0x50
 6378 0735 AC000000 		.4byte	0xac
 6379 0739 05       		.uleb128 0x5
 6380 073a 03       		.byte	0x3
 6381 073b 00000000 		.4byte	count_protector
 6382 073f 19       		.uleb128 0x19
 6383 0740 1F000000 		.4byte	.LASF78
 6384 0744 05       		.byte	0x5
 6385 0745 50       		.byte	0x50
 6386 0746 AC000000 		.4byte	0xac
 6387 074a 05       		.uleb128 0x5
 6388 074b 03       		.byte	0x3
 6389 074c 00000000 		.4byte	count_protector2
 6390 0750 19       		.uleb128 0x19
 6391 0751 9B040000 		.4byte	.LASF79
 6392 0755 05       		.byte	0x5
 6393 0756 51       		.byte	0x51
 6394 0757 AC000000 		.4byte	0xac
 6395 075b 05       		.uleb128 0x5
 6396 075c 03       		.byte	0x3
 6397 075d 00000000 		.4byte	count_esperaBBB
 6398 0761 19       		.uleb128 0x19
 6399 0762 C4010000 		.4byte	.LASF80
 6400 0766 05       		.byte	0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 137


 6401 0767 51       		.byte	0x51
 6402 0768 AC000000 		.4byte	0xac
 6403 076c 05       		.uleb128 0x5
 6404 076d 03       		.byte	0x3
 6405 076e 00000000 		.4byte	count_esperaBBB2
 6406 0772 19       		.uleb128 0x19
 6407 0773 7E020000 		.4byte	.LASF81
 6408 0777 05       		.byte	0x5
 6409 0778 52       		.byte	0x52
 6410 0779 83070000 		.4byte	0x783
 6411 077d 05       		.uleb128 0x5
 6412 077e 03       		.byte	0x3
 6413 077f 00000000 		.4byte	password_lcd
 6414 0783 05       		.uleb128 0x5
 6415 0784 66020000 		.4byte	0x266
 6416 0788 19       		.uleb128 0x19
 6417 0789 04010000 		.4byte	.LASF82
 6418 078d 05       		.byte	0x5
 6419 078e 53       		.byte	0x53
 6420 078f B1000000 		.4byte	0xb1
 6421 0793 05       		.uleb128 0x5
 6422 0794 03       		.byte	0x3
 6423 0795 00000000 		.4byte	imagen_grado
 6424 0799 06       		.uleb128 0x6
 6425 079a 8C000000 		.4byte	0x8c
 6426 079e AF070000 		.4byte	0x7af
 6427 07a2 07       		.uleb128 0x7
 6428 07a3 B6000000 		.4byte	0xb6
 6429 07a7 01       		.byte	0x1
 6430 07a8 07       		.uleb128 0x7
 6431 07a9 B6000000 		.4byte	0xb6
 6432 07ad 01       		.byte	0x1
 6433 07ae 00       		.byte	0
 6434 07af 19       		.uleb128 0x19
 6435 07b0 CB000000 		.4byte	.LASF83
 6436 07b4 05       		.byte	0x5
 6437 07b5 54       		.byte	0x54
 6438 07b6 C0070000 		.4byte	0x7c0
 6439 07ba 05       		.uleb128 0x5
 6440 07bb 03       		.byte	0x3
 6441 07bc 00000000 		.4byte	prox_caso
 6442 07c0 05       		.uleb128 0x5
 6443 07c1 99070000 		.4byte	0x799
 6444 07c5 06       		.uleb128 0x6
 6445 07c6 81000000 		.4byte	0x81
 6446 07ca D5070000 		.4byte	0x7d5
 6447 07ce 07       		.uleb128 0x7
 6448 07cf B6000000 		.4byte	0xb6
 6449 07d3 02       		.byte	0x2
 6450 07d4 00       		.byte	0
 6451 07d5 19       		.uleb128 0x19
 6452 07d6 0D020000 		.4byte	.LASF84
 6453 07da 05       		.byte	0x5
 6454 07db 55       		.byte	0x55
 6455 07dc E6070000 		.4byte	0x7e6
 6456 07e0 05       		.uleb128 0x5
 6457 07e1 03       		.byte	0x3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 138


 6458 07e2 00000000 		.4byte	bloqueo_LCD
 6459 07e6 05       		.uleb128 0x5
 6460 07e7 C5070000 		.4byte	0x7c5
 6461 07eb 19       		.uleb128 0x19
 6462 07ec 1E050000 		.4byte	.LASF85
 6463 07f0 05       		.byte	0x5
 6464 07f1 56       		.byte	0x56
 6465 07f2 FC070000 		.4byte	0x7fc
 6466 07f6 05       		.uleb128 0x5
 6467 07f7 03       		.byte	0x3
 6468 07f8 00000000 		.4byte	id_estacion
 6469 07fc 05       		.uleb128 0x5
 6470 07fd 56020000 		.4byte	0x256
 6471 0801 19       		.uleb128 0x19
 6472 0802 BB010000 		.4byte	.LASF86
 6473 0806 05       		.byte	0x5
 6474 0807 57       		.byte	0x57
 6475 0808 12080000 		.4byte	0x812
 6476 080c 05       		.uleb128 0x5
 6477 080d 03       		.byte	0x3
 6478 080e 00000000 		.4byte	id_venta
 6479 0812 05       		.uleb128 0x5
 6480 0813 76020000 		.4byte	0x276
 6481 0817 06       		.uleb128 0x6
 6482 0818 81000000 		.4byte	0x81
 6483 081c 27080000 		.4byte	0x827
 6484 0820 07       		.uleb128 0x7
 6485 0821 B6000000 		.4byte	0xb6
 6486 0825 C7       		.byte	0xc7
 6487 0826 00       		.byte	0
 6488 0827 19       		.uleb128 0x19
 6489 0828 30000000 		.4byte	.LASF87
 6490 082c 05       		.byte	0x5
 6491 082d 58       		.byte	0x58
 6492 082e 38080000 		.4byte	0x838
 6493 0832 05       		.uleb128 0x5
 6494 0833 03       		.byte	0x3
 6495 0834 00000000 		.4byte	trama_totales
 6496 0838 05       		.uleb128 0x5
 6497 0839 17080000 		.4byte	0x817
 6498 083d 19       		.uleb128 0x19
 6499 083e C1030000 		.4byte	.LASF88
 6500 0842 05       		.byte	0x5
 6501 0843 5C       		.byte	0x5c
 6502 0844 AC000000 		.4byte	0xac
 6503 0848 05       		.uleb128 0x5
 6504 0849 03       		.byte	0x3
 6505 084a 00000000 		.4byte	ppux10
 6506 084e 06       		.uleb128 0x6
 6507 084f 81000000 		.4byte	0x81
 6508 0853 5E080000 		.4byte	0x85e
 6509 0857 07       		.uleb128 0x7
 6510 0858 B6000000 		.4byte	0xb6
 6511 085c 10       		.byte	0x10
 6512 085d 00       		.byte	0
 6513 085e 19       		.uleb128 0x19
 6514 085f 28040000 		.4byte	.LASF89
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 139


 6515 0863 05       		.byte	0x5
 6516 0864 5D       		.byte	0x5d
 6517 0865 6F080000 		.4byte	0x86f
 6518 0869 05       		.uleb128 0x5
 6519 086a 03       		.byte	0x3
 6520 086b 00000000 		.4byte	nombre_pro1
 6521 086f 05       		.uleb128 0x5
 6522 0870 4E080000 		.4byte	0x84e
 6523 0874 19       		.uleb128 0x19
 6524 0875 C6040000 		.4byte	.LASF90
 6525 0879 05       		.byte	0x5
 6526 087a 5D       		.byte	0x5d
 6527 087b 85080000 		.4byte	0x885
 6528 087f 05       		.uleb128 0x5
 6529 0880 03       		.byte	0x3
 6530 0881 00000000 		.4byte	nombre_pro2
 6531 0885 05       		.uleb128 0x5
 6532 0886 4E080000 		.4byte	0x84e
 6533 088a 19       		.uleb128 0x19
 6534 088b 34040000 		.4byte	.LASF91
 6535 088f 05       		.byte	0x5
 6536 0890 5D       		.byte	0x5d
 6537 0891 9B080000 		.4byte	0x89b
 6538 0895 05       		.uleb128 0x5
 6539 0896 03       		.byte	0x3
 6540 0897 00000000 		.4byte	nombre_pro3
 6541 089b 05       		.uleb128 0x5
 6542 089c 4E080000 		.4byte	0x84e
 6543 08a0 19       		.uleb128 0x19
 6544 08a1 64000000 		.4byte	.LASF92
 6545 08a5 05       		.byte	0x5
 6546 08a6 5E       		.byte	0x5e
 6547 08a7 B1080000 		.4byte	0x8b1
 6548 08ab 05       		.uleb128 0x5
 6549 08ac 03       		.byte	0x3
 6550 08ad 00000000 		.4byte	version
 6551 08b1 05       		.uleb128 0x5
 6552 08b2 BD000000 		.4byte	0xbd
 6553 08b6 19       		.uleb128 0x19
 6554 08b7 3F010000 		.4byte	.LASF93
 6555 08bb 05       		.byte	0x5
 6556 08bc 68       		.byte	0x68
 6557 08bd CD000000 		.4byte	0xcd
 6558 08c1 05       		.uleb128 0x5
 6559 08c2 03       		.byte	0x3
 6560 08c3 00000000 		.4byte	lado1
 6561 08c7 19       		.uleb128 0x19
 6562 08c8 45010000 		.4byte	.LASF94
 6563 08cc 05       		.byte	0x5
 6564 08cd 69       		.byte	0x69
 6565 08ce CD000000 		.4byte	0xcd
 6566 08d2 05       		.uleb128 0x5
 6567 08d3 03       		.byte	0x3
 6568 08d4 00000000 		.4byte	lado2
 6569 08d8 06       		.uleb128 0x6
 6570 08d9 81000000 		.4byte	0x81
 6571 08dd E8080000 		.4byte	0x8e8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 140


 6572 08e1 07       		.uleb128 0x7
 6573 08e2 B6000000 		.4byte	0xb6
 6574 08e6 20       		.byte	0x20
 6575 08e7 00       		.byte	0
 6576 08e8 19       		.uleb128 0x19
 6577 08e9 C8030000 		.4byte	.LASF95
 6578 08ed 05       		.byte	0x5
 6579 08ee 6D       		.byte	0x6d
 6580 08ef F9080000 		.4byte	0x8f9
 6581 08f3 05       		.uleb128 0x5
 6582 08f4 03       		.byte	0x3
 6583 08f5 00000000 		.4byte	nombre
 6584 08f9 05       		.uleb128 0x5
 6585 08fa D8080000 		.4byte	0x8d8
 6586 08fe 1A       		.uleb128 0x1a
 6587 08ff 6E697400 		.ascii	"nit\000"
 6588 0903 05       		.byte	0x5
 6589 0904 6E       		.byte	0x6e
 6590 0905 0F090000 		.4byte	0x90f
 6591 0909 05       		.uleb128 0x5
 6592 090a 03       		.byte	0x3
 6593 090b 00000000 		.4byte	nit
 6594 090f 05       		.uleb128 0x5
 6595 0910 2B050000 		.4byte	0x52b
 6596 0914 06       		.uleb128 0x6
 6597 0915 81000000 		.4byte	0x81
 6598 0919 24090000 		.4byte	0x924
 6599 091d 07       		.uleb128 0x7
 6600 091e B6000000 		.4byte	0xb6
 6601 0922 13       		.byte	0x13
 6602 0923 00       		.byte	0
 6603 0924 19       		.uleb128 0x19
 6604 0925 9A010000 		.4byte	.LASF96
 6605 0929 05       		.byte	0x5
 6606 092a 6F       		.byte	0x6f
 6607 092b 35090000 		.4byte	0x935
 6608 092f 05       		.uleb128 0x5
 6609 0930 03       		.byte	0x3
 6610 0931 00000000 		.4byte	telefono
 6611 0935 05       		.uleb128 0x5
 6612 0936 14090000 		.4byte	0x914
 6613 093a 19       		.uleb128 0x19
 6614 093b C1000000 		.4byte	.LASF97
 6615 093f 05       		.byte	0x5
 6616 0940 70       		.byte	0x70
 6617 0941 4B090000 		.4byte	0x94b
 6618 0945 05       		.uleb128 0x5
 6619 0946 03       		.byte	0x3
 6620 0947 00000000 		.4byte	direccion
 6621 094b 05       		.uleb128 0x5
 6622 094c D8080000 		.4byte	0x8d8
 6623 0950 06       		.uleb128 0x6
 6624 0951 81000000 		.4byte	0x81
 6625 0955 60090000 		.4byte	0x960
 6626 0959 07       		.uleb128 0x7
 6627 095a B6000000 		.4byte	0xb6
 6628 095e 1F       		.byte	0x1f
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 141


 6629 095f 00       		.byte	0
 6630 0960 19       		.uleb128 0x19
 6631 0961 F8000000 		.4byte	.LASF98
 6632 0965 05       		.byte	0x5
 6633 0966 71       		.byte	0x71
 6634 0967 71090000 		.4byte	0x971
 6635 096b 05       		.uleb128 0x5
 6636 096c 03       		.byte	0x3
 6637 096d 00000000 		.4byte	lema1
 6638 0971 05       		.uleb128 0x5
 6639 0972 50090000 		.4byte	0x950
 6640 0976 19       		.uleb128 0x19
 6641 0977 FE000000 		.4byte	.LASF99
 6642 097b 05       		.byte	0x5
 6643 097c 72       		.byte	0x72
 6644 097d 87090000 		.4byte	0x987
 6645 0981 05       		.uleb128 0x5
 6646 0982 03       		.byte	0x3
 6647 0983 00000000 		.4byte	lema2
 6648 0987 05       		.uleb128 0x5
 6649 0988 50090000 		.4byte	0x950
 6650 098c 06       		.uleb128 0x6
 6651 098d 81000000 		.4byte	0x81
 6652 0991 9C090000 		.4byte	0x99c
 6653 0995 07       		.uleb128 0x7
 6654 0996 B6000000 		.4byte	0xb6
 6655 099a 01       		.byte	0x1
 6656 099b 00       		.byte	0
 6657 099c 19       		.uleb128 0x19
 6658 099d E4030000 		.4byte	.LASF100
 6659 09a1 05       		.byte	0x5
 6660 09a2 73       		.byte	0x73
 6661 09a3 AD090000 		.4byte	0x9ad
 6662 09a7 05       		.uleb128 0x5
 6663 09a8 03       		.byte	0x3
 6664 09a9 00000000 		.4byte	id_logo
 6665 09ad 05       		.uleb128 0x5
 6666 09ae 8C090000 		.4byte	0x98c
 6667 09b2 1A       		.uleb128 0x1a
 6668 09b3 6B6D00   		.ascii	"km\000"
 6669 09b6 05       		.byte	0x5
 6670 09b7 74       		.byte	0x74
 6671 09b8 C2090000 		.4byte	0x9c2
 6672 09bc 05       		.uleb128 0x5
 6673 09bd 03       		.byte	0x3
 6674 09be 00000000 		.4byte	km
 6675 09c2 05       		.uleb128 0x5
 6676 09c3 8C090000 		.4byte	0x98c
 6677 09c7 19       		.uleb128 0x19
 6678 09c8 AB040000 		.4byte	.LASF101
 6679 09cc 05       		.byte	0x5
 6680 09cd 75       		.byte	0x75
 6681 09ce C5070000 		.4byte	0x7c5
 6682 09d2 05       		.uleb128 0x5
 6683 09d3 03       		.byte	0x3
 6684 09d4 00000000 		.4byte	fecha
 6685 09d8 19       		.uleb128 0x19
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 142


 6686 09d9 93000000 		.4byte	.LASF102
 6687 09dd 05       		.byte	0x5
 6688 09de 76       		.byte	0x76
 6689 09df 8C090000 		.4byte	0x98c
 6690 09e3 05       		.uleb128 0x5
 6691 09e4 03       		.byte	0x3
 6692 09e5 00000000 		.4byte	hora
 6693 09e9 19       		.uleb128 0x19
 6694 09ea B1000000 		.4byte	.LASF103
 6695 09ee 05       		.byte	0x5
 6696 09ef 8B       		.byte	0x8b
 6697 09f0 73010000 		.4byte	0x173
 6698 09f4 05       		.uleb128 0x5
 6699 09f5 03       		.byte	0x3
 6700 09f6 00000000 		.4byte	rventa1
 6701 09fa 19       		.uleb128 0x19
 6702 09fb B9000000 		.4byte	.LASF104
 6703 09ff 05       		.byte	0x5
 6704 0a00 8C       		.byte	0x8c
 6705 0a01 73010000 		.4byte	0x173
 6706 0a05 05       		.uleb128 0x5
 6707 0a06 03       		.byte	0x3
 6708 0a07 00000000 		.4byte	rventa2
 6709 0a0b 19       		.uleb128 0x19
 6710 0a0c 7D000000 		.4byte	.LASF105
 6711 0a10 05       		.byte	0x5
 6712 0a11 91       		.byte	0x91
 6713 0a12 81000000 		.4byte	0x81
 6714 0a16 05       		.uleb128 0x5
 6715 0a17 03       		.byte	0x3
 6716 0a18 00000000 		.4byte	ok_RF
 6717 0a1c 19       		.uleb128 0x19
 6718 0a1d BB040000 		.4byte	.LASF106
 6719 0a21 05       		.byte	0x5
 6720 0a22 92       		.byte	0x92
 6721 0a23 81000000 		.4byte	0x81
 6722 0a27 05       		.uleb128 0x5
 6723 0a28 03       		.byte	0x3
 6724 0a29 00000000 		.4byte	ok_datosRF
 6725 0a2d 19       		.uleb128 0x19
 6726 0a2e E0010000 		.4byte	.LASF107
 6727 0a32 05       		.byte	0x5
 6728 0a33 93       		.byte	0x93
 6729 0a34 17080000 		.4byte	0x817
 6730 0a38 05       		.uleb128 0x5
 6731 0a39 03       		.byte	0x3
 6732 0a3a 00000000 		.4byte	rf_mod
 6733 0a3e 06       		.uleb128 0x6
 6734 0a3f 81000000 		.4byte	0x81
 6735 0a43 4E0A0000 		.4byte	0xa4e
 6736 0a47 07       		.uleb128 0x7
 6737 0a48 B6000000 		.4byte	0xb6
 6738 0a4c 3F       		.byte	0x3f
 6739 0a4d 00       		.byte	0
 6740 0a4e 19       		.uleb128 0x19
 6741 0a4f ED000000 		.4byte	.LASF108
 6742 0a53 05       		.byte	0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 143


 6743 0a54 98       		.byte	0x98
 6744 0a55 3E0A0000 		.4byte	0xa3e
 6745 0a59 05       		.uleb128 0x5
 6746 0a5a 03       		.byte	0x3
 6747 0a5b 00000000 		.4byte	buffer_i2c
 6748 0a5f 19       		.uleb128 0x19
 6749 0a60 CF030000 		.4byte	.LASF109
 6750 0a64 05       		.byte	0x5
 6751 0a65 9D       		.byte	0x9d
 6752 0a66 81000000 		.4byte	0x81
 6753 0a6a 05       		.uleb128 0x5
 6754 0a6b 03       		.byte	0x3
 6755 0a6c 00000000 		.4byte	crc_total
 6756 0a70 19       		.uleb128 0x19
 6757 0a71 E0020000 		.4byte	.LASF110
 6758 0a75 05       		.byte	0x5
 6759 0a76 A1       		.byte	0xa1
 6760 0a77 8C090000 		.4byte	0x98c
 6761 0a7b 05       		.uleb128 0x5
 6762 0a7c 03       		.byte	0x3
 6763 0a7d 00000000 		.4byte	print1
 6764 0a81 19       		.uleb128 0x19
 6765 0a82 5E020000 		.4byte	.LASF111
 6766 0a86 05       		.byte	0x5
 6767 0a87 A2       		.byte	0xa2
 6768 0a88 8C090000 		.4byte	0x98c
 6769 0a8c 05       		.uleb128 0x5
 6770 0a8d 03       		.byte	0x3
 6771 0a8e 00000000 		.4byte	print2
 6772 0a92 19       		.uleb128 0x19
 6773 0a93 75030000 		.4byte	.LASF112
 6774 0a97 01       		.byte	0x1
 6775 0a98 2F       		.byte	0x2f
 6776 0a99 81000000 		.4byte	0x81
 6777 0a9d 05       		.uleb128 0x5
 6778 0a9e 03       		.byte	0x3
 6779 0a9f 00000000 		.4byte	rx_timeout
 6780 0aa3 19       		.uleb128 0x19
 6781 0aa4 57010000 		.4byte	.LASF113
 6782 0aa8 01       		.byte	0x1
 6783 0aa9 30       		.byte	0x30
 6784 0aaa 4E080000 		.4byte	0x84e
 6785 0aae 05       		.uleb128 0x5
 6786 0aaf 03       		.byte	0x3
 6787 0ab0 00000000 		.4byte	msn_tc
 6788 0ab4 06       		.uleb128 0x6
 6789 0ab5 81000000 		.4byte	0x81
 6790 0ab9 C40A0000 		.4byte	0xac4
 6791 0abd 07       		.uleb128 0x7
 6792 0abe B6000000 		.4byte	0xb6
 6793 0ac2 0C       		.byte	0xc
 6794 0ac3 00       		.byte	0
 6795 0ac4 19       		.uleb128 0x19
 6796 0ac5 65010000 		.4byte	.LASF114
 6797 0ac9 01       		.byte	0x1
 6798 0aca 31       		.byte	0x31
 6799 0acb B40A0000 		.4byte	0xab4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 144


 6800 0acf 05       		.uleb128 0x5
 6801 0ad0 03       		.byte	0x3
 6802 0ad1 00000000 		.4byte	msn_te
 6803 0ad5 06       		.uleb128 0x6
 6804 0ad6 81000000 		.4byte	0x81
 6805 0ada E50A0000 		.4byte	0xae5
 6806 0ade 07       		.uleb128 0x7
 6807 0adf B6000000 		.4byte	0xb6
 6808 0ae3 0D       		.byte	0xd
 6809 0ae4 00       		.byte	0
 6810 0ae5 19       		.uleb128 0x19
 6811 0ae6 5E010000 		.4byte	.LASF115
 6812 0aea 01       		.byte	0x1
 6813 0aeb 32       		.byte	0x32
 6814 0aec D50A0000 		.4byte	0xad5
 6815 0af0 05       		.uleb128 0x5
 6816 0af1 03       		.byte	0x3
 6817 0af2 00000000 		.4byte	msn_td
 6818 0af6 19       		.uleb128 0x19
 6819 0af7 D5010000 		.4byte	.LASF116
 6820 0afb 01       		.byte	0x1
 6821 0afc 33       		.byte	0x33
 6822 0afd 2B050000 		.4byte	0x52b
 6823 0b01 05       		.uleb128 0x5
 6824 0b02 03       		.byte	0x3
 6825 0b03 00000000 		.4byte	msn_lecact
 6826 0b07 19       		.uleb128 0x19
 6827 0b08 E2000000 		.4byte	.LASF117
 6828 0b0c 01       		.byte	0x1
 6829 0b0d 34       		.byte	0x34
 6830 0b0e 4E080000 		.4byte	0x84e
 6831 0b12 05       		.uleb128 0x5
 6832 0b13 03       		.byte	0x3
 6833 0b14 00000000 		.4byte	msn_lecaan
 6834 0b18 19       		.uleb128 0x19
 6835 0b19 4B010000 		.4byte	.LASF118
 6836 0b1d 01       		.byte	0x1
 6837 0b1e 35       		.byte	0x35
 6838 0b1f A8040000 		.4byte	0x4a8
 6839 0b23 05       		.uleb128 0x5
 6840 0b24 03       		.byte	0x3
 6841 0b25 00000000 		.4byte	msn_tventas
 6842 0b29 00       		.byte	0
 6843              		.section	.debug_abbrev,"",%progbits
 6844              	.Ldebug_abbrev0:
 6845 0000 01       		.uleb128 0x1
 6846 0001 11       		.uleb128 0x11
 6847 0002 01       		.byte	0x1
 6848 0003 25       		.uleb128 0x25
 6849 0004 0E       		.uleb128 0xe
 6850 0005 13       		.uleb128 0x13
 6851 0006 0B       		.uleb128 0xb
 6852 0007 03       		.uleb128 0x3
 6853 0008 0E       		.uleb128 0xe
 6854 0009 1B       		.uleb128 0x1b
 6855 000a 0E       		.uleb128 0xe
 6856 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 145


 6857 000c 17       		.uleb128 0x17
 6858 000d 11       		.uleb128 0x11
 6859 000e 01       		.uleb128 0x1
 6860 000f 10       		.uleb128 0x10
 6861 0010 17       		.uleb128 0x17
 6862 0011 00       		.byte	0
 6863 0012 00       		.byte	0
 6864 0013 02       		.uleb128 0x2
 6865 0014 24       		.uleb128 0x24
 6866 0015 00       		.byte	0
 6867 0016 0B       		.uleb128 0xb
 6868 0017 0B       		.uleb128 0xb
 6869 0018 3E       		.uleb128 0x3e
 6870 0019 0B       		.uleb128 0xb
 6871 001a 03       		.uleb128 0x3
 6872 001b 0E       		.uleb128 0xe
 6873 001c 00       		.byte	0
 6874 001d 00       		.byte	0
 6875 001e 03       		.uleb128 0x3
 6876 001f 16       		.uleb128 0x16
 6877 0020 00       		.byte	0
 6878 0021 03       		.uleb128 0x3
 6879 0022 0E       		.uleb128 0xe
 6880 0023 3A       		.uleb128 0x3a
 6881 0024 0B       		.uleb128 0xb
 6882 0025 3B       		.uleb128 0x3b
 6883 0026 0B       		.uleb128 0xb
 6884 0027 49       		.uleb128 0x49
 6885 0028 13       		.uleb128 0x13
 6886 0029 00       		.byte	0
 6887 002a 00       		.byte	0
 6888 002b 04       		.uleb128 0x4
 6889 002c 24       		.uleb128 0x24
 6890 002d 00       		.byte	0
 6891 002e 0B       		.uleb128 0xb
 6892 002f 0B       		.uleb128 0xb
 6893 0030 3E       		.uleb128 0x3e
 6894 0031 0B       		.uleb128 0xb
 6895 0032 03       		.uleb128 0x3
 6896 0033 08       		.uleb128 0x8
 6897 0034 00       		.byte	0
 6898 0035 00       		.byte	0
 6899 0036 05       		.uleb128 0x5
 6900 0037 35       		.uleb128 0x35
 6901 0038 00       		.byte	0
 6902 0039 49       		.uleb128 0x49
 6903 003a 13       		.uleb128 0x13
 6904 003b 00       		.byte	0
 6905 003c 00       		.byte	0
 6906 003d 06       		.uleb128 0x6
 6907 003e 01       		.uleb128 0x1
 6908 003f 01       		.byte	0x1
 6909 0040 49       		.uleb128 0x49
 6910 0041 13       		.uleb128 0x13
 6911 0042 01       		.uleb128 0x1
 6912 0043 13       		.uleb128 0x13
 6913 0044 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 146


 6914 0045 00       		.byte	0
 6915 0046 07       		.uleb128 0x7
 6916 0047 21       		.uleb128 0x21
 6917 0048 00       		.byte	0
 6918 0049 49       		.uleb128 0x49
 6919 004a 13       		.uleb128 0x13
 6920 004b 2F       		.uleb128 0x2f
 6921 004c 0B       		.uleb128 0xb
 6922 004d 00       		.byte	0
 6923 004e 00       		.byte	0
 6924 004f 08       		.uleb128 0x8
 6925 0050 13       		.uleb128 0x13
 6926 0051 01       		.byte	0x1
 6927 0052 03       		.uleb128 0x3
 6928 0053 0E       		.uleb128 0xe
 6929 0054 0B       		.uleb128 0xb
 6930 0055 0B       		.uleb128 0xb
 6931 0056 3A       		.uleb128 0x3a
 6932 0057 0B       		.uleb128 0xb
 6933 0058 3B       		.uleb128 0x3b
 6934 0059 0B       		.uleb128 0xb
 6935 005a 01       		.uleb128 0x1
 6936 005b 13       		.uleb128 0x13
 6937 005c 00       		.byte	0
 6938 005d 00       		.byte	0
 6939 005e 09       		.uleb128 0x9
 6940 005f 0D       		.uleb128 0xd
 6941 0060 00       		.byte	0
 6942 0061 03       		.uleb128 0x3
 6943 0062 08       		.uleb128 0x8
 6944 0063 3A       		.uleb128 0x3a
 6945 0064 0B       		.uleb128 0xb
 6946 0065 3B       		.uleb128 0x3b
 6947 0066 0B       		.uleb128 0xb
 6948 0067 49       		.uleb128 0x49
 6949 0068 13       		.uleb128 0x13
 6950 0069 38       		.uleb128 0x38
 6951 006a 0B       		.uleb128 0xb
 6952 006b 00       		.byte	0
 6953 006c 00       		.byte	0
 6954 006d 0A       		.uleb128 0xa
 6955 006e 0D       		.uleb128 0xd
 6956 006f 00       		.byte	0
 6957 0070 03       		.uleb128 0x3
 6958 0071 0E       		.uleb128 0xe
 6959 0072 3A       		.uleb128 0x3a
 6960 0073 0B       		.uleb128 0xb
 6961 0074 3B       		.uleb128 0x3b
 6962 0075 0B       		.uleb128 0xb
 6963 0076 49       		.uleb128 0x49
 6964 0077 13       		.uleb128 0x13
 6965 0078 38       		.uleb128 0x38
 6966 0079 0B       		.uleb128 0xb
 6967 007a 00       		.byte	0
 6968 007b 00       		.byte	0
 6969 007c 0B       		.uleb128 0xb
 6970 007d 2E       		.uleb128 0x2e
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 147


 6971 007e 00       		.byte	0
 6972 007f 3F       		.uleb128 0x3f
 6973 0080 19       		.uleb128 0x19
 6974 0081 03       		.uleb128 0x3
 6975 0082 0E       		.uleb128 0xe
 6976 0083 3A       		.uleb128 0x3a
 6977 0084 0B       		.uleb128 0xb
 6978 0085 3B       		.uleb128 0x3b
 6979 0086 0B       		.uleb128 0xb
 6980 0087 27       		.uleb128 0x27
 6981 0088 19       		.uleb128 0x19
 6982 0089 11       		.uleb128 0x11
 6983 008a 01       		.uleb128 0x1
 6984 008b 12       		.uleb128 0x12
 6985 008c 06       		.uleb128 0x6
 6986 008d 40       		.uleb128 0x40
 6987 008e 18       		.uleb128 0x18
 6988 008f 9642     		.uleb128 0x2116
 6989 0091 19       		.uleb128 0x19
 6990 0092 00       		.byte	0
 6991 0093 00       		.byte	0
 6992 0094 0C       		.uleb128 0xc
 6993 0095 2E       		.uleb128 0x2e
 6994 0096 01       		.byte	0x1
 6995 0097 3F       		.uleb128 0x3f
 6996 0098 19       		.uleb128 0x19
 6997 0099 03       		.uleb128 0x3
 6998 009a 0E       		.uleb128 0xe
 6999 009b 3A       		.uleb128 0x3a
 7000 009c 0B       		.uleb128 0xb
 7001 009d 3B       		.uleb128 0x3b
 7002 009e 0B       		.uleb128 0xb
 7003 009f 27       		.uleb128 0x27
 7004 00a0 19       		.uleb128 0x19
 7005 00a1 49       		.uleb128 0x49
 7006 00a2 13       		.uleb128 0x13
 7007 00a3 11       		.uleb128 0x11
 7008 00a4 01       		.uleb128 0x1
 7009 00a5 12       		.uleb128 0x12
 7010 00a6 06       		.uleb128 0x6
 7011 00a7 40       		.uleb128 0x40
 7012 00a8 18       		.uleb128 0x18
 7013 00a9 9642     		.uleb128 0x2116
 7014 00ab 19       		.uleb128 0x19
 7015 00ac 01       		.uleb128 0x1
 7016 00ad 13       		.uleb128 0x13
 7017 00ae 00       		.byte	0
 7018 00af 00       		.byte	0
 7019 00b0 0D       		.uleb128 0xd
 7020 00b1 05       		.uleb128 0x5
 7021 00b2 00       		.byte	0
 7022 00b3 03       		.uleb128 0x3
 7023 00b4 08       		.uleb128 0x8
 7024 00b5 3A       		.uleb128 0x3a
 7025 00b6 0B       		.uleb128 0xb
 7026 00b7 3B       		.uleb128 0x3b
 7027 00b8 0B       		.uleb128 0xb
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 148


 7028 00b9 49       		.uleb128 0x49
 7029 00ba 13       		.uleb128 0x13
 7030 00bb 02       		.uleb128 0x2
 7031 00bc 18       		.uleb128 0x18
 7032 00bd 00       		.byte	0
 7033 00be 00       		.byte	0
 7034 00bf 0E       		.uleb128 0xe
 7035 00c0 34       		.uleb128 0x34
 7036 00c1 00       		.byte	0
 7037 00c2 03       		.uleb128 0x3
 7038 00c3 0E       		.uleb128 0xe
 7039 00c4 3A       		.uleb128 0x3a
 7040 00c5 0B       		.uleb128 0xb
 7041 00c6 3B       		.uleb128 0x3b
 7042 00c7 0B       		.uleb128 0xb
 7043 00c8 49       		.uleb128 0x49
 7044 00c9 13       		.uleb128 0x13
 7045 00ca 02       		.uleb128 0x2
 7046 00cb 18       		.uleb128 0x18
 7047 00cc 00       		.byte	0
 7048 00cd 00       		.byte	0
 7049 00ce 0F       		.uleb128 0xf
 7050 00cf 34       		.uleb128 0x34
 7051 00d0 00       		.byte	0
 7052 00d1 03       		.uleb128 0x3
 7053 00d2 08       		.uleb128 0x8
 7054 00d3 3A       		.uleb128 0x3a
 7055 00d4 0B       		.uleb128 0xb
 7056 00d5 3B       		.uleb128 0x3b
 7057 00d6 0B       		.uleb128 0xb
 7058 00d7 49       		.uleb128 0x49
 7059 00d8 13       		.uleb128 0x13
 7060 00d9 02       		.uleb128 0x2
 7061 00da 18       		.uleb128 0x18
 7062 00db 00       		.byte	0
 7063 00dc 00       		.byte	0
 7064 00dd 10       		.uleb128 0x10
 7065 00de 2E       		.uleb128 0x2e
 7066 00df 01       		.byte	0x1
 7067 00e0 3F       		.uleb128 0x3f
 7068 00e1 19       		.uleb128 0x19
 7069 00e2 03       		.uleb128 0x3
 7070 00e3 0E       		.uleb128 0xe
 7071 00e4 3A       		.uleb128 0x3a
 7072 00e5 0B       		.uleb128 0xb
 7073 00e6 3B       		.uleb128 0x3b
 7074 00e7 0B       		.uleb128 0xb
 7075 00e8 27       		.uleb128 0x27
 7076 00e9 19       		.uleb128 0x19
 7077 00ea 11       		.uleb128 0x11
 7078 00eb 01       		.uleb128 0x1
 7079 00ec 12       		.uleb128 0x12
 7080 00ed 06       		.uleb128 0x6
 7081 00ee 40       		.uleb128 0x40
 7082 00ef 18       		.uleb128 0x18
 7083 00f0 9642     		.uleb128 0x2116
 7084 00f2 19       		.uleb128 0x19
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 149


 7085 00f3 01       		.uleb128 0x1
 7086 00f4 13       		.uleb128 0x13
 7087 00f5 00       		.byte	0
 7088 00f6 00       		.byte	0
 7089 00f7 11       		.uleb128 0x11
 7090 00f8 2E       		.uleb128 0x2e
 7091 00f9 01       		.byte	0x1
 7092 00fa 3F       		.uleb128 0x3f
 7093 00fb 19       		.uleb128 0x19
 7094 00fc 03       		.uleb128 0x3
 7095 00fd 0E       		.uleb128 0xe
 7096 00fe 3A       		.uleb128 0x3a
 7097 00ff 0B       		.uleb128 0xb
 7098 0100 3B       		.uleb128 0x3b
 7099 0101 05       		.uleb128 0x5
 7100 0102 27       		.uleb128 0x27
 7101 0103 19       		.uleb128 0x19
 7102 0104 11       		.uleb128 0x11
 7103 0105 01       		.uleb128 0x1
 7104 0106 12       		.uleb128 0x12
 7105 0107 06       		.uleb128 0x6
 7106 0108 40       		.uleb128 0x40
 7107 0109 18       		.uleb128 0x18
 7108 010a 9642     		.uleb128 0x2116
 7109 010c 19       		.uleb128 0x19
 7110 010d 01       		.uleb128 0x1
 7111 010e 13       		.uleb128 0x13
 7112 010f 00       		.byte	0
 7113 0110 00       		.byte	0
 7114 0111 12       		.uleb128 0x12
 7115 0112 05       		.uleb128 0x5
 7116 0113 00       		.byte	0
 7117 0114 03       		.uleb128 0x3
 7118 0115 08       		.uleb128 0x8
 7119 0116 3A       		.uleb128 0x3a
 7120 0117 0B       		.uleb128 0xb
 7121 0118 3B       		.uleb128 0x3b
 7122 0119 05       		.uleb128 0x5
 7123 011a 49       		.uleb128 0x49
 7124 011b 13       		.uleb128 0x13
 7125 011c 02       		.uleb128 0x2
 7126 011d 18       		.uleb128 0x18
 7127 011e 00       		.byte	0
 7128 011f 00       		.byte	0
 7129 0120 13       		.uleb128 0x13
 7130 0121 2E       		.uleb128 0x2e
 7131 0122 01       		.byte	0x1
 7132 0123 3F       		.uleb128 0x3f
 7133 0124 19       		.uleb128 0x19
 7134 0125 03       		.uleb128 0x3
 7135 0126 0E       		.uleb128 0xe
 7136 0127 3A       		.uleb128 0x3a
 7137 0128 0B       		.uleb128 0xb
 7138 0129 3B       		.uleb128 0x3b
 7139 012a 05       		.uleb128 0x5
 7140 012b 27       		.uleb128 0x27
 7141 012c 19       		.uleb128 0x19
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 150


 7142 012d 49       		.uleb128 0x49
 7143 012e 13       		.uleb128 0x13
 7144 012f 11       		.uleb128 0x11
 7145 0130 01       		.uleb128 0x1
 7146 0131 12       		.uleb128 0x12
 7147 0132 06       		.uleb128 0x6
 7148 0133 40       		.uleb128 0x40
 7149 0134 18       		.uleb128 0x18
 7150 0135 9642     		.uleb128 0x2116
 7151 0137 19       		.uleb128 0x19
 7152 0138 01       		.uleb128 0x1
 7153 0139 13       		.uleb128 0x13
 7154 013a 00       		.byte	0
 7155 013b 00       		.byte	0
 7156 013c 14       		.uleb128 0x14
 7157 013d 34       		.uleb128 0x34
 7158 013e 00       		.byte	0
 7159 013f 03       		.uleb128 0x3
 7160 0140 08       		.uleb128 0x8
 7161 0141 3A       		.uleb128 0x3a
 7162 0142 0B       		.uleb128 0xb
 7163 0143 3B       		.uleb128 0x3b
 7164 0144 05       		.uleb128 0x5
 7165 0145 49       		.uleb128 0x49
 7166 0146 13       		.uleb128 0x13
 7167 0147 02       		.uleb128 0x2
 7168 0148 18       		.uleb128 0x18
 7169 0149 00       		.byte	0
 7170 014a 00       		.byte	0
 7171 014b 15       		.uleb128 0x15
 7172 014c 05       		.uleb128 0x5
 7173 014d 00       		.byte	0
 7174 014e 03       		.uleb128 0x3
 7175 014f 0E       		.uleb128 0xe
 7176 0150 3A       		.uleb128 0x3a
 7177 0151 0B       		.uleb128 0xb
 7178 0152 3B       		.uleb128 0x3b
 7179 0153 05       		.uleb128 0x5
 7180 0154 49       		.uleb128 0x49
 7181 0155 13       		.uleb128 0x13
 7182 0156 02       		.uleb128 0x2
 7183 0157 18       		.uleb128 0x18
 7184 0158 00       		.byte	0
 7185 0159 00       		.byte	0
 7186 015a 16       		.uleb128 0x16
 7187 015b 34       		.uleb128 0x34
 7188 015c 00       		.byte	0
 7189 015d 03       		.uleb128 0x3
 7190 015e 0E       		.uleb128 0xe
 7191 015f 3A       		.uleb128 0x3a
 7192 0160 0B       		.uleb128 0xb
 7193 0161 3B       		.uleb128 0x3b
 7194 0162 05       		.uleb128 0x5
 7195 0163 49       		.uleb128 0x49
 7196 0164 13       		.uleb128 0x13
 7197 0165 02       		.uleb128 0x2
 7198 0166 18       		.uleb128 0x18
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 151


 7199 0167 00       		.byte	0
 7200 0168 00       		.byte	0
 7201 0169 17       		.uleb128 0x17
 7202 016a 0F       		.uleb128 0xf
 7203 016b 00       		.byte	0
 7204 016c 0B       		.uleb128 0xb
 7205 016d 0B       		.uleb128 0xb
 7206 016e 49       		.uleb128 0x49
 7207 016f 13       		.uleb128 0x13
 7208 0170 00       		.byte	0
 7209 0171 00       		.byte	0
 7210 0172 18       		.uleb128 0x18
 7211 0173 34       		.uleb128 0x34
 7212 0174 00       		.byte	0
 7213 0175 03       		.uleb128 0x3
 7214 0176 0E       		.uleb128 0xe
 7215 0177 3A       		.uleb128 0x3a
 7216 0178 0B       		.uleb128 0xb
 7217 0179 3B       		.uleb128 0x3b
 7218 017a 05       		.uleb128 0x5
 7219 017b 49       		.uleb128 0x49
 7220 017c 13       		.uleb128 0x13
 7221 017d 3F       		.uleb128 0x3f
 7222 017e 19       		.uleb128 0x19
 7223 017f 3C       		.uleb128 0x3c
 7224 0180 19       		.uleb128 0x19
 7225 0181 00       		.byte	0
 7226 0182 00       		.byte	0
 7227 0183 19       		.uleb128 0x19
 7228 0184 34       		.uleb128 0x34
 7229 0185 00       		.byte	0
 7230 0186 03       		.uleb128 0x3
 7231 0187 0E       		.uleb128 0xe
 7232 0188 3A       		.uleb128 0x3a
 7233 0189 0B       		.uleb128 0xb
 7234 018a 3B       		.uleb128 0x3b
 7235 018b 0B       		.uleb128 0xb
 7236 018c 49       		.uleb128 0x49
 7237 018d 13       		.uleb128 0x13
 7238 018e 3F       		.uleb128 0x3f
 7239 018f 19       		.uleb128 0x19
 7240 0190 02       		.uleb128 0x2
 7241 0191 18       		.uleb128 0x18
 7242 0192 00       		.byte	0
 7243 0193 00       		.byte	0
 7244 0194 1A       		.uleb128 0x1a
 7245 0195 34       		.uleb128 0x34
 7246 0196 00       		.byte	0
 7247 0197 03       		.uleb128 0x3
 7248 0198 08       		.uleb128 0x8
 7249 0199 3A       		.uleb128 0x3a
 7250 019a 0B       		.uleb128 0xb
 7251 019b 3B       		.uleb128 0x3b
 7252 019c 0B       		.uleb128 0xb
 7253 019d 49       		.uleb128 0x49
 7254 019e 13       		.uleb128 0x13
 7255 019f 3F       		.uleb128 0x3f
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 152


 7256 01a0 19       		.uleb128 0x19
 7257 01a1 02       		.uleb128 0x2
 7258 01a2 18       		.uleb128 0x18
 7259 01a3 00       		.byte	0
 7260 01a4 00       		.byte	0
 7261 01a5 00       		.byte	0
 7262              		.section	.debug_aranges,"",%progbits
 7263 0000 64000000 		.4byte	0x64
 7264 0004 0200     		.2byte	0x2
 7265 0006 00000000 		.4byte	.Ldebug_info0
 7266 000a 04       		.byte	0x4
 7267 000b 00       		.byte	0
 7268 000c 0000     		.2byte	0
 7269 000e 0000     		.2byte	0
 7270 0010 00000000 		.4byte	.LFB63
 7271 0014 14000000 		.4byte	.LFE63-.LFB63
 7272 0018 00000000 		.4byte	.LFB64
 7273 001c 98000000 		.4byte	.LFE64-.LFB64
 7274 0020 00000000 		.4byte	.LFB65
 7275 0024 A0000000 		.4byte	.LFE65-.LFB65
 7276 0028 00000000 		.4byte	.LFB66
 7277 002c 36000000 		.4byte	.LFE66-.LFB66
 7278 0030 00000000 		.4byte	.LFB67
 7279 0034 7C010000 		.4byte	.LFE67-.LFB67
 7280 0038 00000000 		.4byte	.LFB68
 7281 003c 24000000 		.4byte	.LFE68-.LFB68
 7282 0040 00000000 		.4byte	.LFB69
 7283 0044 54030000 		.4byte	.LFE69-.LFB69
 7284 0048 00000000 		.4byte	.LFB70
 7285 004c 80080000 		.4byte	.LFE70-.LFB70
 7286 0050 00000000 		.4byte	.LFB71
 7287 0054 7C020000 		.4byte	.LFE71-.LFB71
 7288 0058 00000000 		.4byte	.LFB72
 7289 005c 94100000 		.4byte	.LFE72-.LFB72
 7290 0060 00000000 		.4byte	0
 7291 0064 00000000 		.4byte	0
 7292              		.section	.debug_ranges,"",%progbits
 7293              	.Ldebug_ranges0:
 7294 0000 00000000 		.4byte	.LFB63
 7295 0004 14000000 		.4byte	.LFE63
 7296 0008 00000000 		.4byte	.LFB64
 7297 000c 98000000 		.4byte	.LFE64
 7298 0010 00000000 		.4byte	.LFB65
 7299 0014 A0000000 		.4byte	.LFE65
 7300 0018 00000000 		.4byte	.LFB66
 7301 001c 36000000 		.4byte	.LFE66
 7302 0020 00000000 		.4byte	.LFB67
 7303 0024 7C010000 		.4byte	.LFE67
 7304 0028 00000000 		.4byte	.LFB68
 7305 002c 24000000 		.4byte	.LFE68
 7306 0030 00000000 		.4byte	.LFB69
 7307 0034 54030000 		.4byte	.LFE69
 7308 0038 00000000 		.4byte	.LFB70
 7309 003c 80080000 		.4byte	.LFE70
 7310 0040 00000000 		.4byte	.LFB71
 7311 0044 7C020000 		.4byte	.LFE71
 7312 0048 00000000 		.4byte	.LFB72
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 153


 7313 004c 94100000 		.4byte	.LFE72
 7314 0050 00000000 		.4byte	0
 7315 0054 00000000 		.4byte	0
 7316              		.section	.debug_line,"",%progbits
 7317              	.Ldebug_line0:
 7318 0000 020B0000 		.section	.debug_str,"MS",%progbits,1
 7318      02006E01 
 7318      00000201 
 7318      FB0E0D00 
 7318      01010101 
 7319              	.LASF33:
 7320 0000 70617373 		.ascii	"password\000"
 7320      776F7264 
 7320      00
 7321              	.LASF73:
 7322 0009 666C756A 		.ascii	"flujo_LCD1\000"
 7322      6F5F4C43 
 7322      443100
 7323              	.LASF74:
 7324 0014 666C756A 		.ascii	"flujo_LCD2\000"
 7324      6F5F4C43 
 7324      443200
 7325              	.LASF78:
 7326 001f 636F756E 		.ascii	"count_protector2\000"
 7326      745F7072 
 7326      6F746563 
 7326      746F7232 
 7326      00
 7327              	.LASF87:
 7328 0030 7472616D 		.ascii	"trama_totales\000"
 7328      615F746F 
 7328      74616C65 
 7328      7300
 7329              	.LASF60:
 7330 003e 69645F63 		.ascii	"id_coma1\000"
 7330      6F6D6131 
 7330      00
 7331              	.LASF63:
 7332 0047 69645F63 		.ascii	"id_coma2\000"
 7332      6F6D6132 
 7332      00
 7333              	.LASF47:
 7334 0050 62756666 		.ascii	"buffer\000"
 7334      657200
 7335              	.LASF8:
 7336 0057 756E7369 		.ascii	"unsigned int\000"
 7336      676E6564 
 7336      20696E74 
 7336      00
 7337              	.LASF92:
 7338 0064 76657273 		.ascii	"version\000"
 7338      696F6E00 
 7339              	.LASF9:
 7340 006c 5F5F696E 		.ascii	"__int32_t\000"
 7340      7433325F 
 7340      7400
 7341              	.LASF52:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 154


 7342 0076 70726563 		.ascii	"precio\000"
 7342      696F00
 7343              	.LASF105:
 7344 007d 6F6B5F52 		.ascii	"ok_RF\000"
 7344      4600
 7345              	.LASF53:
 7346 0083 6E756D5F 		.ascii	"num_man\000"
 7346      6D616E00 
 7347              	.LASF50:
 7348 008b 64656369 		.ascii	"decimal\000"
 7348      6D616C00 
 7349              	.LASF102:
 7350 0093 686F7261 		.ascii	"hora\000"
 7350      00
 7351              	.LASF71:
 7352 0098 7465636C 		.ascii	"teclas1\000"
 7352      61733100 
 7353              	.LASF72:
 7354 00a0 7465636C 		.ascii	"teclas2\000"
 7354      61733200 
 7355              	.LASF23:
 7356 00a8 706F7369 		.ascii	"posicion\000"
 7356      63696F6E 
 7356      00
 7357              	.LASF103:
 7358 00b1 7276656E 		.ascii	"rventa1\000"
 7358      74613100 
 7359              	.LASF104:
 7360 00b9 7276656E 		.ascii	"rventa2\000"
 7360      74613200 
 7361              	.LASF97:
 7362 00c1 64697265 		.ascii	"direccion\000"
 7362      6363696F 
 7362      6E00
 7363              	.LASF83:
 7364 00cb 70726F78 		.ascii	"prox_caso\000"
 7364      5F636173 
 7364      6F00
 7365              	.LASF28:
 7366 00d5 70726573 		.ascii	"preset\000"
 7366      657400
 7367              	.LASF13:
 7368 00dc 666C6F61 		.ascii	"float\000"
 7368      7400
 7369              	.LASF117:
 7370 00e2 6D736E5F 		.ascii	"msn_lecaan\000"
 7370      6C656361 
 7370      616E00
 7371              	.LASF108:
 7372 00ed 62756666 		.ascii	"buffer_i2c\000"
 7372      65725F69 
 7372      326300
 7373              	.LASF98:
 7374 00f8 6C656D61 		.ascii	"lema1\000"
 7374      3100
 7375              	.LASF99:
 7376 00fe 6C656D61 		.ascii	"lema2\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 155


 7376      3200
 7377              	.LASF82:
 7378 0104 696D6167 		.ascii	"imagen_grado\000"
 7378      656E5F67 
 7378      7261646F 
 7378      00
 7379              	.LASF30:
 7380 0111 696D7072 		.ascii	"imprimir\000"
 7380      696D6972 
 7380      00
 7381              	.LASF7:
 7382 011a 6C6F6E67 		.ascii	"long long unsigned int\000"
 7382      206C6F6E 
 7382      6720756E 
 7382      7369676E 
 7382      65642069 
 7383              	.LASF120:
 7384 0131 2E5C5072 		.ascii	".\\Protocolo.c\000"
 7384      6F746F63 
 7384      6F6C6F2E 
 7384      6300
 7385              	.LASF93:
 7386 013f 6C61646F 		.ascii	"lado1\000"
 7386      3100
 7387              	.LASF94:
 7388 0145 6C61646F 		.ascii	"lado2\000"
 7388      3200
 7389              	.LASF118:
 7390 014b 6D736E5F 		.ascii	"msn_tventas\000"
 7390      7476656E 
 7390      74617300 
 7391              	.LASF113:
 7392 0157 6D736E5F 		.ascii	"msn_tc\000"
 7392      746300
 7393              	.LASF115:
 7394 015e 6D736E5F 		.ascii	"msn_td\000"
 7394      746400
 7395              	.LASF114:
 7396 0165 6D736E5F 		.ascii	"msn_te\000"
 7396      746500
 7397              	.LASF55:
 7398 016c 53757274 		.ascii	"Surtidor_rxBuffer\000"
 7398      69646F72 
 7398      5F727842 
 7398      75666665 
 7398      7200
 7399              	.LASF29:
 7400 017e 706C6163 		.ascii	"placa\000"
 7400      6100
 7401              	.LASF38:
 7402 0184 7665725F 		.ascii	"ver_pos\000"
 7402      706F7300 
 7403              	.LASF25:
 7404 018c 766F6C75 		.ascii	"volumen\000"
 7404      6D656E00 
 7405              	.LASF44:
 7406 0194 76656E74 		.ascii	"venta\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 156


 7406      6100
 7407              	.LASF96:
 7408 019a 74656C65 		.ascii	"telefono\000"
 7408      666F6E6F 
 7408      00
 7409              	.LASF61:
 7410 01a3 69645F74 		.ascii	"id_teclado1\000"
 7410      65636C61 
 7410      646F3100 
 7411              	.LASF64:
 7412 01af 69645F74 		.ascii	"id_teclado2\000"
 7412      65636C61 
 7412      646F3200 
 7413              	.LASF86:
 7414 01bb 69645F76 		.ascii	"id_venta\000"
 7414      656E7461 
 7414      00
 7415              	.LASF80:
 7416 01c4 636F756E 		.ascii	"count_esperaBBB2\000"
 7416      745F6573 
 7416      70657261 
 7416      42424232 
 7416      00
 7417              	.LASF116:
 7418 01d5 6D736E5F 		.ascii	"msn_lecact\000"
 7418      6C656361 
 7418      637400
 7419              	.LASF107:
 7420 01e0 72665F6D 		.ascii	"rf_mod\000"
 7420      6F6400
 7421              	.LASF43:
 7422 01e7 64657465 		.ascii	"detener\000"
 7422      6E657200 
 7423              	.LASF41:
 7424 01ef 636F6D61 		.ascii	"comand_exten\000"
 7424      6E645F65 
 7424      7874656E 
 7424      00
 7425              	.LASF76:
 7426 01fc 42756666 		.ascii	"Buffer_LCD2\000"
 7426      65725F4C 
 7426      43443200 
 7427              	.LASF15:
 7428 0208 63686172 		.ascii	"char\000"
 7428      00
 7429              	.LASF84:
 7430 020d 626C6F71 		.ascii	"bloqueo_LCD\000"
 7430      75656F5F 
 7430      4C434400 
 7431              	.LASF20:
 7432 0219 6D616E67 		.ascii	"mangueras\000"
 7432      75657261 
 7432      7300
 7433              	.LASF12:
 7434 0223 75696E74 		.ascii	"uint16\000"
 7434      313600
 7435              	.LASF121:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 157


 7436 022a 433A5C55 		.ascii	"C:\\Users\\Recepcion\\Desktop\\Prueba_Autogas\\BBB."
 7436      73657273 
 7436      5C526563 
 7436      65706369 
 7436      6F6E5C44 
 7437 0258 63796473 		.ascii	"cydsn\000"
 7437      6E00
 7438              	.LASF111:
 7439 025e 7072696E 		.ascii	"print2\000"
 7439      743200
 7440              	.LASF31:
 7441 0265 7469706F 		.ascii	"tipo_venta\000"
 7441      5F76656E 
 7441      746100
 7442              	.LASF34:
 7443 0270 7475726E 		.ascii	"turno\000"
 7443      6F00
 7444              	.LASF18:
 7445 0276 746F7461 		.ascii	"totales\000"
 7445      6C657300 
 7446              	.LASF81:
 7447 027e 70617373 		.ascii	"password_lcd\000"
 7447      776F7264 
 7447      5F6C6364 
 7447      00
 7448              	.LASF57:
 7449 028b 636F756E 		.ascii	"count_teclas1\000"
 7449      745F7465 
 7449      636C6173 
 7449      3100
 7450              	.LASF62:
 7451 0299 636F756E 		.ascii	"count_teclas2\000"
 7451      745F7465 
 7451      636C6173 
 7451      3200
 7452              	.LASF65:
 7453 02a7 706F7378 		.ascii	"posx1\000"
 7453      3100
 7454              	.LASF68:
 7455 02ad 706F7378 		.ascii	"posx2\000"
 7455      3200
 7456              	.LASF6:
 7457 02b3 6C6F6E67 		.ascii	"long long int\000"
 7457      206C6F6E 
 7457      6720696E 
 7457      7400
 7458              	.LASF26:
 7459 02c1 70726F64 		.ascii	"producto\000"
 7459      7563746F 
 7459      00
 7460              	.LASF51:
 7461 02ca 63616D62 		.ascii	"cambiar_precio\000"
 7461      6961725F 
 7461      70726563 
 7461      696F00
 7462              	.LASF32:
 7463 02d9 63656475 		.ascii	"cedula\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 158


 7463      6C6100
 7464              	.LASF110:
 7465 02e0 7072696E 		.ascii	"print1\000"
 7465      743100
 7466              	.LASF119:
 7467 02e7 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 7467      4320342E 
 7467      392E3320 
 7467      32303135 
 7467      30333033 
 7468 031a 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 7468      20726576 
 7468      6973696F 
 7468      6E203232 
 7468      31323230 
 7469 034d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 7469      66756E63 
 7469      74696F6E 
 7469      2D736563 
 7469      74696F6E 
 7470              	.LASF112:
 7471 0375 72785F74 		.ascii	"rx_timeout\000"
 7471      696D656F 
 7471      757400
 7472              	.LASF66:
 7473 0380 706F7379 		.ascii	"posy1\000"
 7473      3100
 7474              	.LASF69:
 7475 0386 706F7379 		.ascii	"posy2\000"
 7475      3200
 7476              	.LASF48:
 7477 038c 73697A65 		.ascii	"size\000"
 7477      00
 7478              	.LASF22:
 7479 0391 72656369 		.ascii	"recibo\000"
 7479      626F00
 7480              	.LASF24:
 7481 0398 64696E65 		.ascii	"dinero\000"
 7481      726F00
 7482              	.LASF75:
 7483 039f 42756666 		.ascii	"Buffer_LCD1\000"
 7483      65725F4C 
 7483      43443100 
 7484              	.LASF17:
 7485 03ab 65737461 		.ascii	"estado\000"
 7485      646F00
 7486              	.LASF36:
 7487 03b2 70617373 		.ascii	"password_local\000"
 7487      776F7264 
 7487      5F6C6F63 
 7487      616C00
 7488              	.LASF88:
 7489 03c1 70707578 		.ascii	"ppux10\000"
 7489      313000
 7490              	.LASF95:
 7491 03c8 6E6F6D62 		.ascii	"nombre\000"
 7491      726500
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 159


 7492              	.LASF109:
 7493 03cf 6372635F 		.ascii	"crc_total\000"
 7493      746F7461 
 7493      6C00
 7494              	.LASF54:
 7495 03d9 6E6D616E 		.ascii	"nmangueras\000"
 7495      67756572 
 7495      617300
 7496              	.LASF100:
 7497 03e4 69645F6C 		.ascii	"id_logo\000"
 7497      6F676F00 
 7498              	.LASF2:
 7499 03ec 73686F72 		.ascii	"short int\000"
 7499      7420696E 
 7499      7400
 7500              	.LASF4:
 7501 03f6 6C6F6E67 		.ascii	"long int\000"
 7501      20696E74 
 7501      00
 7502              	.LASF56:
 7503 03ff 49544D5F 		.ascii	"ITM_RxBuffer\000"
 7503      52784275 
 7503      66666572 
 7503      00
 7504              	.LASF21:
 7505 040c 73757274 		.ascii	"surtidor\000"
 7505      69646F72 
 7505      00
 7506              	.LASF58:
 7507 0415 636F6D61 		.ascii	"comas1\000"
 7507      733100
 7508              	.LASF59:
 7509 041c 636F6D61 		.ascii	"comas2\000"
 7509      733200
 7510              	.LASF49:
 7511 0423 74656D70 		.ascii	"temp\000"
 7511      00
 7512              	.LASF89:
 7513 0428 6E6F6D62 		.ascii	"nombre_pro1\000"
 7513      72655F70 
 7513      726F3100 
 7514              	.LASF91:
 7515 0434 6E6F6D62 		.ascii	"nombre_pro3\000"
 7515      72655F70 
 7515      726F3300 
 7516              	.LASF39:
 7517 0440 65737461 		.ascii	"estado_ex\000"
 7517      646F5F65 
 7517      7800
 7518              	.LASF45:
 7519 044a 70726F67 		.ascii	"programar\000"
 7519      72616D61 
 7519      7200
 7520              	.LASF16:
 7521 0454 73697A65 		.ascii	"sizetype\000"
 7521      74797065 
 7521      00
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 160


 7522              	.LASF5:
 7523 045d 6C6F6E67 		.ascii	"long unsigned int\000"
 7523      20756E73 
 7523      69676E65 
 7523      6420696E 
 7523      7400
 7524              	.LASF10:
 7525 046f 696E7433 		.ascii	"int32_t\000"
 7525      325F7400 
 7526              	.LASF35:
 7527 0477 6175746F 		.ascii	"autorizado\000"
 7527      72697A61 
 7527      646F00
 7528              	.LASF1:
 7529 0482 756E7369 		.ascii	"unsigned char\000"
 7529      676E6564 
 7529      20636861 
 7529      7200
 7530              	.LASF37:
 7531 0490 6765745F 		.ascii	"get_estado\000"
 7531      65737461 
 7531      646F00
 7532              	.LASF79:
 7533 049b 636F756E 		.ascii	"count_esperaBBB\000"
 7533      745F6573 
 7533      70657261 
 7533      42424200 
 7534              	.LASF101:
 7535 04ab 66656368 		.ascii	"fecha\000"
 7535      6100
 7536              	.LASF42:
 7537 04b1 7665725F 		.ascii	"ver_error\000"
 7537      6572726F 
 7537      7200
 7538              	.LASF106:
 7539 04bb 6F6B5F64 		.ascii	"ok_datosRF\000"
 7539      61746F73 
 7539      524600
 7540              	.LASF90:
 7541 04c6 6E6F6D62 		.ascii	"nombre_pro2\000"
 7541      72655F70 
 7541      726F3200 
 7542              	.LASF0:
 7543 04d2 7369676E 		.ascii	"signed char\000"
 7543      65642063 
 7543      68617200 
 7544              	.LASF46:
 7545 04de 76616C6F 		.ascii	"valor\000"
 7545      7200
 7546              	.LASF77:
 7547 04e4 636F756E 		.ascii	"count_protector\000"
 7547      745F7072 
 7547      6F746563 
 7547      746F7200 
 7548              	.LASF3:
 7549 04f4 73686F72 		.ascii	"short unsigned int\000"
 7549      7420756E 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccCGAbDu.s 			page 161


 7549      7369676E 
 7549      65642069 
 7549      6E7400
 7550              	.LASF11:
 7551 0507 75696E74 		.ascii	"uint8\000"
 7551      3800
 7552              	.LASF14:
 7553 050d 646F7562 		.ascii	"double\000"
 7553      6C6500
 7554              	.LASF40:
 7555 0514 72785F65 		.ascii	"rx_extend\000"
 7555      7874656E 
 7555      6400
 7556              	.LASF85:
 7557 051e 69645F65 		.ascii	"id_estacion\000"
 7557      73746163 
 7557      696F6E00 
 7558              	.LASF27:
 7559 052a 6D616E67 		.ascii	"manguera\000"
 7559      75657261 
 7559      00
 7560              	.LASF19:
 7561 0533 67726164 		.ascii	"grado\000"
 7561      6F00
 7562              	.LASF122:
 7563 0539 52785F53 		.ascii	"Rx_Surtidor\000"
 7563      75727469 
 7563      646F7200 
 7564              	.LASF67:
 7565 0545 73697A65 		.ascii	"sizeletra1\000"
 7565      6C657472 
 7565      613100
 7566              	.LASF70:
 7567 0550 73697A65 		.ascii	"sizeletra2\000"
 7567      6C657472 
 7567      613200
 7568              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
