ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Protocolo.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	count_teclas1,1,1
  19              		.comm	comas1,1,1
  20              		.comm	comas2,1,1
  21              		.comm	id_coma1,1,1
  22              		.comm	id_teclado1,1,1
  23              		.comm	count_teclas2,1,1
  24              		.comm	id_coma2,1,1
  25              		.comm	id_teclado2,1,1
  26              		.comm	posx1,2,2
  27              		.comm	posy1,2,2
  28              		.comm	sizeletra1,2,2
  29              		.comm	posx2,2,2
  30              		.comm	posy2,2,2
  31              		.comm	sizeletra2,2,2
  32              		.comm	teclas1,1,1
  33              		.comm	teclas2,1,1
  34              		.comm	flujo_LCD1,1,1
  35              		.comm	flujo_LCD2,1,1
  36              		.comm	Buffer_LCD1,30,4
  37              		.comm	Buffer_LCD2,30,4
  38              		.comm	count_protector,1,1
  39              		.comm	count_protector2,1,1
  40              		.comm	count_esperaBBB,1,1
  41              		.comm	count_esperaBBB2,1,1
  42              		.comm	password_lcd,9,4
  43              		.comm	imagen_grado,2,2
  44              		.comm	prox_caso,8,4
  45              		.comm	bloqueo_LCD,3,4
  46              		.comm	id_estacion,5,4
  47              		.comm	id_venta,8,4
  48              		.comm	trama_totales,200,4
  49              		.comm	ppux10,1,1
  50              		.comm	nombre_pro1,17,4
  51              		.comm	nombre_pro2,17,4
  52              		.comm	nombre_pro3,17,4
  53              		.comm	version,4,4
  54              		.comm	lado1,93,4
  55              		.comm	lado2,93,4
  56              		.comm	nombre,33,4
  57              		.comm	nit,15,4
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 2


  58              		.comm	telefono,20,4
  59              		.comm	direccion,33,4
  60              		.comm	lema1,32,4
  61              		.comm	lema2,32,4
  62              		.comm	id_logo,2,4
  63              		.comm	km,2,4
  64              		.comm	fecha,3,4
  65              		.comm	hora,2,4
  66              		.comm	rventa1,102,4
  67              		.comm	rventa2,102,4
  68              		.comm	ok_RF,1,1
  69              		.comm	ok_datosRF,1,1
  70              		.comm	rf_mod,200,4
  71              		.comm	buffer_i2c,64,4
  72              		.comm	crc_total,1,1
  73              		.comm	print1,2,4
  74              		.comm	print2,2,4
  75              		.comm	rx_timeout,1,1
  76              		.global	msn_tc
  77              		.data
  78              		.align	2
  79              		.type	msn_tc, %object
  80              		.size	msn_tc, 17
  81              	msn_tc:
  82 0000 544F5441 		.ascii	"TOTALES CORRIENTE"
  82      4C455320 
  82      434F5252 
  82      49454E54 
  82      45
  83              		.global	msn_te
  84 0011 000000   		.align	2
  85              		.type	msn_te, %object
  86              		.size	msn_te, 13
  87              	msn_te:
  88 0014 544F5441 		.ascii	"TOTALES EXTRA"
  88      4C455320 
  88      45585452 
  88      41
  89              		.global	msn_td
  90 0021 000000   		.align	2
  91              		.type	msn_td, %object
  92              		.size	msn_td, 14
  93              	msn_td:
  94 0024 544F5441 		.ascii	"TOTALES DIESEL"
  94      4C455320 
  94      44494553 
  94      454C
  95              		.global	msn_lecact
  96 0032 0000     		.align	2
  97              		.type	msn_lecact, %object
  98              		.size	msn_lecact, 15
  99              	msn_lecact:
 100 0034 4C656374 		.ascii	"Lectura Actual:"
 100      75726120 
 100      41637475 
 100      616C3A
 101              		.global	msn_lecaan
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 3


 102 0043 00       		.align	2
 103              		.type	msn_lecaan, %object
 104              		.size	msn_lecaan, 17
 105              	msn_lecaan:
 106 0044 4C656374 		.ascii	"Lectura Anterior:"
 106      75726120 
 106      416E7465 
 106      72696F72 
 106      3A
 107              		.global	msn_tventas
 108 0055 000000   		.align	2
 109              		.type	msn_tventas, %object
 110              		.size	msn_tventas, 18
 111              	msn_tventas:
 112 0058 546F7461 		.ascii	"Total de Ventas: $"
 112      6C206465 
 112      2056656E 
 112      7461733A 
 112      2024
 113 006a 0000     		.section	.text.Rx_Surtidor,"ax",%progbits
 114              		.align	2
 115              		.global	Rx_Surtidor
 116              		.thumb
 117              		.thumb_func
 118              		.type	Rx_Surtidor, %function
 119              	Rx_Surtidor:
 120              	.LFB63:
 121              		.file 1 ".\\Protocolo.c"
   1:.\Protocolo.c **** /**
   2:.\Protocolo.c **** * @file Protocolo.c
   3:.\Protocolo.c **** * @Author Insepet LTDA
   4:.\Protocolo.c **** * @date 28/2/2016
   5:.\Protocolo.c **** * @brief Archivo para el manejo del dispensador, comunicación del MUX-Dispensador
   6:.\Protocolo.c **** */
   7:.\Protocolo.c **** 
   8:.\Protocolo.c **** 
   9:.\Protocolo.c **** /*
  10:.\Protocolo.c **** ***************************************************************************************************
  11:.\Protocolo.c **** *                                             INCLUDE FILES
  12:.\Protocolo.c **** ***************************************************************************************************
  13:.\Protocolo.c **** */
  14:.\Protocolo.c **** #include <device.h>
  15:.\Protocolo.c **** #include "VariablesG.h"
  16:.\Protocolo.c **** #include "i2c.h"
  17:.\Protocolo.c **** #include "Print.h"
  18:.\Protocolo.c **** 
  19:.\Protocolo.c **** /*
  20:.\Protocolo.c **** ***************************************************************************************************
  21:.\Protocolo.c **** *                                            	MENSAJES
  22:.\Protocolo.c **** ***************************************************************************************************
  23:.\Protocolo.c **** */
  24:.\Protocolo.c **** uint8 rx_timeout;								//0 inicia espera  1 se cumplio el tiempo
  25:.\Protocolo.c **** uint8 msn_tc[17]="TOTALES CORRIENTE";
  26:.\Protocolo.c **** uint8 msn_te[13]="TOTALES EXTRA";
  27:.\Protocolo.c **** uint8 msn_td[14]="TOTALES DIESEL";
  28:.\Protocolo.c **** uint8 msn_lecact[15]="Lectura Actual:";
  29:.\Protocolo.c **** uint8 msn_lecaan[17]="Lectura Anterior:";
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 4


  30:.\Protocolo.c **** uint8 msn_tventas[18]="Total de Ventas: $";
  31:.\Protocolo.c **** 
  32:.\Protocolo.c **** /**
  33:.\Protocolo.c **** * Interrupción de tiempo para la espera de datos del surtidor
  34:.\Protocolo.c **** */
  35:.\Protocolo.c **** CY_ISR(Rx_Surtidor){
 122              		.loc 1 35 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 1, uses_anonymous_args = 0
 126 0000 80B5     		push	{r7, lr}
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 7, -8
 129              		.cfi_offset 14, -4
 130 0002 00AF     		add	r7, sp, #0
 131              		.cfi_def_cfa_register 7
  36:.\Protocolo.c ****     Timer_RxSurtidor_ReadStatusRegister();
 132              		.loc 1 36 0
 133 0004 FFF7FEFF 		bl	Timer_RxSurtidor_ReadStatusRegister
  37:.\Protocolo.c **** 	rx_timeout=1;	
 134              		.loc 1 37 0
 135 0008 014B     		ldr	r3, .L2
 136 000a 0122     		movs	r2, #1
 137 000c 1A70     		strb	r2, [r3]
  38:.\Protocolo.c **** }
 138              		.loc 1 38 0
 139 000e 80BD     		pop	{r7, pc}
 140              	.L3:
 141              		.align	2
 142              	.L2:
 143 0010 00000000 		.word	rx_timeout
 144              		.cfi_endproc
 145              	.LFE63:
 146              		.size	Rx_Surtidor, .-Rx_Surtidor
 147              		.section	.text.get_estado,"ax",%progbits
 148              		.align	2
 149              		.global	get_estado
 150              		.thumb
 151              		.thumb_func
 152              		.type	get_estado, %function
 153              	get_estado:
 154              	.LFB64:
  39:.\Protocolo.c **** 
  40:.\Protocolo.c **** 
  41:.\Protocolo.c **** /**
  42:.\Protocolo.c **** * get_estado
  43:.\Protocolo.c **** * @brief obtiene el estado de la posicion a la que se pregunte
  44:.\Protocolo.c **** * @param dir direccion de la posicion
  45:.\Protocolo.c **** * @return estado si hay respuesta del dispensador 0 si no
  46:.\Protocolo.c **** *
  47:.\Protocolo.c **** */
  48:.\Protocolo.c **** uint8 get_estado(uint8 dir){
 155              		.loc 1 48 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 16
 158              		@ frame_needed = 1, uses_anonymous_args = 0
 159 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 5


 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 7, -8
 162              		.cfi_offset 14, -4
 163 0002 84B0     		sub	sp, sp, #16
 164              		.cfi_def_cfa_offset 24
 165 0004 00AF     		add	r7, sp, #0
 166              		.cfi_def_cfa_register 7
 167 0006 0346     		mov	r3, r0
 168 0008 FB71     		strb	r3, [r7, #7]
  49:.\Protocolo.c ****     uint8 estado;
  50:.\Protocolo.c ****     Surtidor_ClearRxBuffer();	
 169              		.loc 1 50 0
 170 000a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
  51:.\Protocolo.c ****     Surtidor_PutChar(dir);
 171              		.loc 1 51 0
 172 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 173 0010 1846     		mov	r0, r3
 174 0012 FFF7FEFF 		bl	Surtidor_PutChar
  52:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 175              		.loc 1 52 0
 176 0016 1E48     		ldr	r0, .L9
 177 0018 FFF7FEFF 		bl	isr_1_StartEx
  53:.\Protocolo.c ****     Timer_RxSurtidor_Start();
 178              		.loc 1 53 0
 179 001c FFF7FEFF 		bl	Timer_RxSurtidor_Start
  54:.\Protocolo.c **** 	rx_timeout=0;
 180              		.loc 1 54 0
 181 0020 1C4B     		ldr	r3, .L9+4
 182 0022 0022     		movs	r2, #0
 183 0024 1A70     		strb	r2, [r3]
  55:.\Protocolo.c ****     CyDelay(10);
 184              		.loc 1 55 0
 185 0026 0A20     		movs	r0, #10
 186 0028 FFF7FEFF 		bl	CyDelay
  56:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 187              		.loc 1 56 0
 188 002c 0BE0     		b	.L5
 189              	.L7:
  57:.\Protocolo.c **** 		if(rx_timeout==1){
 190              		.loc 1 57 0
 191 002e 194B     		ldr	r3, .L9+4
 192 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 193 0032 012B     		cmp	r3, #1
 194 0034 07D1     		bne	.L5
  58:.\Protocolo.c **** 			isr_1_Stop();
 195              		.loc 1 58 0
 196 0036 FFF7FEFF 		bl	isr_1_Stop
  59:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 197              		.loc 1 59 0
 198 003a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
  60:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 199              		.loc 1 60 0
 200 003e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
  61:.\Protocolo.c **** 			return 0;
 201              		.loc 1 61 0
 202 0042 0023     		movs	r3, #0
 203 0044 20E0     		b	.L6
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 6


 204              	.L5:
  56:.\Protocolo.c **** 		if(rx_timeout==1){
 205              		.loc 1 56 0
 206 0046 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 207 004a 0346     		mov	r3, r0
 208 004c 002B     		cmp	r3, #0
 209 004e EED0     		beq	.L7
  62:.\Protocolo.c **** 		}
  63:.\Protocolo.c **** 	}
  64:.\Protocolo.c ****     estado=Surtidor_ReadRxData();
 210              		.loc 1 64 0
 211 0050 FFF7FEFF 		bl	Surtidor_ReadRxData
 212 0054 0346     		mov	r3, r0
 213 0056 FB73     		strb	r3, [r7, #15]
  65:.\Protocolo.c **** 	if((estado&0x0F)==dir){
 214              		.loc 1 65 0
 215 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 216 005a 03F00F02 		and	r2, r3, #15
 217 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 218 0060 9A42     		cmp	r2, r3
 219 0062 0AD1     		bne	.L8
  66:.\Protocolo.c **** 		estado=(estado&0xF0)>>4;
 220              		.loc 1 66 0
 221 0064 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 222 0066 1B09     		lsrs	r3, r3, #4
 223 0068 FB73     		strb	r3, [r7, #15]
  67:.\Protocolo.c **** 	    Surtidor_ClearRxBuffer();
 224              		.loc 1 67 0
 225 006a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
  68:.\Protocolo.c **** 		isr_1_Stop();
 226              		.loc 1 68 0
 227 006e FFF7FEFF 		bl	isr_1_Stop
  69:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();	
 228              		.loc 1 69 0
 229 0072 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
  70:.\Protocolo.c **** 	    return estado;
 230              		.loc 1 70 0
 231 0076 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 232 0078 06E0     		b	.L6
 233              	.L8:
  71:.\Protocolo.c **** 	}
  72:.\Protocolo.c **** 	else{
  73:.\Protocolo.c **** 	    Surtidor_ClearRxBuffer();
 234              		.loc 1 73 0
 235 007a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
  74:.\Protocolo.c **** 		isr_1_Stop();
 236              		.loc 1 74 0
 237 007e FFF7FEFF 		bl	isr_1_Stop
  75:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();	
 238              		.loc 1 75 0
 239 0082 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
  76:.\Protocolo.c **** 	    return 0;	
 240              		.loc 1 76 0
 241 0086 0023     		movs	r3, #0
 242              	.L6:
  77:.\Protocolo.c **** 	}
  78:.\Protocolo.c **** }
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 7


 243              		.loc 1 78 0
 244 0088 1846     		mov	r0, r3
 245 008a 1037     		adds	r7, r7, #16
 246              		.cfi_def_cfa_offset 8
 247 008c BD46     		mov	sp, r7
 248              		.cfi_def_cfa_register 13
 249              		@ sp needed
 250 008e 80BD     		pop	{r7, pc}
 251              	.L10:
 252              		.align	2
 253              	.L9:
 254 0090 00000000 		.word	Rx_Surtidor
 255 0094 00000000 		.word	rx_timeout
 256              		.cfi_endproc
 257              	.LFE64:
 258              		.size	get_estado, .-get_estado
 259              		.section	.text.ver_pos,"ax",%progbits
 260              		.align	2
 261              		.global	ver_pos
 262              		.thumb
 263              		.thumb_func
 264              		.type	ver_pos, %function
 265              	ver_pos:
 266              	.LFB65:
  79:.\Protocolo.c **** 
  80:.\Protocolo.c **** /**
  81:.\Protocolo.c **** * ver_pos
  82:.\Protocolo.c **** * @brief detecta las posiciones del equipo
  83:.\Protocolo.c **** * @return 1 si detecta las dos posiciones 0 si no
  84:.\Protocolo.c **** *
  85:.\Protocolo.c **** */
  86:.\Protocolo.c **** uint8 ver_pos (void){
 267              		.loc 1 86 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 8
 270              		@ frame_needed = 1, uses_anonymous_args = 0
 271 0000 80B5     		push	{r7, lr}
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 7, -8
 274              		.cfi_offset 14, -4
 275 0002 82B0     		sub	sp, sp, #8
 276              		.cfi_def_cfa_offset 16
 277 0004 00AF     		add	r7, sp, #0
 278              		.cfi_def_cfa_register 7
  87:.\Protocolo.c **** uint8 x;
  88:.\Protocolo.c **** lado1.dir=0xff;
 279              		.loc 1 88 0
 280 0006 244B     		ldr	r3, .L19
 281 0008 FF22     		movs	r2, #255
 282 000a 1A70     		strb	r2, [r3]
  89:.\Protocolo.c **** lado2.dir=0xff;
 283              		.loc 1 89 0
 284 000c 234B     		ldr	r3, .L19+4
 285 000e FF22     		movs	r2, #255
 286 0010 1A70     		strb	r2, [r3]
  90:.\Protocolo.c **** 	CyDelay(5);
 287              		.loc 1 90 0
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 8


 288 0012 0520     		movs	r0, #5
 289 0014 FFF7FEFF 		bl	CyDelay
  91:.\Protocolo.c ****     if(get_estado(0)!=0){
 290              		.loc 1 91 0
 291 0018 0020     		movs	r0, #0
 292 001a FFF7FEFF 		bl	get_estado
 293 001e 0346     		mov	r3, r0
 294 0020 002B     		cmp	r3, #0
 295 0022 02D0     		beq	.L12
  92:.\Protocolo.c **** 		lado2.dir=0;
 296              		.loc 1 92 0
 297 0024 1D4B     		ldr	r3, .L19+4
 298 0026 0022     		movs	r2, #0
 299 0028 1A70     		strb	r2, [r3]
 300              	.L12:
  93:.\Protocolo.c **** 	}	
  94:.\Protocolo.c ****     for(x=1;x<=15;x++){
 301              		.loc 1 94 0
 302 002a 0123     		movs	r3, #1
 303 002c FB71     		strb	r3, [r7, #7]
 304 002e 1FE0     		b	.L13
 305              	.L17:
  95:.\Protocolo.c **** 		CyDelay(5);
 306              		.loc 1 95 0
 307 0030 0520     		movs	r0, #5
 308 0032 FFF7FEFF 		bl	CyDelay
  96:.\Protocolo.c ****         if(get_estado(x)!=0){
 309              		.loc 1 96 0
 310 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 311 0038 1846     		mov	r0, r3
 312 003a FFF7FEFF 		bl	get_estado
 313 003e 0346     		mov	r3, r0
 314 0040 002B     		cmp	r3, #0
 315 0042 12D0     		beq	.L14
  97:.\Protocolo.c **** 			if(lado1.dir==0xFF){
 316              		.loc 1 97 0
 317 0044 144B     		ldr	r3, .L19
 318 0046 1B78     		ldrb	r3, [r3]
 319 0048 DBB2     		uxtb	r3, r3
 320 004a FF2B     		cmp	r3, #255
 321 004c 03D1     		bne	.L15
  98:.\Protocolo.c **** 				lado1.dir=x;
 322              		.loc 1 98 0
 323 004e 124A     		ldr	r2, .L19
 324 0050 FB79     		ldrb	r3, [r7, #7]
 325 0052 1370     		strb	r3, [r2]
 326 0054 09E0     		b	.L14
 327              	.L15:
  99:.\Protocolo.c **** 			}
 100:.\Protocolo.c **** 			else if(lado2.dir==0xFF){
 328              		.loc 1 100 0
 329 0056 114B     		ldr	r3, .L19+4
 330 0058 1B78     		ldrb	r3, [r3]
 331 005a DBB2     		uxtb	r3, r3
 332 005c FF2B     		cmp	r3, #255
 333 005e 04D1     		bne	.L14
 101:.\Protocolo.c **** 				lado2.dir=x;
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 9


 334              		.loc 1 101 0
 335 0060 0E4A     		ldr	r2, .L19+4
 336 0062 FB79     		ldrb	r3, [r7, #7]
 337 0064 1370     		strb	r3, [r2]
 102:.\Protocolo.c **** 				return 1;
 338              		.loc 1 102 0
 339 0066 0123     		movs	r3, #1
 340 0068 12E0     		b	.L16
 341              	.L14:
  94:.\Protocolo.c **** 		CyDelay(5);
 342              		.loc 1 94 0 discriminator 2
 343 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 344 006c 0133     		adds	r3, r3, #1
 345 006e FB71     		strb	r3, [r7, #7]
 346              	.L13:
  94:.\Protocolo.c **** 		CyDelay(5);
 347              		.loc 1 94 0 is_stmt 0 discriminator 1
 348 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 349 0072 0F2B     		cmp	r3, #15
 350 0074 DCD9     		bls	.L17
 103:.\Protocolo.c **** 			}
 104:.\Protocolo.c **** 		}
 105:.\Protocolo.c **** 	}
 106:.\Protocolo.c **** 	if((lado1.dir!=0xFF)&&(lado2.dir!=0xFF)){
 351              		.loc 1 106 0 is_stmt 1
 352 0076 084B     		ldr	r3, .L19
 353 0078 1B78     		ldrb	r3, [r3]
 354 007a DBB2     		uxtb	r3, r3
 355 007c FF2B     		cmp	r3, #255
 356 007e 06D0     		beq	.L18
 357              		.loc 1 106 0 is_stmt 0 discriminator 1
 358 0080 064B     		ldr	r3, .L19+4
 359 0082 1B78     		ldrb	r3, [r3]
 360 0084 DBB2     		uxtb	r3, r3
 361 0086 FF2B     		cmp	r3, #255
 362 0088 01D0     		beq	.L18
 107:.\Protocolo.c **** 		return 1;
 363              		.loc 1 107 0 is_stmt 1
 364 008a 0123     		movs	r3, #1
 365 008c 00E0     		b	.L16
 366              	.L18:
 108:.\Protocolo.c **** 	}
 109:.\Protocolo.c **** 	else{
 110:.\Protocolo.c **** 		return 0;
 367              		.loc 1 110 0
 368 008e 0023     		movs	r3, #0
 369              	.L16:
 111:.\Protocolo.c **** 	}
 112:.\Protocolo.c **** }
 370              		.loc 1 112 0
 371 0090 1846     		mov	r0, r3
 372 0092 0837     		adds	r7, r7, #8
 373              		.cfi_def_cfa_offset 8
 374 0094 BD46     		mov	sp, r7
 375              		.cfi_def_cfa_register 13
 376              		@ sp needed
 377 0096 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 10


 378              	.L20:
 379              		.align	2
 380              	.L19:
 381 0098 00000000 		.word	lado1
 382 009c 00000000 		.word	lado2
 383              		.cfi_endproc
 384              	.LFE65:
 385              		.size	ver_pos, .-ver_pos
 386              		.section	.rodata
 387              		.align	2
 388              	.LC0:
 389 0000 FF       		.byte	-1
 390 0001 E9       		.byte	-23
 391 0002 FE       		.byte	-2
 392 0003 E0       		.byte	-32
 393 0004 E1       		.byte	-31
 394 0005 E0       		.byte	-32
 395 0006 FB       		.byte	-5
 396 0007 EE       		.byte	-18
 397 0008 F0       		.byte	-16
 398 0009 000000   		.section	.text.estado_ex,"ax",%progbits
 399              		.align	2
 400              		.global	estado_ex
 401              		.thumb
 402              		.thumb_func
 403              		.type	estado_ex, %function
 404              	estado_ex:
 405              	.LFB66:
 113:.\Protocolo.c **** 
 114:.\Protocolo.c **** 
 115:.\Protocolo.c **** /**
 116:.\Protocolo.c **** * estado_ex
 117:.\Protocolo.c **** * @brief funcion para obtener el número de manija levantada
 118:.\Protocolo.c **** * @param val posición del surtidor, lado de la manija que se levantó
 119:.\Protocolo.c **** * @return 0 si error, # de manija
 120:.\Protocolo.c **** *
 121:.\Protocolo.c **** */
 122:.\Protocolo.c **** uint8 estado_ex(uint8 val){
 406              		.loc 1 122 0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 40
 409              		@ frame_needed = 1, uses_anonymous_args = 0
 410 0000 90B5     		push	{r4, r7, lr}
 411              		.cfi_def_cfa_offset 12
 412              		.cfi_offset 4, -12
 413              		.cfi_offset 7, -8
 414              		.cfi_offset 14, -4
 415 0002 8BB0     		sub	sp, sp, #44
 416              		.cfi_def_cfa_offset 56
 417 0004 00AF     		add	r7, sp, #0
 418              		.cfi_def_cfa_register 7
 419 0006 0346     		mov	r3, r0
 420 0008 FB71     		strb	r3, [r7, #7]
 123:.\Protocolo.c ****     uint8 rx_extend[19],x,comand_exten[9]={0xFF,0xE9,0xFE,0xE0,0xE1,0xE0,0xFB,0xEE,0xF0};
 421              		.loc 1 123 0
 422 000a 594A     		ldr	r2, .L39
 423 000c 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 11


 424 0010 1068     		ldr	r0, [r2]	@ unaligned
 425 0012 5168     		ldr	r1, [r2, #4]	@ unaligned
 426 0014 03C3     		stmia	r3!, {r0, r1}
 427 0016 127A     		ldrb	r2, [r2, #8]
 428 0018 1A70     		strb	r2, [r3]
 124:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 429              		.loc 1 124 0
 430 001a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 125:.\Protocolo.c ****     Surtidor_PutChar(0x20|val);
 431              		.loc 1 125 0
 432 001e FB79     		ldrb	r3, [r7, #7]
 433 0020 43F02003 		orr	r3, r3, #32
 434 0024 DBB2     		uxtb	r3, r3
 435 0026 1846     		mov	r0, r3
 436 0028 FFF7FEFF 		bl	Surtidor_PutChar
 126:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 437              		.loc 1 126 0
 438 002c 5148     		ldr	r0, .L39+4
 439 002e FFF7FEFF 		bl	isr_1_StartEx
 127:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 440              		.loc 1 127 0
 441 0032 FFF7FEFF 		bl	Timer_RxSurtidor_Start
 128:.\Protocolo.c ****     rx_timeout=0;
 442              		.loc 1 128 0
 443 0036 504B     		ldr	r3, .L39+8
 444 0038 0022     		movs	r2, #0
 445 003a 1A70     		strb	r2, [r3]
 129:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 446              		.loc 1 129 0
 447 003c 0BE0     		b	.L22
 448              	.L24:
 130:.\Protocolo.c **** 		if(rx_timeout==1){
 449              		.loc 1 130 0
 450 003e 4E4B     		ldr	r3, .L39+8
 451 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 452 0042 012B     		cmp	r3, #1
 453 0044 07D1     		bne	.L22
 131:.\Protocolo.c **** 			isr_1_Stop();
 454              		.loc 1 131 0
 455 0046 FFF7FEFF 		bl	isr_1_Stop
 132:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 456              		.loc 1 132 0
 457 004a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 133:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 458              		.loc 1 133 0
 459 004e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 134:.\Protocolo.c **** 			return 0;
 460              		.loc 1 134 0
 461 0052 0023     		movs	r3, #0
 462 0054 88E0     		b	.L37
 463              	.L22:
 129:.\Protocolo.c **** 		if(rx_timeout==1){
 464              		.loc 1 129 0
 465 0056 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 466 005a 0346     		mov	r3, r0
 467 005c 002B     		cmp	r3, #0
 468 005e EED0     		beq	.L24
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 12


 135:.\Protocolo.c **** 		}
 136:.\Protocolo.c **** 	}
 137:.\Protocolo.c **** 	isr_1_Stop();
 469              		.loc 1 137 0
 470 0060 FFF7FEFF 		bl	isr_1_Stop
 138:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();	
 471              		.loc 1 138 0
 472 0064 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 139:.\Protocolo.c ****     if(Surtidor_ReadRxData()==(0xD0|val)){
 473              		.loc 1 139 0
 474 0068 FFF7FEFF 		bl	Surtidor_ReadRxData
 475 006c 0346     		mov	r3, r0
 476 006e 1A46     		mov	r2, r3
 477 0070 FB79     		ldrb	r3, [r7, #7]
 478 0072 63F02F03 		orn	r3, r3, #47
 479 0076 DBB2     		uxtb	r3, r3
 480 0078 9A42     		cmp	r2, r3
 481 007a 74D1     		bne	.L25
 140:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 482              		.loc 1 140 0
 483 007c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 141:.\Protocolo.c **** 		CyDelay(5);
 484              		.loc 1 141 0
 485 0080 0520     		movs	r0, #5
 486 0082 FFF7FEFF 		bl	CyDelay
 142:.\Protocolo.c ****         for(x=0;x<=8;x++){
 487              		.loc 1 142 0
 488 0086 0023     		movs	r3, #0
 489 0088 87F82730 		strb	r3, [r7, #39]
 490 008c 0EE0     		b	.L26
 491              	.L27:
 143:.\Protocolo.c ****            Surtidor_PutChar(comand_exten[x]); 
 492              		.loc 1 143 0 discriminator 3
 493 008e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 494 0092 07F12802 		add	r2, r7, #40
 495 0096 1344     		add	r3, r3, r2
 496 0098 13F8203C 		ldrb	r3, [r3, #-32]	@ zero_extendqisi2
 497 009c 1846     		mov	r0, r3
 498 009e FFF7FEFF 		bl	Surtidor_PutChar
 142:.\Protocolo.c ****         for(x=0;x<=8;x++){
 499              		.loc 1 142 0 discriminator 3
 500 00a2 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 501 00a6 0133     		adds	r3, r3, #1
 502 00a8 87F82730 		strb	r3, [r7, #39]
 503              	.L26:
 142:.\Protocolo.c ****         for(x=0;x<=8;x++){
 504              		.loc 1 142 0 is_stmt 0 discriminator 1
 505 00ac 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 506 00b0 082B     		cmp	r3, #8
 507 00b2 ECD9     		bls	.L27
 144:.\Protocolo.c ****         }
 145:.\Protocolo.c **** 		isr_1_StartEx(Rx_Surtidor);
 508              		.loc 1 145 0 is_stmt 1
 509 00b4 2F48     		ldr	r0, .L39+4
 510 00b6 FFF7FEFF 		bl	isr_1_StartEx
 146:.\Protocolo.c **** 	    Timer_RxSurtidor_Start();	
 511              		.loc 1 146 0
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 13


 512 00ba FFF7FEFF 		bl	Timer_RxSurtidor_Start
 147:.\Protocolo.c **** 	    rx_timeout=0;
 513              		.loc 1 147 0
 514 00be 2E4B     		ldr	r3, .L39+8
 515 00c0 0022     		movs	r2, #0
 516 00c2 1A70     		strb	r2, [r3]
 148:.\Protocolo.c **** 		while(Surtidor_GetRxBufferSize()!=19){
 517              		.loc 1 148 0
 518 00c4 0BE0     		b	.L28
 519              	.L29:
 149:.\Protocolo.c **** 			if(rx_timeout==1){
 520              		.loc 1 149 0
 521 00c6 2C4B     		ldr	r3, .L39+8
 522 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 523 00ca 012B     		cmp	r3, #1
 524 00cc 07D1     		bne	.L28
 150:.\Protocolo.c **** 				isr_1_Stop();
 525              		.loc 1 150 0
 526 00ce FFF7FEFF 		bl	isr_1_Stop
 151:.\Protocolo.c **** 				Timer_RxSurtidor_Stop();
 527              		.loc 1 151 0
 528 00d2 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 152:.\Protocolo.c **** 	    		Surtidor_ClearRxBuffer();			
 529              		.loc 1 152 0
 530 00d6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 153:.\Protocolo.c **** 				return 0;
 531              		.loc 1 153 0
 532 00da 0023     		movs	r3, #0
 533 00dc 44E0     		b	.L37
 534              	.L28:
 148:.\Protocolo.c **** 			if(rx_timeout==1){
 535              		.loc 1 148 0
 536 00de FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 537 00e2 0346     		mov	r3, r0
 538 00e4 132B     		cmp	r3, #19
 539 00e6 EED1     		bne	.L29
 154:.\Protocolo.c **** 			}
 155:.\Protocolo.c **** 		}       
 156:.\Protocolo.c **** 		isr_1_Stop();
 540              		.loc 1 156 0
 541 00e8 FFF7FEFF 		bl	isr_1_Stop
 157:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();		
 542              		.loc 1 157 0
 543 00ec FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 158:.\Protocolo.c ****         for(x=0;x<=18;x++){
 544              		.loc 1 158 0
 545 00f0 0023     		movs	r3, #0
 546 00f2 87F82730 		strb	r3, [r7, #39]
 547 00f6 0FE0     		b	.L30
 548              	.L31:
 159:.\Protocolo.c ****            rx_extend[x]=Surtidor_ReadRxData(); 
 549              		.loc 1 159 0 discriminator 3
 550 00f8 97F82740 		ldrb	r4, [r7, #39]	@ zero_extendqisi2
 551 00fc FFF7FEFF 		bl	Surtidor_ReadRxData
 552 0100 0346     		mov	r3, r0
 553 0102 1A46     		mov	r2, r3
 554 0104 07F12803 		add	r3, r7, #40
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 14


 555 0108 2344     		add	r3, r3, r4
 556 010a 03F8142C 		strb	r2, [r3, #-20]
 158:.\Protocolo.c ****         for(x=0;x<=18;x++){
 557              		.loc 1 158 0 discriminator 3
 558 010e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 559 0112 0133     		adds	r3, r3, #1
 560 0114 87F82730 		strb	r3, [r7, #39]
 561              	.L30:
 158:.\Protocolo.c ****         for(x=0;x<=18;x++){
 562              		.loc 1 158 0 is_stmt 0 discriminator 1
 563 0118 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 564 011c 122B     		cmp	r3, #18
 565 011e EBD9     		bls	.L31
 160:.\Protocolo.c ****         }
 161:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 566              		.loc 1 161 0 is_stmt 1
 567 0120 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 162:.\Protocolo.c ****         if((rx_extend[0]==0xBA)&&(rx_extend[17]==0x8D)&&(rx_extend[18]==0x8A)&&(rx_extend[12]==0xB1
 568              		.loc 1 162 0
 569 0124 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 570 0126 BA2B     		cmp	r3, #186
 571 0128 1BD1     		bne	.L32
 572              		.loc 1 162 0 is_stmt 0 discriminator 1
 573 012a 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 574 012e 8D2B     		cmp	r3, #141
 575 0130 17D1     		bne	.L32
 576              		.loc 1 162 0 discriminator 2
 577 0132 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 578 0136 8A2B     		cmp	r3, #138
 579 0138 13D1     		bne	.L32
 580              		.loc 1 162 0 discriminator 3
 581 013a 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 582 013e B12B     		cmp	r3, #177
 583 0140 0FD1     		bne	.L32
 163:.\Protocolo.c ****             switch(rx_extend[14]){
 584              		.loc 1 163 0 is_stmt 1
 585 0142 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 586 0146 B22B     		cmp	r3, #178
 587 0148 05D0     		beq	.L34
 588 014a B32B     		cmp	r3, #179
 589 014c 05D0     		beq	.L35
 590 014e B12B     		cmp	r3, #177
 591 0150 05D1     		bne	.L38
 164:.\Protocolo.c ****                 case 0xB1:
 165:.\Protocolo.c ****                     return 1;
 592              		.loc 1 165 0
 593 0152 0123     		movs	r3, #1
 594 0154 08E0     		b	.L37
 595              	.L34:
 166:.\Protocolo.c ****                 break;
 167:.\Protocolo.c ****                 case 0xB2:
 168:.\Protocolo.c ****                     return 2;
 596              		.loc 1 168 0
 597 0156 0223     		movs	r3, #2
 598 0158 06E0     		b	.L37
 599              	.L35:
 169:.\Protocolo.c ****                 break;
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 15


 170:.\Protocolo.c ****                 case 0xB3:
 171:.\Protocolo.c ****                     return 3;
 600              		.loc 1 171 0
 601 015a 0323     		movs	r3, #3
 602 015c 04E0     		b	.L37
 603              	.L38:
 172:.\Protocolo.c ****                 break;
 173:.\Protocolo.c ****                 default:
 174:.\Protocolo.c ****                 	return 0;
 604              		.loc 1 174 0
 605 015e 0023     		movs	r3, #0
 606 0160 02E0     		b	.L37
 607              	.L32:
 175:.\Protocolo.c **** 				break;
 176:.\Protocolo.c ****             }
 177:.\Protocolo.c ****         }
 178:.\Protocolo.c ****         else{
 179:.\Protocolo.c ****             return 0;
 608              		.loc 1 179 0
 609 0162 0023     		movs	r3, #0
 610 0164 00E0     		b	.L37
 611              	.L25:
 180:.\Protocolo.c ****         }
 181:.\Protocolo.c ****     }
 182:.\Protocolo.c ****     else{
 183:.\Protocolo.c ****         return 0;
 612              		.loc 1 183 0
 613 0166 0023     		movs	r3, #0
 614              	.L37:
 184:.\Protocolo.c ****     }
 185:.\Protocolo.c **** }
 615              		.loc 1 185 0
 616 0168 1846     		mov	r0, r3
 617 016a 2C37     		adds	r7, r7, #44
 618              		.cfi_def_cfa_offset 12
 619 016c BD46     		mov	sp, r7
 620              		.cfi_def_cfa_register 13
 621              		@ sp needed
 622 016e 90BD     		pop	{r4, r7, pc}
 623              	.L40:
 624              		.align	2
 625              	.L39:
 626 0170 00000000 		.word	.LC0
 627 0174 00000000 		.word	Rx_Surtidor
 628 0178 00000000 		.word	rx_timeout
 629              		.cfi_endproc
 630              	.LFE66:
 631              		.size	estado_ex, .-estado_ex
 632              		.section	.text.detener,"ax",%progbits
 633              		.align	2
 634              		.global	detener
 635              		.thumb
 636              		.thumb_func
 637              		.type	detener, %function
 638              	detener:
 639              	.LFB67:
 186:.\Protocolo.c **** 
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 16


 187:.\Protocolo.c **** /**
 188:.\Protocolo.c **** * detener
 189:.\Protocolo.c **** * @brief Envía un stop a la posición seleccionada
 190:.\Protocolo.c **** * @param val posición del surtidor
 191:.\Protocolo.c **** *
 192:.\Protocolo.c **** */
 193:.\Protocolo.c **** void detener(uint8 val){
 640              		.loc 1 193 0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 8
 643              		@ frame_needed = 1, uses_anonymous_args = 0
 644 0000 80B5     		push	{r7, lr}
 645              		.cfi_def_cfa_offset 8
 646              		.cfi_offset 7, -8
 647              		.cfi_offset 14, -4
 648 0002 82B0     		sub	sp, sp, #8
 649              		.cfi_def_cfa_offset 16
 650 0004 00AF     		add	r7, sp, #0
 651              		.cfi_def_cfa_register 7
 652 0006 0346     		mov	r3, r0
 653 0008 FB71     		strb	r3, [r7, #7]
 194:.\Protocolo.c ****     Surtidor_PutChar(0x30|val);
 654              		.loc 1 194 0
 655 000a FB79     		ldrb	r3, [r7, #7]
 656 000c 43F03003 		orr	r3, r3, #48
 657 0010 DBB2     		uxtb	r3, r3
 658 0012 1846     		mov	r0, r3
 659 0014 FFF7FEFF 		bl	Surtidor_PutChar
 195:.\Protocolo.c ****     CyDelay(200);
 660              		.loc 1 195 0
 661 0018 C820     		movs	r0, #200
 662 001a FFF7FEFF 		bl	CyDelay
 196:.\Protocolo.c **** }
 663              		.loc 1 196 0
 664 001e 0837     		adds	r7, r7, #8
 665              		.cfi_def_cfa_offset 8
 666 0020 BD46     		mov	sp, r7
 667              		.cfi_def_cfa_register 13
 668              		@ sp needed
 669 0022 80BD     		pop	{r7, pc}
 670              		.cfi_endproc
 671              	.LFE67:
 672              		.size	detener, .-detener
 673              		.section	.text.venta,"ax",%progbits
 674              		.align	2
 675              		.global	venta
 676              		.thumb
 677              		.thumb_func
 678              		.type	venta, %function
 679              	venta:
 680              	.LFB68:
 197:.\Protocolo.c **** 
 198:.\Protocolo.c **** /**
 199:.\Protocolo.c **** * venta
 200:.\Protocolo.c **** * @brief La función se llama cuando hay un FEOT o PEOT, obtiene los datos de la última venta
 201:.\Protocolo.c **** * almacena la venta en eeprom para utilizar los datos en otros procesos
 202:.\Protocolo.c **** 
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 17


 203:.\Protocolo.c **** * @param val posición del surtidor
 204:.\Protocolo.c **** * @return 0 si hay error, 1 si se almacena la venta    
 205:.\Protocolo.c **** *
 206:.\Protocolo.c **** */
 207:.\Protocolo.c **** uint8 venta(uint8 dir){
 681              		.loc 1 207 0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 16
 684              		@ frame_needed = 1, uses_anonymous_args = 0
 685 0000 80B5     		push	{r7, lr}
 686              		.cfi_def_cfa_offset 8
 687              		.cfi_offset 7, -8
 688              		.cfi_offset 14, -4
 689 0002 84B0     		sub	sp, sp, #16
 690              		.cfi_def_cfa_offset 24
 691 0004 00AF     		add	r7, sp, #0
 692              		.cfi_def_cfa_register 7
 693 0006 0346     		mov	r3, r0
 694 0008 FB71     		strb	r3, [r7, #7]
 208:.\Protocolo.c **** 	uint8 x;
 209:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 695              		.loc 1 209 0
 696 000a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 210:.\Protocolo.c **** 	Surtidor_PutChar(0x40|dir);
 697              		.loc 1 210 0
 698 000e FB79     		ldrb	r3, [r7, #7]
 699 0010 43F04003 		orr	r3, r3, #64
 700 0014 DBB2     		uxtb	r3, r3
 701 0016 1846     		mov	r0, r3
 702 0018 FFF7FEFF 		bl	Surtidor_PutChar
 211:.\Protocolo.c ****     CyDelay(300);
 703              		.loc 1 211 0
 704 001c 4FF49670 		mov	r0, #300
 705 0020 FFF7FEFF 		bl	CyDelay
 212:.\Protocolo.c **** 	if((version[1]!=7)&&(Surtidor_GetRxBufferSize()==33)){
 706              		.loc 1 212 0
 707 0024 AB4B     		ldr	r3, .L76
 708 0026 5B78     		ldrb	r3, [r3, #1]
 709 0028 DBB2     		uxtb	r3, r3
 710 002a 072B     		cmp	r3, #7
 711 002c 00F0BC80 		beq	.L43
 712              		.loc 1 212 0 is_stmt 0 discriminator 1
 713 0030 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 714 0034 0346     		mov	r3, r0
 715 0036 212B     		cmp	r3, #33
 716 0038 40F0B680 		bne	.L43
 213:.\Protocolo.c **** 		if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[2]==0xF8)&&(Surtidor_rxBuffer[32]==0xF0)){
 717              		.loc 1 213 0 is_stmt 1
 718 003c A64B     		ldr	r3, .L76+4
 719 003e 1B78     		ldrb	r3, [r3]
 720 0040 DBB2     		uxtb	r3, r3
 721 0042 FF2B     		cmp	r3, #255
 722 0044 40F0AE80 		bne	.L44
 723              		.loc 1 213 0 is_stmt 0 discriminator 1
 724 0048 A34B     		ldr	r3, .L76+4
 725 004a 9B78     		ldrb	r3, [r3, #2]
 726 004c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 18


 727 004e F82B     		cmp	r3, #248
 728 0050 40F0A880 		bne	.L44
 729              		.loc 1 213 0 discriminator 2
 730 0054 A04B     		ldr	r3, .L76+4
 731 0056 93F82030 		ldrb	r3, [r3, #32]
 732 005a DBB2     		uxtb	r3, r3
 733 005c F02B     		cmp	r3, #240
 734 005e 40F0A180 		bne	.L44
 214:.\Protocolo.c **** 			if(dir==lado1.dir){
 735              		.loc 1 214 0 is_stmt 1
 736 0062 9E4B     		ldr	r3, .L76+8
 737 0064 1B78     		ldrb	r3, [r3]
 738 0066 DBB2     		uxtb	r3, r3
 739 0068 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 740 006a 9A42     		cmp	r2, r3
 741 006c 4CD1     		bne	.L45
 215:.\Protocolo.c **** 				rventa1.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 742              		.loc 1 215 0
 743 006e 9A4B     		ldr	r3, .L76+4
 744 0070 5B7A     		ldrb	r3, [r3, #9]
 745 0072 DBB2     		uxtb	r3, r3
 746 0074 03F00F03 		and	r3, r3, #15
 747 0078 DBB2     		uxtb	r3, r3
 748 007a 0133     		adds	r3, r3, #1
 749 007c DAB2     		uxtb	r2, r3
 750 007e 984B     		ldr	r3, .L76+12
 751 0080 5A76     		strb	r2, [r3, #25]
 216:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 752              		.loc 1 216 0
 753 0082 0023     		movs	r3, #0
 754 0084 FB73     		strb	r3, [r7, #15]
 755 0086 0FE0     		b	.L46
 756              	.L47:
 217:.\Protocolo.c **** 					rventa1.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 757              		.loc 1 217 0 discriminator 3
 758 0088 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 759 008a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 760 008c 0C32     		adds	r2, r2, #12
 761 008e 9249     		ldr	r1, .L76+4
 762 0090 8A5C     		ldrb	r2, [r1, r2]
 763 0092 D2B2     		uxtb	r2, r2
 764 0094 02F00F02 		and	r2, r2, #15
 765 0098 D1B2     		uxtb	r1, r2
 766 009a 914A     		ldr	r2, .L76+12
 767 009c 1344     		add	r3, r3, r2
 768 009e 0A46     		mov	r2, r1
 769 00a0 9A70     		strb	r2, [r3, #2]
 216:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 770              		.loc 1 216 0 discriminator 3
 771 00a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 772 00a4 0133     		adds	r3, r3, #1
 773 00a6 FB73     		strb	r3, [r7, #15]
 774              	.L46:
 216:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 775              		.loc 1 216 0 is_stmt 0 discriminator 1
 776 00a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 777 00aa 032B     		cmp	r3, #3
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 19


 778 00ac ECD9     		bls	.L47
 218:.\Protocolo.c **** 				}
 219:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 779              		.loc 1 219 0 is_stmt 1
 780 00ae 0023     		movs	r3, #0
 781 00b0 FB73     		strb	r3, [r7, #15]
 782 00b2 0FE0     		b	.L48
 783              	.L49:
 220:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 784              		.loc 1 220 0 discriminator 3
 785 00b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 786 00b6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 787 00b8 1132     		adds	r2, r2, #17
 788 00ba 8749     		ldr	r1, .L76+4
 789 00bc 8A5C     		ldrb	r2, [r1, r2]
 790 00be D2B2     		uxtb	r2, r2
 791 00c0 02F00F02 		and	r2, r2, #15
 792 00c4 D1B2     		uxtb	r1, r2
 793 00c6 864A     		ldr	r2, .L76+12
 794 00c8 1344     		add	r3, r3, r2
 795 00ca 0A46     		mov	r2, r1
 796 00cc 1A74     		strb	r2, [r3, #16]
 219:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 797              		.loc 1 219 0 discriminator 3
 798 00ce FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 799 00d0 0133     		adds	r3, r3, #1
 800 00d2 FB73     		strb	r3, [r7, #15]
 801              	.L48:
 219:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 802              		.loc 1 219 0 is_stmt 0 discriminator 1
 803 00d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 804 00d6 052B     		cmp	r3, #5
 805 00d8 ECD9     		bls	.L49
 221:.\Protocolo.c **** 				}			
 222:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 806              		.loc 1 222 0 is_stmt 1
 807 00da 0023     		movs	r3, #0
 808 00dc FB73     		strb	r3, [r7, #15]
 809 00de 0FE0     		b	.L50
 810              	.L51:
 223:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 811              		.loc 1 223 0 discriminator 3
 812 00e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 813 00e2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 814 00e4 1832     		adds	r2, r2, #24
 815 00e6 7C49     		ldr	r1, .L76+4
 816 00e8 8A5C     		ldrb	r2, [r1, r2]
 817 00ea D2B2     		uxtb	r2, r2
 818 00ec 02F00F02 		and	r2, r2, #15
 819 00f0 D1B2     		uxtb	r1, r2
 820 00f2 7B4A     		ldr	r2, .L76+12
 821 00f4 1344     		add	r3, r3, r2
 822 00f6 0A46     		mov	r2, r1
 823 00f8 DA71     		strb	r2, [r3, #7]
 222:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 824              		.loc 1 222 0 discriminator 3
 825 00fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 20


 826 00fc 0133     		adds	r3, r3, #1
 827 00fe FB73     		strb	r3, [r7, #15]
 828              	.L50:
 222:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 829              		.loc 1 222 0 is_stmt 0 discriminator 1
 830 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 831 0102 052B     		cmp	r3, #5
 832 0104 ECD9     		bls	.L51
 833 0106 4BE0     		b	.L52
 834              	.L45:
 224:.\Protocolo.c **** 				}
 225:.\Protocolo.c **** 			}
 226:.\Protocolo.c **** 			else{
 227:.\Protocolo.c **** 				rventa2.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 835              		.loc 1 227 0 is_stmt 1
 836 0108 734B     		ldr	r3, .L76+4
 837 010a 5B7A     		ldrb	r3, [r3, #9]
 838 010c DBB2     		uxtb	r3, r3
 839 010e 03F00F03 		and	r3, r3, #15
 840 0112 DBB2     		uxtb	r3, r3
 841 0114 0133     		adds	r3, r3, #1
 842 0116 DAB2     		uxtb	r2, r3
 843 0118 724B     		ldr	r3, .L76+16
 844 011a 5A76     		strb	r2, [r3, #25]
 228:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 845              		.loc 1 228 0
 846 011c 0023     		movs	r3, #0
 847 011e FB73     		strb	r3, [r7, #15]
 848 0120 0FE0     		b	.L53
 849              	.L54:
 229:.\Protocolo.c **** 					rventa2.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 850              		.loc 1 229 0 discriminator 3
 851 0122 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 852 0124 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 853 0126 0C32     		adds	r2, r2, #12
 854 0128 6B49     		ldr	r1, .L76+4
 855 012a 8A5C     		ldrb	r2, [r1, r2]
 856 012c D2B2     		uxtb	r2, r2
 857 012e 02F00F02 		and	r2, r2, #15
 858 0132 D1B2     		uxtb	r1, r2
 859 0134 6B4A     		ldr	r2, .L76+16
 860 0136 1344     		add	r3, r3, r2
 861 0138 0A46     		mov	r2, r1
 862 013a 9A70     		strb	r2, [r3, #2]
 228:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 863              		.loc 1 228 0 discriminator 3
 864 013c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 865 013e 0133     		adds	r3, r3, #1
 866 0140 FB73     		strb	r3, [r7, #15]
 867              	.L53:
 228:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 868              		.loc 1 228 0 is_stmt 0 discriminator 1
 869 0142 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 870 0144 032B     		cmp	r3, #3
 871 0146 ECD9     		bls	.L54
 230:.\Protocolo.c **** 				}
 231:.\Protocolo.c **** 				for(x=0;x<=5;x++){
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 21


 872              		.loc 1 231 0 is_stmt 1
 873 0148 0023     		movs	r3, #0
 874 014a FB73     		strb	r3, [r7, #15]
 875 014c 0FE0     		b	.L55
 876              	.L56:
 232:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 877              		.loc 1 232 0 discriminator 3
 878 014e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 879 0150 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 880 0152 1132     		adds	r2, r2, #17
 881 0154 6049     		ldr	r1, .L76+4
 882 0156 8A5C     		ldrb	r2, [r1, r2]
 883 0158 D2B2     		uxtb	r2, r2
 884 015a 02F00F02 		and	r2, r2, #15
 885 015e D1B2     		uxtb	r1, r2
 886 0160 604A     		ldr	r2, .L76+16
 887 0162 1344     		add	r3, r3, r2
 888 0164 0A46     		mov	r2, r1
 889 0166 1A74     		strb	r2, [r3, #16]
 231:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 890              		.loc 1 231 0 discriminator 3
 891 0168 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 892 016a 0133     		adds	r3, r3, #1
 893 016c FB73     		strb	r3, [r7, #15]
 894              	.L55:
 231:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 895              		.loc 1 231 0 is_stmt 0 discriminator 1
 896 016e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 897 0170 052B     		cmp	r3, #5
 898 0172 ECD9     		bls	.L56
 233:.\Protocolo.c **** 				}			
 234:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 899              		.loc 1 234 0 is_stmt 1
 900 0174 0023     		movs	r3, #0
 901 0176 FB73     		strb	r3, [r7, #15]
 902 0178 0FE0     		b	.L57
 903              	.L58:
 235:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 904              		.loc 1 235 0 discriminator 3
 905 017a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 906 017c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 907 017e 1832     		adds	r2, r2, #24
 908 0180 5549     		ldr	r1, .L76+4
 909 0182 8A5C     		ldrb	r2, [r1, r2]
 910 0184 D2B2     		uxtb	r2, r2
 911 0186 02F00F02 		and	r2, r2, #15
 912 018a D1B2     		uxtb	r1, r2
 913 018c 554A     		ldr	r2, .L76+16
 914 018e 1344     		add	r3, r3, r2
 915 0190 0A46     		mov	r2, r1
 916 0192 DA71     		strb	r2, [r3, #7]
 234:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 917              		.loc 1 234 0 discriminator 3
 918 0194 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 919 0196 0133     		adds	r3, r3, #1
 920 0198 FB73     		strb	r3, [r7, #15]
 921              	.L57:
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 22


 234:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 922              		.loc 1 234 0 is_stmt 0 discriminator 1
 923 019a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 924 019c 052B     		cmp	r3, #5
 925 019e ECD9     		bls	.L58
 926              	.L52:
 236:.\Protocolo.c **** 				}			
 237:.\Protocolo.c **** 			}
 238:.\Protocolo.c **** 			return 1;
 927              		.loc 1 238 0 is_stmt 1
 928 01a0 0123     		movs	r3, #1
 929 01a2 CFE0     		b	.L59
 930              	.L44:
 239:.\Protocolo.c **** 		}
 240:.\Protocolo.c **** 		else{
 241:.\Protocolo.c **** 			return 0;
 931              		.loc 1 241 0
 932 01a4 0023     		movs	r3, #0
 933 01a6 CDE0     		b	.L59
 934              	.L43:
 242:.\Protocolo.c **** 		}
 243:.\Protocolo.c **** 	}
 244:.\Protocolo.c **** 	else if((version[1]==7)&&(Surtidor_GetRxBufferSize()==39)){
 935              		.loc 1 244 0
 936 01a8 4A4B     		ldr	r3, .L76
 937 01aa 5B78     		ldrb	r3, [r3, #1]
 938 01ac DBB2     		uxtb	r3, r3
 939 01ae 072B     		cmp	r3, #7
 940 01b0 40F0C780 		bne	.L60
 941              		.loc 1 244 0 is_stmt 0 discriminator 1
 942 01b4 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 943 01b8 0346     		mov	r3, r0
 944 01ba 272B     		cmp	r3, #39
 945 01bc 40F0C180 		bne	.L60
 245:.\Protocolo.c **** 		if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[2]==0xF8)&&(Surtidor_rxBuffer[38]==0xF0)){
 946              		.loc 1 245 0 is_stmt 1
 947 01c0 454B     		ldr	r3, .L76+4
 948 01c2 1B78     		ldrb	r3, [r3]
 949 01c4 DBB2     		uxtb	r3, r3
 950 01c6 FF2B     		cmp	r3, #255
 951 01c8 40F0B980 		bne	.L61
 952              		.loc 1 245 0 is_stmt 0 discriminator 1
 953 01cc 424B     		ldr	r3, .L76+4
 954 01ce 9B78     		ldrb	r3, [r3, #2]
 955 01d0 DBB2     		uxtb	r3, r3
 956 01d2 F82B     		cmp	r3, #248
 957 01d4 40F0B380 		bne	.L61
 958              		.loc 1 245 0 discriminator 2
 959 01d8 3F4B     		ldr	r3, .L76+4
 960 01da 93F82630 		ldrb	r3, [r3, #38]
 961 01de DBB2     		uxtb	r3, r3
 962 01e0 F02B     		cmp	r3, #240
 963 01e2 40F0AC80 		bne	.L61
 246:.\Protocolo.c **** 			if(dir==lado1.dir){
 964              		.loc 1 246 0 is_stmt 1
 965 01e6 3D4B     		ldr	r3, .L76+8
 966 01e8 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 23


 967 01ea DBB2     		uxtb	r3, r3
 968 01ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 969 01ee 9A42     		cmp	r2, r3
 970 01f0 4CD1     		bne	.L62
 247:.\Protocolo.c **** 				rventa1.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 971              		.loc 1 247 0
 972 01f2 394B     		ldr	r3, .L76+4
 973 01f4 5B7A     		ldrb	r3, [r3, #9]
 974 01f6 DBB2     		uxtb	r3, r3
 975 01f8 03F00F03 		and	r3, r3, #15
 976 01fc DBB2     		uxtb	r3, r3
 977 01fe 0133     		adds	r3, r3, #1
 978 0200 DAB2     		uxtb	r2, r3
 979 0202 374B     		ldr	r3, .L76+12
 980 0204 5A76     		strb	r2, [r3, #25]
 248:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 981              		.loc 1 248 0
 982 0206 0023     		movs	r3, #0
 983 0208 FB73     		strb	r3, [r7, #15]
 984 020a 0FE0     		b	.L63
 985              	.L64:
 249:.\Protocolo.c **** 					rventa1.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 986              		.loc 1 249 0 discriminator 3
 987 020c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 988 020e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 989 0210 0C32     		adds	r2, r2, #12
 990 0212 3149     		ldr	r1, .L76+4
 991 0214 8A5C     		ldrb	r2, [r1, r2]
 992 0216 D2B2     		uxtb	r2, r2
 993 0218 02F00F02 		and	r2, r2, #15
 994 021c D1B2     		uxtb	r1, r2
 995 021e 304A     		ldr	r2, .L76+12
 996 0220 1344     		add	r3, r3, r2
 997 0222 0A46     		mov	r2, r1
 998 0224 9A70     		strb	r2, [r3, #2]
 248:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 999              		.loc 1 248 0 discriminator 3
 1000 0226 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1001 0228 0133     		adds	r3, r3, #1
 1002 022a FB73     		strb	r3, [r7, #15]
 1003              	.L63:
 248:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1004              		.loc 1 248 0 is_stmt 0 discriminator 1
 1005 022c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1006 022e 052B     		cmp	r3, #5
 1007 0230 ECD9     		bls	.L64
 250:.\Protocolo.c **** 				}
 251:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1008              		.loc 1 251 0 is_stmt 1
 1009 0232 0023     		movs	r3, #0
 1010 0234 FB73     		strb	r3, [r7, #15]
 1011 0236 0FE0     		b	.L65
 1012              	.L66:
 252:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1013              		.loc 1 252 0 discriminator 3
 1014 0238 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1015 023a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 24


 1016 023c 1332     		adds	r2, r2, #19
 1017 023e 2649     		ldr	r1, .L76+4
 1018 0240 8A5C     		ldrb	r2, [r1, r2]
 1019 0242 D2B2     		uxtb	r2, r2
 1020 0244 02F00F02 		and	r2, r2, #15
 1021 0248 D1B2     		uxtb	r1, r2
 1022 024a 254A     		ldr	r2, .L76+12
 1023 024c 1344     		add	r3, r3, r2
 1024 024e 0A46     		mov	r2, r1
 1025 0250 1A74     		strb	r2, [r3, #16]
 251:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1026              		.loc 1 251 0 discriminator 3
 1027 0252 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1028 0254 0133     		adds	r3, r3, #1
 1029 0256 FB73     		strb	r3, [r7, #15]
 1030              	.L65:
 251:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1031              		.loc 1 251 0 is_stmt 0 discriminator 1
 1032 0258 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1033 025a 072B     		cmp	r3, #7
 1034 025c ECD9     		bls	.L66
 253:.\Protocolo.c **** 				}			
 254:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1035              		.loc 1 254 0 is_stmt 1
 1036 025e 0023     		movs	r3, #0
 1037 0260 FB73     		strb	r3, [r7, #15]
 1038 0262 0FE0     		b	.L67
 1039              	.L68:
 255:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1040              		.loc 1 255 0 discriminator 3
 1041 0264 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1042 0266 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1043 0268 1C32     		adds	r2, r2, #28
 1044 026a 1B49     		ldr	r1, .L76+4
 1045 026c 8A5C     		ldrb	r2, [r1, r2]
 1046 026e D2B2     		uxtb	r2, r2
 1047 0270 02F00F02 		and	r2, r2, #15
 1048 0274 D1B2     		uxtb	r1, r2
 1049 0276 1A4A     		ldr	r2, .L76+12
 1050 0278 1344     		add	r3, r3, r2
 1051 027a 0A46     		mov	r2, r1
 1052 027c DA71     		strb	r2, [r3, #7]
 254:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1053              		.loc 1 254 0 discriminator 3
 1054 027e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1055 0280 0133     		adds	r3, r3, #1
 1056 0282 FB73     		strb	r3, [r7, #15]
 1057              	.L67:
 254:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1058              		.loc 1 254 0 is_stmt 0 discriminator 1
 1059 0284 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1060 0286 072B     		cmp	r3, #7
 1061 0288 ECD9     		bls	.L68
 1062 028a 56E0     		b	.L69
 1063              	.L62:
 256:.\Protocolo.c **** 				}
 257:.\Protocolo.c **** 			}
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 25


 258:.\Protocolo.c **** 			else{
 259:.\Protocolo.c **** 				rventa2.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1064              		.loc 1 259 0 is_stmt 1
 1065 028c 124B     		ldr	r3, .L76+4
 1066 028e 5B7A     		ldrb	r3, [r3, #9]
 1067 0290 DBB2     		uxtb	r3, r3
 1068 0292 03F00F03 		and	r3, r3, #15
 1069 0296 DBB2     		uxtb	r3, r3
 1070 0298 0133     		adds	r3, r3, #1
 1071 029a DAB2     		uxtb	r2, r3
 1072 029c 114B     		ldr	r3, .L76+16
 1073 029e 5A76     		strb	r2, [r3, #25]
 260:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1074              		.loc 1 260 0
 1075 02a0 0023     		movs	r3, #0
 1076 02a2 FB73     		strb	r3, [r7, #15]
 1077 02a4 0FE0     		b	.L70
 1078              	.L71:
 261:.\Protocolo.c **** 					rventa2.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1079              		.loc 1 261 0 discriminator 3
 1080 02a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1081 02a8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1082 02aa 0C32     		adds	r2, r2, #12
 1083 02ac 0A49     		ldr	r1, .L76+4
 1084 02ae 8A5C     		ldrb	r2, [r1, r2]
 1085 02b0 D2B2     		uxtb	r2, r2
 1086 02b2 02F00F02 		and	r2, r2, #15
 1087 02b6 D1B2     		uxtb	r1, r2
 1088 02b8 0A4A     		ldr	r2, .L76+16
 1089 02ba 1344     		add	r3, r3, r2
 1090 02bc 0A46     		mov	r2, r1
 1091 02be 9A70     		strb	r2, [r3, #2]
 260:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1092              		.loc 1 260 0 discriminator 3
 1093 02c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1094 02c2 0133     		adds	r3, r3, #1
 1095 02c4 FB73     		strb	r3, [r7, #15]
 1096              	.L70:
 260:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1097              		.loc 1 260 0 is_stmt 0 discriminator 1
 1098 02c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1099 02c8 052B     		cmp	r3, #5
 1100 02ca ECD9     		bls	.L71
 262:.\Protocolo.c **** 				}
 263:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1101              		.loc 1 263 0 is_stmt 1
 1102 02cc 0023     		movs	r3, #0
 1103 02ce FB73     		strb	r3, [r7, #15]
 1104 02d0 1AE0     		b	.L72
 1105              	.L77:
 1106 02d2 00BF     		.align	2
 1107              	.L76:
 1108 02d4 00000000 		.word	version
 1109 02d8 00000000 		.word	Surtidor_rxBuffer
 1110 02dc 00000000 		.word	lado1
 1111 02e0 00000000 		.word	rventa1
 1112 02e4 00000000 		.word	rventa2
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 26


 1113              	.L73:
 264:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1114              		.loc 1 264 0 discriminator 3
 1115 02e8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1116 02ea FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1117 02ec 1332     		adds	r2, r2, #19
 1118 02ee 1749     		ldr	r1, .L78
 1119 02f0 8A5C     		ldrb	r2, [r1, r2]
 1120 02f2 D2B2     		uxtb	r2, r2
 1121 02f4 02F00F02 		and	r2, r2, #15
 1122 02f8 D1B2     		uxtb	r1, r2
 1123 02fa 154A     		ldr	r2, .L78+4
 1124 02fc 1344     		add	r3, r3, r2
 1125 02fe 0A46     		mov	r2, r1
 1126 0300 1A74     		strb	r2, [r3, #16]
 263:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1127              		.loc 1 263 0 discriminator 3
 1128 0302 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1129 0304 0133     		adds	r3, r3, #1
 1130 0306 FB73     		strb	r3, [r7, #15]
 1131              	.L72:
 263:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1132              		.loc 1 263 0 is_stmt 0 discriminator 1
 1133 0308 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1134 030a 072B     		cmp	r3, #7
 1135 030c ECD9     		bls	.L73
 265:.\Protocolo.c **** 				}			
 266:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1136              		.loc 1 266 0 is_stmt 1
 1137 030e 0023     		movs	r3, #0
 1138 0310 FB73     		strb	r3, [r7, #15]
 1139 0312 0FE0     		b	.L74
 1140              	.L75:
 267:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1141              		.loc 1 267 0 discriminator 3
 1142 0314 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1143 0316 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1144 0318 1C32     		adds	r2, r2, #28
 1145 031a 0C49     		ldr	r1, .L78
 1146 031c 8A5C     		ldrb	r2, [r1, r2]
 1147 031e D2B2     		uxtb	r2, r2
 1148 0320 02F00F02 		and	r2, r2, #15
 1149 0324 D1B2     		uxtb	r1, r2
 1150 0326 0A4A     		ldr	r2, .L78+4
 1151 0328 1344     		add	r3, r3, r2
 1152 032a 0A46     		mov	r2, r1
 1153 032c DA71     		strb	r2, [r3, #7]
 266:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1154              		.loc 1 266 0 discriminator 3
 1155 032e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1156 0330 0133     		adds	r3, r3, #1
 1157 0332 FB73     		strb	r3, [r7, #15]
 1158              	.L74:
 266:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1159              		.loc 1 266 0 is_stmt 0 discriminator 1
 1160 0334 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1161 0336 072B     		cmp	r3, #7
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 27


 1162 0338 ECD9     		bls	.L75
 1163              	.L69:
 268:.\Protocolo.c **** 				}			
 269:.\Protocolo.c **** 			}
 270:.\Protocolo.c **** 			return 1;
 1164              		.loc 1 270 0 is_stmt 1
 1165 033a 0123     		movs	r3, #1
 1166 033c 02E0     		b	.L59
 1167              	.L61:
 271:.\Protocolo.c **** 		}
 272:.\Protocolo.c **** 		else{
 273:.\Protocolo.c **** 			return 0;
 1168              		.loc 1 273 0
 1169 033e 0023     		movs	r3, #0
 1170 0340 00E0     		b	.L59
 1171              	.L60:
 274:.\Protocolo.c **** 		}
 275:.\Protocolo.c **** 	}
 276:.\Protocolo.c **** 	return 0;
 1172              		.loc 1 276 0
 1173 0342 0023     		movs	r3, #0
 1174              	.L59:
 277:.\Protocolo.c **** }
 1175              		.loc 1 277 0
 1176 0344 1846     		mov	r0, r3
 1177 0346 1037     		adds	r7, r7, #16
 1178              		.cfi_def_cfa_offset 8
 1179 0348 BD46     		mov	sp, r7
 1180              		.cfi_def_cfa_register 13
 1181              		@ sp needed
 1182 034a 80BD     		pop	{r7, pc}
 1183              	.L79:
 1184              		.align	2
 1185              	.L78:
 1186 034c 00000000 		.word	Surtidor_rxBuffer
 1187 0350 00000000 		.word	rventa2
 1188              		.cfi_endproc
 1189              	.LFE68:
 1190              		.size	venta, .-venta
 1191              		.section	.text.programar,"ax",%progbits
 1192              		.align	2
 1193              		.global	programar
 1194              		.thumb
 1195              		.thumb_func
 1196              		.type	programar, %function
 1197              	programar:
 1198              	.LFB69:
 278:.\Protocolo.c **** 
 279:.\Protocolo.c **** /**
 280:.\Protocolo.c **** * programar
 281:.\Protocolo.c **** * @brief Envía el preset al equipo según lo que se programe en las pantallas
 282:.\Protocolo.c **** * @param dir posición del surtidor
 283:.\Protocolo.c **** * @param grado manguera del equipo
 284:.\Protocolo.c **** * @param *valor valor del preset a enviar
 285:.\Protocolo.c **** * @param preset tipo de preset 1,2,3
 286:.\Protocolo.c **** * @return 0 si hay error, 1 si se realiza el preset al equipo
 287:.\Protocolo.c **** *
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 28


 288:.\Protocolo.c **** */
 289:.\Protocolo.c **** uint8 programar(uint8 dir, uint8 grado, uint8 *valor, uint8 preset){
 1199              		.loc 1 289 0
 1200              		.cfi_startproc
 1201              		@ args = 0, pretend = 0, frame = 32
 1202              		@ frame_needed = 1, uses_anonymous_args = 0
 1203 0000 80B5     		push	{r7, lr}
 1204              		.cfi_def_cfa_offset 8
 1205              		.cfi_offset 7, -8
 1206              		.cfi_offset 14, -4
 1207 0002 88B0     		sub	sp, sp, #32
 1208              		.cfi_def_cfa_offset 40
 1209 0004 00AF     		add	r7, sp, #0
 1210              		.cfi_def_cfa_register 7
 1211 0006 3A60     		str	r2, [r7]
 1212 0008 1A46     		mov	r2, r3
 1213 000a 0346     		mov	r3, r0
 1214 000c FB71     		strb	r3, [r7, #7]
 1215 000e 0B46     		mov	r3, r1
 1216 0010 BB71     		strb	r3, [r7, #6]
 1217 0012 1346     		mov	r3, r2
 1218 0014 7B71     		strb	r3, [r7, #5]
 290:.\Protocolo.c **** 	uint8 buffer[18]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},size,temp,i,decimal;
 1219              		.loc 1 290 0
 1220 0016 07F10803 		add	r3, r7, #8
 1221 001a 0022     		movs	r2, #0
 1222 001c 1A60     		str	r2, [r3]
 1223 001e 0433     		adds	r3, r3, #4
 1224 0020 0022     		movs	r2, #0
 1225 0022 1A60     		str	r2, [r3]
 1226 0024 0433     		adds	r3, r3, #4
 1227 0026 0022     		movs	r2, #0
 1228 0028 1A60     		str	r2, [r3]
 1229 002a 0433     		adds	r3, r3, #4
 1230 002c 0022     		movs	r2, #0
 1231 002e 1A60     		str	r2, [r3]
 1232 0030 0433     		adds	r3, r3, #4
 1233 0032 0022     		movs	r2, #0
 1234 0034 1A80     		strh	r2, [r3]	@ movhi
 1235 0036 0233     		adds	r3, r3, #2
 291:.\Protocolo.c **** 	temp=4;
 1236              		.loc 1 291 0
 1237 0038 0423     		movs	r3, #4
 1238 003a BB77     		strb	r3, [r7, #30]
 292:.\Protocolo.c **** 	if(preset==3){
 1239              		.loc 1 292 0
 1240 003c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1241 003e 032B     		cmp	r3, #3
 1242 0040 01D1     		bne	.L81
 293:.\Protocolo.c **** 		preset=2;
 1243              		.loc 1 293 0
 1244 0042 0223     		movs	r3, #2
 1245 0044 7B71     		strb	r3, [r7, #5]
 1246              	.L81:
 294:.\Protocolo.c **** 	}
 295:.\Protocolo.c **** 	if(((version[1]==5)||(version[1]==6))&&(preset==1)){
 1247              		.loc 1 295 0
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 29


 1248 0046 B34B     		ldr	r3, .L124
 1249 0048 5B78     		ldrb	r3, [r3, #1]
 1250 004a DBB2     		uxtb	r3, r3
 1251 004c 052B     		cmp	r3, #5
 1252 004e 04D0     		beq	.L82
 1253              		.loc 1 295 0 is_stmt 0 discriminator 2
 1254 0050 B04B     		ldr	r3, .L124
 1255 0052 5B78     		ldrb	r3, [r3, #1]
 1256 0054 DBB2     		uxtb	r3, r3
 1257 0056 062B     		cmp	r3, #6
 1258 0058 04D1     		bne	.L83
 1259              	.L82:
 1260              		.loc 1 295 0 discriminator 3
 1261 005a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1262 005c 012B     		cmp	r3, #1
 1263 005e 01D1     		bne	.L83
 296:.\Protocolo.c **** 		temp=3;
 1264              		.loc 1 296 0 is_stmt 1
 1265 0060 0323     		movs	r3, #3
 1266 0062 BB77     		strb	r3, [r7, #30]
 1267              	.L83:
 297:.\Protocolo.c **** 	}
 298:.\Protocolo.c **** 	if((version[1]==5)&&(preset==2)){
 1268              		.loc 1 298 0
 1269 0064 AB4B     		ldr	r3, .L124
 1270 0066 5B78     		ldrb	r3, [r3, #1]
 1271 0068 DBB2     		uxtb	r3, r3
 1272 006a 052B     		cmp	r3, #5
 1273 006c 04D1     		bne	.L84
 1274              		.loc 1 298 0 is_stmt 0 discriminator 1
 1275 006e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1276 0070 022B     		cmp	r3, #2
 1277 0072 01D1     		bne	.L84
 299:.\Protocolo.c **** 		temp=5;
 1278              		.loc 1 299 0 is_stmt 1
 1279 0074 0523     		movs	r3, #5
 1280 0076 BB77     		strb	r3, [r7, #30]
 1281              	.L84:
 300:.\Protocolo.c **** 	}
 301:.\Protocolo.c **** 	if((version[1]==7)&&(preset==1)){
 1282              		.loc 1 301 0
 1283 0078 A64B     		ldr	r3, .L124
 1284 007a 5B78     		ldrb	r3, [r3, #1]
 1285 007c DBB2     		uxtb	r3, r3
 1286 007e 072B     		cmp	r3, #7
 1287 0080 04D1     		bne	.L85
 1288              		.loc 1 301 0 is_stmt 0 discriminator 1
 1289 0082 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1290 0084 012B     		cmp	r3, #1
 1291 0086 01D1     		bne	.L85
 302:.\Protocolo.c **** 		temp=0;
 1292              		.loc 1 302 0 is_stmt 1
 1293 0088 0023     		movs	r3, #0
 1294 008a BB77     		strb	r3, [r7, #30]
 1295              	.L85:
 303:.\Protocolo.c **** 	}
 304:.\Protocolo.c **** 	if((version[1]==7)&&(preset==2)){
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 30


 1296              		.loc 1 304 0
 1297 008c A14B     		ldr	r3, .L124
 1298 008e 5B78     		ldrb	r3, [r3, #1]
 1299 0090 DBB2     		uxtb	r3, r3
 1300 0092 072B     		cmp	r3, #7
 1301 0094 04D1     		bne	.L86
 1302              		.loc 1 304 0 is_stmt 0 discriminator 1
 1303 0096 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1304 0098 022B     		cmp	r3, #2
 1305 009a 01D1     		bne	.L86
 305:.\Protocolo.c **** 		temp=2;
 1306              		.loc 1 305 0 is_stmt 1
 1307 009c 0223     		movs	r3, #2
 1308 009e BB77     		strb	r3, [r7, #30]
 1309              	.L86:
 306:.\Protocolo.c **** 	}	
 307:.\Protocolo.c **** 	decimal=0;
 1310              		.loc 1 307 0
 1311 00a0 0023     		movs	r3, #0
 1312 00a2 3B77     		strb	r3, [r7, #28]
 308:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1313              		.loc 1 308 0
 1314 00a4 0123     		movs	r3, #1
 1315 00a6 7B77     		strb	r3, [r7, #29]
 1316 00a8 0AE0     		b	.L87
 1317              	.L89:
 309:.\Protocolo.c **** 		if(valor[i]==','){
 1318              		.loc 1 309 0
 1319 00aa 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1320 00ac 3A68     		ldr	r2, [r7]
 1321 00ae 1344     		add	r3, r3, r2
 1322 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1323 00b2 2C2B     		cmp	r3, #44
 1324 00b4 01D1     		bne	.L88
 310:.\Protocolo.c **** 			decimal=i;	
 1325              		.loc 1 310 0
 1326 00b6 7B7F     		ldrb	r3, [r7, #29]
 1327 00b8 3B77     		strb	r3, [r7, #28]
 1328              	.L88:
 308:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1329              		.loc 1 308 0 discriminator 2
 1330 00ba 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1331 00bc 0133     		adds	r3, r3, #1
 1332 00be 7B77     		strb	r3, [r7, #29]
 1333              	.L87:
 308:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1334              		.loc 1 308 0 is_stmt 0 discriminator 1
 1335 00c0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1336 00c2 072B     		cmp	r3, #7
 1337 00c4 F1D9     		bls	.L89
 311:.\Protocolo.c **** 		}
 312:.\Protocolo.c **** 	}
 313:.\Protocolo.c **** 	if(decimal>4){
 1338              		.loc 1 313 0 is_stmt 1
 1339 00c6 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1340 00c8 042B     		cmp	r3, #4
 1341 00ca 01D9     		bls	.L90
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 31


 314:.\Protocolo.c **** 		return 0;
 1342              		.loc 1 314 0
 1343 00cc 0023     		movs	r3, #0
 1344 00ce CFE3     		b	.L123
 1345              	.L90:
 315:.\Protocolo.c **** 	}
 316:.\Protocolo.c **** 	if(version[1]!=7){		
 1346              		.loc 1 316 0
 1347 00d0 904B     		ldr	r3, .L124
 1348 00d2 5B78     		ldrb	r3, [r3, #1]
 1349 00d4 DBB2     		uxtb	r3, r3
 1350 00d6 072B     		cmp	r3, #7
 1351 00d8 00F00582 		beq	.L92
 317:.\Protocolo.c **** 		buffer[0]=0xFF;
 1352              		.loc 1 317 0
 1353 00dc FF23     		movs	r3, #255
 1354 00de 3B72     		strb	r3, [r7, #8]
 318:.\Protocolo.c **** 		buffer[1]=(0xE0|temp);
 1355              		.loc 1 318 0
 1356 00e0 BB7F     		ldrb	r3, [r7, #30]
 1357 00e2 63F01F03 		orn	r3, r3, #31
 1358 00e6 DBB2     		uxtb	r3, r3
 1359 00e8 7B72     		strb	r3, [r7, #9]
 319:.\Protocolo.c **** 		buffer[2]=(0xF0|preset);
 1360              		.loc 1 319 0
 1361 00ea 7B79     		ldrb	r3, [r7, #5]
 1362 00ec 63F00F03 		orn	r3, r3, #15
 1363 00f0 DBB2     		uxtb	r3, r3
 1364 00f2 BB72     		strb	r3, [r7, #10]
 320:.\Protocolo.c **** 		buffer[3]=0xF4;
 1365              		.loc 1 320 0
 1366 00f4 F423     		movs	r3, #244
 1367 00f6 FB72     		strb	r3, [r7, #11]
 321:.\Protocolo.c **** 		buffer[4]=0xF8;	
 1368              		.loc 1 321 0
 1369 00f8 F823     		movs	r3, #248
 1370 00fa 3B73     		strb	r3, [r7, #12]
 322:.\Protocolo.c **** 		buffer[5]=(valor[1]|0xE0);
 1371              		.loc 1 322 0
 1372 00fc 3B68     		ldr	r3, [r7]
 1373 00fe 0133     		adds	r3, r3, #1
 1374 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1375 0102 63F01F03 		orn	r3, r3, #31
 1376 0106 DBB2     		uxtb	r3, r3
 1377 0108 7B73     		strb	r3, [r7, #13]
 323:.\Protocolo.c **** 		buffer[6]=(valor[2]|0xE0);
 1378              		.loc 1 323 0
 1379 010a 3B68     		ldr	r3, [r7]
 1380 010c 0233     		adds	r3, r3, #2
 1381 010e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1382 0110 63F01F03 		orn	r3, r3, #31
 1383 0114 DBB2     		uxtb	r3, r3
 1384 0116 BB73     		strb	r3, [r7, #14]
 324:.\Protocolo.c **** 		buffer[7]=(valor[3]|0xE0);
 1385              		.loc 1 324 0
 1386 0118 3B68     		ldr	r3, [r7]
 1387 011a 0333     		adds	r3, r3, #3
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 32


 1388 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1389 011e 63F01F03 		orn	r3, r3, #31
 1390 0122 DBB2     		uxtb	r3, r3
 1391 0124 FB73     		strb	r3, [r7, #15]
 325:.\Protocolo.c **** 		buffer[8]=(valor[4]|0xE0);
 1392              		.loc 1 325 0
 1393 0126 3B68     		ldr	r3, [r7]
 1394 0128 0433     		adds	r3, r3, #4
 1395 012a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1396 012c 63F01F03 		orn	r3, r3, #31
 1397 0130 DBB2     		uxtb	r3, r3
 1398 0132 3B74     		strb	r3, [r7, #16]
 326:.\Protocolo.c **** 		buffer[9]=(valor[5]|0xE0);
 1399              		.loc 1 326 0
 1400 0134 3B68     		ldr	r3, [r7]
 1401 0136 0533     		adds	r3, r3, #5
 1402 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1403 013a 63F01F03 		orn	r3, r3, #31
 1404 013e DBB2     		uxtb	r3, r3
 1405 0140 7B74     		strb	r3, [r7, #17]
 327:.\Protocolo.c **** 		buffer[10]=(valor[6]|0xE0);
 1406              		.loc 1 327 0
 1407 0142 3B68     		ldr	r3, [r7]
 1408 0144 0633     		adds	r3, r3, #6
 1409 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1410 0148 63F01F03 		orn	r3, r3, #31
 1411 014c DBB2     		uxtb	r3, r3
 1412 014e BB74     		strb	r3, [r7, #18]
 328:.\Protocolo.c **** 		if(version[2]==2){
 1413              		.loc 1 328 0
 1414 0150 704B     		ldr	r3, .L124
 1415 0152 9B78     		ldrb	r3, [r3, #2]
 1416 0154 DBB2     		uxtb	r3, r3
 1417 0156 022B     		cmp	r3, #2
 1418 0158 40F0A580 		bne	.L93
 329:.\Protocolo.c **** 			if(decimal==4){
 1419              		.loc 1 329 0
 1420 015c 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1421 015e 042B     		cmp	r3, #4
 1422 0160 29D1     		bne	.L94
 330:.\Protocolo.c **** 				buffer[5]=(valor[2]|0xE0);
 1423              		.loc 1 330 0
 1424 0162 3B68     		ldr	r3, [r7]
 1425 0164 0233     		adds	r3, r3, #2
 1426 0166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1427 0168 63F01F03 		orn	r3, r3, #31
 1428 016c DBB2     		uxtb	r3, r3
 1429 016e 7B73     		strb	r3, [r7, #13]
 331:.\Protocolo.c **** 				buffer[6]=(valor[3]|0xE0);
 1430              		.loc 1 331 0
 1431 0170 3B68     		ldr	r3, [r7]
 1432 0172 0333     		adds	r3, r3, #3
 1433 0174 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1434 0176 63F01F03 		orn	r3, r3, #31
 1435 017a DBB2     		uxtb	r3, r3
 1436 017c BB73     		strb	r3, [r7, #14]
 332:.\Protocolo.c **** 				buffer[7]=(valor[5]|0xE0);
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 33


 1437              		.loc 1 332 0
 1438 017e 3B68     		ldr	r3, [r7]
 1439 0180 0533     		adds	r3, r3, #5
 1440 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1441 0184 63F01F03 		orn	r3, r3, #31
 1442 0188 DBB2     		uxtb	r3, r3
 1443 018a FB73     		strb	r3, [r7, #15]
 333:.\Protocolo.c **** 				buffer[8]=(valor[6]|0xE0);
 1444              		.loc 1 333 0
 1445 018c 3B68     		ldr	r3, [r7]
 1446 018e 0633     		adds	r3, r3, #6
 1447 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1448 0192 63F01F03 		orn	r3, r3, #31
 1449 0196 DBB2     		uxtb	r3, r3
 1450 0198 3B74     		strb	r3, [r7, #16]
 334:.\Protocolo.c **** 				buffer[9]=(valor[7]|0xE0);
 1451              		.loc 1 334 0
 1452 019a 3B68     		ldr	r3, [r7]
 1453 019c 0733     		adds	r3, r3, #7
 1454 019e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1455 01a0 63F01F03 		orn	r3, r3, #31
 1456 01a4 DBB2     		uxtb	r3, r3
 1457 01a6 7B74     		strb	r3, [r7, #17]
 335:.\Protocolo.c **** 				buffer[10]=(valor[8]|0xE0);
 1458              		.loc 1 335 0
 1459 01a8 3B68     		ldr	r3, [r7]
 1460 01aa 0833     		adds	r3, r3, #8
 1461 01ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1462 01ae 63F01F03 		orn	r3, r3, #31
 1463 01b2 DBB2     		uxtb	r3, r3
 1464 01b4 BB74     		strb	r3, [r7, #18]
 1465              	.L94:
 336:.\Protocolo.c **** 			}
 337:.\Protocolo.c **** 			if(decimal==3){
 1466              		.loc 1 337 0
 1467 01b6 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1468 01b8 032B     		cmp	r3, #3
 1469 01ba 29D1     		bne	.L95
 338:.\Protocolo.c **** 				buffer[5]=(valor[1]|0xE0);
 1470              		.loc 1 338 0
 1471 01bc 3B68     		ldr	r3, [r7]
 1472 01be 0133     		adds	r3, r3, #1
 1473 01c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1474 01c2 63F01F03 		orn	r3, r3, #31
 1475 01c6 DBB2     		uxtb	r3, r3
 1476 01c8 7B73     		strb	r3, [r7, #13]
 339:.\Protocolo.c **** 				buffer[6]=(valor[2]|0xE0);
 1477              		.loc 1 339 0
 1478 01ca 3B68     		ldr	r3, [r7]
 1479 01cc 0233     		adds	r3, r3, #2
 1480 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1481 01d0 63F01F03 		orn	r3, r3, #31
 1482 01d4 DBB2     		uxtb	r3, r3
 1483 01d6 BB73     		strb	r3, [r7, #14]
 340:.\Protocolo.c **** 				buffer[7]=(valor[4]|0xE0);
 1484              		.loc 1 340 0
 1485 01d8 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 34


 1486 01da 0433     		adds	r3, r3, #4
 1487 01dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1488 01de 63F01F03 		orn	r3, r3, #31
 1489 01e2 DBB2     		uxtb	r3, r3
 1490 01e4 FB73     		strb	r3, [r7, #15]
 341:.\Protocolo.c **** 				buffer[8]=(valor[5]|0xE0);
 1491              		.loc 1 341 0
 1492 01e6 3B68     		ldr	r3, [r7]
 1493 01e8 0533     		adds	r3, r3, #5
 1494 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1495 01ec 63F01F03 		orn	r3, r3, #31
 1496 01f0 DBB2     		uxtb	r3, r3
 1497 01f2 3B74     		strb	r3, [r7, #16]
 342:.\Protocolo.c **** 				buffer[9]=(valor[6]|0xE0);
 1498              		.loc 1 342 0
 1499 01f4 3B68     		ldr	r3, [r7]
 1500 01f6 0633     		adds	r3, r3, #6
 1501 01f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1502 01fa 63F01F03 		orn	r3, r3, #31
 1503 01fe DBB2     		uxtb	r3, r3
 1504 0200 7B74     		strb	r3, [r7, #17]
 343:.\Protocolo.c **** 				buffer[10]=(valor[7]|0xE0);
 1505              		.loc 1 343 0
 1506 0202 3B68     		ldr	r3, [r7]
 1507 0204 0733     		adds	r3, r3, #7
 1508 0206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1509 0208 63F01F03 		orn	r3, r3, #31
 1510 020c DBB2     		uxtb	r3, r3
 1511 020e BB74     		strb	r3, [r7, #18]
 1512              	.L95:
 344:.\Protocolo.c **** 			}
 345:.\Protocolo.c **** 			if(decimal==2){
 1513              		.loc 1 345 0
 1514 0210 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1515 0212 022B     		cmp	r3, #2
 1516 0214 24D1     		bne	.L96
 346:.\Protocolo.c **** 				buffer[5]=0xE0;
 1517              		.loc 1 346 0
 1518 0216 E023     		movs	r3, #224
 1519 0218 7B73     		strb	r3, [r7, #13]
 347:.\Protocolo.c **** 				buffer[6]=(valor[1]|0xE0);
 1520              		.loc 1 347 0
 1521 021a 3B68     		ldr	r3, [r7]
 1522 021c 0133     		adds	r3, r3, #1
 1523 021e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1524 0220 63F01F03 		orn	r3, r3, #31
 1525 0224 DBB2     		uxtb	r3, r3
 1526 0226 BB73     		strb	r3, [r7, #14]
 348:.\Protocolo.c **** 				buffer[7]=(valor[3]|0xE0);
 1527              		.loc 1 348 0
 1528 0228 3B68     		ldr	r3, [r7]
 1529 022a 0333     		adds	r3, r3, #3
 1530 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1531 022e 63F01F03 		orn	r3, r3, #31
 1532 0232 DBB2     		uxtb	r3, r3
 1533 0234 FB73     		strb	r3, [r7, #15]
 349:.\Protocolo.c **** 				buffer[8]=(valor[4]|0xE0);
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 35


 1534              		.loc 1 349 0
 1535 0236 3B68     		ldr	r3, [r7]
 1536 0238 0433     		adds	r3, r3, #4
 1537 023a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1538 023c 63F01F03 		orn	r3, r3, #31
 1539 0240 DBB2     		uxtb	r3, r3
 1540 0242 3B74     		strb	r3, [r7, #16]
 350:.\Protocolo.c **** 				buffer[9]=(valor[5]|0xE0);	
 1541              		.loc 1 350 0
 1542 0244 3B68     		ldr	r3, [r7]
 1543 0246 0533     		adds	r3, r3, #5
 1544 0248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1545 024a 63F01F03 		orn	r3, r3, #31
 1546 024e DBB2     		uxtb	r3, r3
 1547 0250 7B74     		strb	r3, [r7, #17]
 351:.\Protocolo.c **** 				buffer[10]=(valor[6]|0xE0);
 1548              		.loc 1 351 0
 1549 0252 3B68     		ldr	r3, [r7]
 1550 0254 0633     		adds	r3, r3, #6
 1551 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1552 0258 63F01F03 		orn	r3, r3, #31
 1553 025c DBB2     		uxtb	r3, r3
 1554 025e BB74     		strb	r3, [r7, #18]
 1555              	.L96:
 352:.\Protocolo.c **** 			}
 353:.\Protocolo.c **** 			if(decimal==0){
 1556              		.loc 1 353 0
 1557 0260 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1558 0262 002B     		cmp	r3, #0
 1559 0264 1FD1     		bne	.L93
 354:.\Protocolo.c **** 				buffer[5]=0xE0;
 1560              		.loc 1 354 0
 1561 0266 E023     		movs	r3, #224
 1562 0268 7B73     		strb	r3, [r7, #13]
 355:.\Protocolo.c **** 				buffer[6]=0xE0;
 1563              		.loc 1 355 0
 1564 026a E023     		movs	r3, #224
 1565 026c BB73     		strb	r3, [r7, #14]
 356:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 1566              		.loc 1 356 0
 1567 026e 3B68     		ldr	r3, [r7]
 1568 0270 0133     		adds	r3, r3, #1
 1569 0272 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1570 0274 63F01F03 		orn	r3, r3, #31
 1571 0278 DBB2     		uxtb	r3, r3
 1572 027a FB73     		strb	r3, [r7, #15]
 357:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 1573              		.loc 1 357 0
 1574 027c 3B68     		ldr	r3, [r7]
 1575 027e 0233     		adds	r3, r3, #2
 1576 0280 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1577 0282 63F01F03 		orn	r3, r3, #31
 1578 0286 DBB2     		uxtb	r3, r3
 1579 0288 3B74     		strb	r3, [r7, #16]
 358:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 1580              		.loc 1 358 0
 1581 028a 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 36


 1582 028c 0333     		adds	r3, r3, #3
 1583 028e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1584 0290 63F01F03 		orn	r3, r3, #31
 1585 0294 DBB2     		uxtb	r3, r3
 1586 0296 7B74     		strb	r3, [r7, #17]
 359:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 1587              		.loc 1 359 0
 1588 0298 3B68     		ldr	r3, [r7]
 1589 029a 0433     		adds	r3, r3, #4
 1590 029c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1591 029e 63F01F03 		orn	r3, r3, #31
 1592 02a2 DBB2     		uxtb	r3, r3
 1593 02a4 BB74     		strb	r3, [r7, #18]
 1594              	.L93:
 360:.\Protocolo.c **** 			}			
 361:.\Protocolo.c **** 		}
 362:.\Protocolo.c **** 		buffer[11]=0xFB;
 1595              		.loc 1 362 0
 1596 02a6 FB23     		movs	r3, #251
 1597 02a8 FB74     		strb	r3, [r7, #19]
 363:.\Protocolo.c **** 		buffer[12]=0;
 1598              		.loc 1 363 0
 1599 02aa 0023     		movs	r3, #0
 1600 02ac 3B75     		strb	r3, [r7, #20]
 364:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 1601              		.loc 1 364 0
 1602 02ae 0023     		movs	r3, #0
 1603 02b0 7B77     		strb	r3, [r7, #29]
 1604 02b2 0FE0     		b	.L97
 1605              	.L98:
 365:.\Protocolo.c **** 			buffer[12]+=(buffer[i]&0x0F);	
 1606              		.loc 1 365 0 discriminator 3
 1607 02b4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 1608 02b6 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1609 02b8 07F12001 		add	r1, r7, #32
 1610 02bc 0B44     		add	r3, r3, r1
 1611 02be 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 1612 02c2 03F00F03 		and	r3, r3, #15
 1613 02c6 DBB2     		uxtb	r3, r3
 1614 02c8 1344     		add	r3, r3, r2
 1615 02ca DBB2     		uxtb	r3, r3
 1616 02cc 3B75     		strb	r3, [r7, #20]
 364:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 1617              		.loc 1 364 0 discriminator 3
 1618 02ce 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1619 02d0 0133     		adds	r3, r3, #1
 1620 02d2 7B77     		strb	r3, [r7, #29]
 1621              	.L97:
 364:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 1622              		.loc 1 364 0 is_stmt 0 discriminator 1
 1623 02d4 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1624 02d6 0B2B     		cmp	r3, #11
 1625 02d8 ECD9     		bls	.L98
 366:.\Protocolo.c **** 		}
 367:.\Protocolo.c **** 		buffer[12]=(((~buffer[12])+1)&0x0F)|0xE0;
 1626              		.loc 1 367 0 is_stmt 1
 1627 02da 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 37


 1628 02dc 5B42     		negs	r3, r3
 1629 02de DBB2     		uxtb	r3, r3
 1630 02e0 DBB2     		uxtb	r3, r3
 1631 02e2 03F00F03 		and	r3, r3, #15
 1632 02e6 DBB2     		uxtb	r3, r3
 1633 02e8 63F01F03 		orn	r3, r3, #31
 1634 02ec DBB2     		uxtb	r3, r3
 1635 02ee DBB2     		uxtb	r3, r3
 1636 02f0 3B75     		strb	r3, [r7, #20]
 368:.\Protocolo.c **** 		buffer[13]=0xF0;
 1637              		.loc 1 368 0
 1638 02f2 F023     		movs	r3, #240
 1639 02f4 7B75     		strb	r3, [r7, #21]
 369:.\Protocolo.c **** 		size=13;
 1640              		.loc 1 369 0
 1641 02f6 0D23     		movs	r3, #13
 1642 02f8 FB77     		strb	r3, [r7, #31]
 370:.\Protocolo.c **** 		if(version[1]==5){
 1643              		.loc 1 370 0
 1644 02fa 064B     		ldr	r3, .L124
 1645 02fc 5B78     		ldrb	r3, [r3, #1]
 1646 02fe DBB2     		uxtb	r3, r3
 1647 0300 052B     		cmp	r3, #5
 1648 0302 2CD1     		bne	.L99
 371:.\Protocolo.c **** 			buffer[10]=0xFB;
 1649              		.loc 1 371 0
 1650 0304 FB23     		movs	r3, #251
 1651 0306 BB74     		strb	r3, [r7, #18]
 372:.\Protocolo.c **** 			buffer[11]=0;
 1652              		.loc 1 372 0
 1653 0308 0023     		movs	r3, #0
 1654 030a FB74     		strb	r3, [r7, #19]
 373:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 1655              		.loc 1 373 0
 1656 030c 0023     		movs	r3, #0
 1657 030e 7B77     		strb	r3, [r7, #29]
 1658 0310 12E0     		b	.L100
 1659              	.L125:
 1660 0312 00BF     		.align	2
 1661              	.L124:
 1662 0314 00000000 		.word	version
 1663              	.L101:
 374:.\Protocolo.c **** 				buffer[11]+=(buffer[i]&0x0F);	
 1664              		.loc 1 374 0 discriminator 3
 1665 0318 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 1666 031a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1667 031c 07F12001 		add	r1, r7, #32
 1668 0320 0B44     		add	r3, r3, r1
 1669 0322 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 1670 0326 03F00F03 		and	r3, r3, #15
 1671 032a DBB2     		uxtb	r3, r3
 1672 032c 1344     		add	r3, r3, r2
 1673 032e DBB2     		uxtb	r3, r3
 1674 0330 FB74     		strb	r3, [r7, #19]
 373:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 1675              		.loc 1 373 0 discriminator 3
 1676 0332 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 38


 1677 0334 0133     		adds	r3, r3, #1
 1678 0336 7B77     		strb	r3, [r7, #29]
 1679              	.L100:
 373:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 1680              		.loc 1 373 0 is_stmt 0 discriminator 1
 1681 0338 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1682 033a 0A2B     		cmp	r3, #10
 1683 033c ECD9     		bls	.L101
 375:.\Protocolo.c **** 			}
 376:.\Protocolo.c **** 			buffer[11]=(((~buffer[11])+1)&0x0F)|0xE0;
 1684              		.loc 1 376 0 is_stmt 1
 1685 033e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1686 0340 5B42     		negs	r3, r3
 1687 0342 DBB2     		uxtb	r3, r3
 1688 0344 DBB2     		uxtb	r3, r3
 1689 0346 03F00F03 		and	r3, r3, #15
 1690 034a DBB2     		uxtb	r3, r3
 1691 034c 63F01F03 		orn	r3, r3, #31
 1692 0350 DBB2     		uxtb	r3, r3
 1693 0352 DBB2     		uxtb	r3, r3
 1694 0354 FB74     		strb	r3, [r7, #19]
 377:.\Protocolo.c **** 			buffer[12]=0xF0;
 1695              		.loc 1 377 0
 1696 0356 F023     		movs	r3, #240
 1697 0358 3B75     		strb	r3, [r7, #20]
 378:.\Protocolo.c **** 			size=12;		
 1698              		.loc 1 378 0
 1699 035a 0C23     		movs	r3, #12
 1700 035c FB77     		strb	r3, [r7, #31]
 1701              	.L99:
 379:.\Protocolo.c **** 		}
 380:.\Protocolo.c **** 		if(preset==1){
 1702              		.loc 1 380 0
 1703 035e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1704 0360 012B     		cmp	r3, #1
 1705 0362 40F0C080 		bne	.L92
 381:.\Protocolo.c **** 			buffer[4]=0xF6;
 1706              		.loc 1 381 0
 1707 0366 F623     		movs	r3, #246
 1708 0368 3B73     		strb	r3, [r7, #12]
 382:.\Protocolo.c **** 			buffer[5]=(0xE0|(grado-1));
 1709              		.loc 1 382 0
 1710 036a BB79     		ldrb	r3, [r7, #6]
 1711 036c 013B     		subs	r3, r3, #1
 1712 036e DBB2     		uxtb	r3, r3
 1713 0370 DBB2     		uxtb	r3, r3
 1714 0372 63F01F03 		orn	r3, r3, #31
 1715 0376 DBB2     		uxtb	r3, r3
 1716 0378 DBB2     		uxtb	r3, r3
 1717 037a 7B73     		strb	r3, [r7, #13]
 383:.\Protocolo.c **** 			buffer[6]=0xF8;
 1718              		.loc 1 383 0
 1719 037c F823     		movs	r3, #248
 1720 037e BB73     		strb	r3, [r7, #14]
 384:.\Protocolo.c **** 			if(decimal==4){
 1721              		.loc 1 384 0
 1722 0380 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 39


 1723 0382 042B     		cmp	r3, #4
 1724 0384 22D1     		bne	.L102
 385:.\Protocolo.c **** 				buffer[7]=(valor[2]|0xE0);
 1725              		.loc 1 385 0
 1726 0386 3B68     		ldr	r3, [r7]
 1727 0388 0233     		adds	r3, r3, #2
 1728 038a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1729 038c 63F01F03 		orn	r3, r3, #31
 1730 0390 DBB2     		uxtb	r3, r3
 1731 0392 FB73     		strb	r3, [r7, #15]
 386:.\Protocolo.c **** 				buffer[8]=(valor[3]|0xE0);
 1732              		.loc 1 386 0
 1733 0394 3B68     		ldr	r3, [r7]
 1734 0396 0333     		adds	r3, r3, #3
 1735 0398 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1736 039a 63F01F03 		orn	r3, r3, #31
 1737 039e DBB2     		uxtb	r3, r3
 1738 03a0 3B74     		strb	r3, [r7, #16]
 387:.\Protocolo.c **** 				buffer[9]=(valor[5]|0xE0);
 1739              		.loc 1 387 0
 1740 03a2 3B68     		ldr	r3, [r7]
 1741 03a4 0533     		adds	r3, r3, #5
 1742 03a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1743 03a8 63F01F03 		orn	r3, r3, #31
 1744 03ac DBB2     		uxtb	r3, r3
 1745 03ae 7B74     		strb	r3, [r7, #17]
 388:.\Protocolo.c **** 				buffer[10]=(valor[6]|0xE0);
 1746              		.loc 1 388 0
 1747 03b0 3B68     		ldr	r3, [r7]
 1748 03b2 0633     		adds	r3, r3, #6
 1749 03b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1750 03b6 63F01F03 		orn	r3, r3, #31
 1751 03ba DBB2     		uxtb	r3, r3
 1752 03bc BB74     		strb	r3, [r7, #18]
 389:.\Protocolo.c **** 				buffer[11]=(valor[7]|0xE0);
 1753              		.loc 1 389 0
 1754 03be 3B68     		ldr	r3, [r7]
 1755 03c0 0733     		adds	r3, r3, #7
 1756 03c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1757 03c4 63F01F03 		orn	r3, r3, #31
 1758 03c8 DBB2     		uxtb	r3, r3
 1759 03ca FB74     		strb	r3, [r7, #19]
 1760              	.L102:
 390:.\Protocolo.c **** 			}
 391:.\Protocolo.c **** 			if(decimal==3){
 1761              		.loc 1 391 0
 1762 03cc 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1763 03ce 032B     		cmp	r3, #3
 1764 03d0 22D1     		bne	.L103
 392:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 1765              		.loc 1 392 0
 1766 03d2 3B68     		ldr	r3, [r7]
 1767 03d4 0133     		adds	r3, r3, #1
 1768 03d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1769 03d8 63F01F03 		orn	r3, r3, #31
 1770 03dc DBB2     		uxtb	r3, r3
 1771 03de FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 40


 393:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 1772              		.loc 1 393 0
 1773 03e0 3B68     		ldr	r3, [r7]
 1774 03e2 0233     		adds	r3, r3, #2
 1775 03e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1776 03e6 63F01F03 		orn	r3, r3, #31
 1777 03ea DBB2     		uxtb	r3, r3
 1778 03ec 3B74     		strb	r3, [r7, #16]
 394:.\Protocolo.c **** 				buffer[9]=(valor[4]|0xE0);
 1779              		.loc 1 394 0
 1780 03ee 3B68     		ldr	r3, [r7]
 1781 03f0 0433     		adds	r3, r3, #4
 1782 03f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1783 03f4 63F01F03 		orn	r3, r3, #31
 1784 03f8 DBB2     		uxtb	r3, r3
 1785 03fa 7B74     		strb	r3, [r7, #17]
 395:.\Protocolo.c **** 				buffer[10]=(valor[5]|0xE0);
 1786              		.loc 1 395 0
 1787 03fc 3B68     		ldr	r3, [r7]
 1788 03fe 0533     		adds	r3, r3, #5
 1789 0400 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1790 0402 63F01F03 		orn	r3, r3, #31
 1791 0406 DBB2     		uxtb	r3, r3
 1792 0408 BB74     		strb	r3, [r7, #18]
 396:.\Protocolo.c **** 				buffer[11]=(valor[6]|0xE0);		
 1793              		.loc 1 396 0
 1794 040a 3B68     		ldr	r3, [r7]
 1795 040c 0633     		adds	r3, r3, #6
 1796 040e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1797 0410 63F01F03 		orn	r3, r3, #31
 1798 0414 DBB2     		uxtb	r3, r3
 1799 0416 FB74     		strb	r3, [r7, #19]
 1800              	.L103:
 397:.\Protocolo.c **** 			}
 398:.\Protocolo.c **** 			if(decimal==2){
 1801              		.loc 1 398 0
 1802 0418 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1803 041a 022B     		cmp	r3, #2
 1804 041c 1DD1     		bne	.L104
 399:.\Protocolo.c **** 				buffer[7]=0xE0;
 1805              		.loc 1 399 0
 1806 041e E023     		movs	r3, #224
 1807 0420 FB73     		strb	r3, [r7, #15]
 400:.\Protocolo.c **** 				buffer[8]=(valor[1]|0xE0);
 1808              		.loc 1 400 0
 1809 0422 3B68     		ldr	r3, [r7]
 1810 0424 0133     		adds	r3, r3, #1
 1811 0426 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1812 0428 63F01F03 		orn	r3, r3, #31
 1813 042c DBB2     		uxtb	r3, r3
 1814 042e 3B74     		strb	r3, [r7, #16]
 401:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 1815              		.loc 1 401 0
 1816 0430 3B68     		ldr	r3, [r7]
 1817 0432 0333     		adds	r3, r3, #3
 1818 0434 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1819 0436 63F01F03 		orn	r3, r3, #31
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 41


 1820 043a DBB2     		uxtb	r3, r3
 1821 043c 7B74     		strb	r3, [r7, #17]
 402:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 1822              		.loc 1 402 0
 1823 043e 3B68     		ldr	r3, [r7]
 1824 0440 0433     		adds	r3, r3, #4
 1825 0442 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1826 0444 63F01F03 		orn	r3, r3, #31
 1827 0448 DBB2     		uxtb	r3, r3
 1828 044a BB74     		strb	r3, [r7, #18]
 403:.\Protocolo.c **** 				buffer[11]=(valor[5]|0xE0);		
 1829              		.loc 1 403 0
 1830 044c 3B68     		ldr	r3, [r7]
 1831 044e 0533     		adds	r3, r3, #5
 1832 0450 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1833 0452 63F01F03 		orn	r3, r3, #31
 1834 0456 DBB2     		uxtb	r3, r3
 1835 0458 FB74     		strb	r3, [r7, #19]
 1836              	.L104:
 404:.\Protocolo.c **** 			}
 405:.\Protocolo.c **** 			if(decimal==0){
 1837              		.loc 1 405 0
 1838 045a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1839 045c 002B     		cmp	r3, #0
 1840 045e 18D1     		bne	.L105
 406:.\Protocolo.c **** 				buffer[7]=0xE0;
 1841              		.loc 1 406 0
 1842 0460 E023     		movs	r3, #224
 1843 0462 FB73     		strb	r3, [r7, #15]
 407:.\Protocolo.c **** 				buffer[8]=0xE0;
 1844              		.loc 1 407 0
 1845 0464 E023     		movs	r3, #224
 1846 0466 3B74     		strb	r3, [r7, #16]
 408:.\Protocolo.c **** 				buffer[9]=(valor[1]|0xE0);
 1847              		.loc 1 408 0
 1848 0468 3B68     		ldr	r3, [r7]
 1849 046a 0133     		adds	r3, r3, #1
 1850 046c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1851 046e 63F01F03 		orn	r3, r3, #31
 1852 0472 DBB2     		uxtb	r3, r3
 1853 0474 7B74     		strb	r3, [r7, #17]
 409:.\Protocolo.c **** 				buffer[10]=(valor[2]|0xE0);
 1854              		.loc 1 409 0
 1855 0476 3B68     		ldr	r3, [r7]
 1856 0478 0233     		adds	r3, r3, #2
 1857 047a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1858 047c 63F01F03 		orn	r3, r3, #31
 1859 0480 DBB2     		uxtb	r3, r3
 1860 0482 BB74     		strb	r3, [r7, #18]
 410:.\Protocolo.c **** 				buffer[11]=(valor[3]|0xE0);		
 1861              		.loc 1 410 0
 1862 0484 3B68     		ldr	r3, [r7]
 1863 0486 0333     		adds	r3, r3, #3
 1864 0488 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1865 048a 63F01F03 		orn	r3, r3, #31
 1866 048e DBB2     		uxtb	r3, r3
 1867 0490 FB74     		strb	r3, [r7, #19]
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 42


 1868              	.L105:
 411:.\Protocolo.c **** 			}			
 412:.\Protocolo.c **** 			buffer[12]=0xFB;
 1869              		.loc 1 412 0
 1870 0492 FB23     		movs	r3, #251
 1871 0494 3B75     		strb	r3, [r7, #20]
 413:.\Protocolo.c **** 			buffer[13]=0;
 1872              		.loc 1 413 0
 1873 0496 0023     		movs	r3, #0
 1874 0498 7B75     		strb	r3, [r7, #21]
 414:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 1875              		.loc 1 414 0
 1876 049a 0023     		movs	r3, #0
 1877 049c 7B77     		strb	r3, [r7, #29]
 1878 049e 0FE0     		b	.L106
 1879              	.L107:
 415:.\Protocolo.c **** 				buffer[13]+=(buffer[i]&0x0F);	
 1880              		.loc 1 415 0 discriminator 3
 1881 04a0 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 1882 04a2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1883 04a4 07F12001 		add	r1, r7, #32
 1884 04a8 0B44     		add	r3, r3, r1
 1885 04aa 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 1886 04ae 03F00F03 		and	r3, r3, #15
 1887 04b2 DBB2     		uxtb	r3, r3
 1888 04b4 1344     		add	r3, r3, r2
 1889 04b6 DBB2     		uxtb	r3, r3
 1890 04b8 7B75     		strb	r3, [r7, #21]
 414:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 1891              		.loc 1 414 0 discriminator 3
 1892 04ba 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1893 04bc 0133     		adds	r3, r3, #1
 1894 04be 7B77     		strb	r3, [r7, #29]
 1895              	.L106:
 414:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 1896              		.loc 1 414 0 is_stmt 0 discriminator 1
 1897 04c0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1898 04c2 0C2B     		cmp	r3, #12
 1899 04c4 ECD9     		bls	.L107
 416:.\Protocolo.c **** 			}
 417:.\Protocolo.c **** 			buffer[13]=(((~buffer[13])+1)&0x0F)|0xE0;			
 1900              		.loc 1 417 0 is_stmt 1
 1901 04c6 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 1902 04c8 5B42     		negs	r3, r3
 1903 04ca DBB2     		uxtb	r3, r3
 1904 04cc DBB2     		uxtb	r3, r3
 1905 04ce 03F00F03 		and	r3, r3, #15
 1906 04d2 DBB2     		uxtb	r3, r3
 1907 04d4 63F01F03 		orn	r3, r3, #31
 1908 04d8 DBB2     		uxtb	r3, r3
 1909 04da DBB2     		uxtb	r3, r3
 1910 04dc 7B75     		strb	r3, [r7, #21]
 418:.\Protocolo.c **** 			buffer[14]=0xF0;
 1911              		.loc 1 418 0
 1912 04de F023     		movs	r3, #240
 1913 04e0 BB75     		strb	r3, [r7, #22]
 419:.\Protocolo.c **** 			size=14;
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 43


 1914              		.loc 1 419 0
 1915 04e2 0E23     		movs	r3, #14
 1916 04e4 FB77     		strb	r3, [r7, #31]
 1917              	.L92:
 420:.\Protocolo.c **** 		}	
 421:.\Protocolo.c **** 	}	
 422:.\Protocolo.c **** 	if(version[1]==7){
 1918              		.loc 1 422 0
 1919 04e6 A24B     		ldr	r3, .L126
 1920 04e8 5B78     		ldrb	r3, [r3, #1]
 1921 04ea DBB2     		uxtb	r3, r3
 1922 04ec 072B     		cmp	r3, #7
 1923 04ee 40F06481 		bne	.L108
 423:.\Protocolo.c **** 		buffer[0]=0xFF;
 1924              		.loc 1 423 0
 1925 04f2 FF23     		movs	r3, #255
 1926 04f4 3B72     		strb	r3, [r7, #8]
 424:.\Protocolo.c **** 		buffer[1]=(0xE0|temp);
 1927              		.loc 1 424 0
 1928 04f6 BB7F     		ldrb	r3, [r7, #30]
 1929 04f8 63F01F03 		orn	r3, r3, #31
 1930 04fc DBB2     		uxtb	r3, r3
 1931 04fe 7B72     		strb	r3, [r7, #9]
 425:.\Protocolo.c **** 		buffer[2]=(0xF0|preset);
 1932              		.loc 1 425 0
 1933 0500 7B79     		ldrb	r3, [r7, #5]
 1934 0502 63F00F03 		orn	r3, r3, #15
 1935 0506 DBB2     		uxtb	r3, r3
 1936 0508 BB72     		strb	r3, [r7, #10]
 426:.\Protocolo.c **** 		buffer[3]=0xF4;
 1937              		.loc 1 426 0
 1938 050a F423     		movs	r3, #244
 1939 050c FB72     		strb	r3, [r7, #11]
 427:.\Protocolo.c **** 		buffer[4]=0xF8;	
 1940              		.loc 1 427 0
 1941 050e F823     		movs	r3, #248
 1942 0510 3B73     		strb	r3, [r7, #12]
 428:.\Protocolo.c **** 		buffer[5]=(valor[1]|0xE0);
 1943              		.loc 1 428 0
 1944 0512 3B68     		ldr	r3, [r7]
 1945 0514 0133     		adds	r3, r3, #1
 1946 0516 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1947 0518 63F01F03 		orn	r3, r3, #31
 1948 051c DBB2     		uxtb	r3, r3
 1949 051e 7B73     		strb	r3, [r7, #13]
 429:.\Protocolo.c **** 		buffer[6]=(valor[2]|0xE0);
 1950              		.loc 1 429 0
 1951 0520 3B68     		ldr	r3, [r7]
 1952 0522 0233     		adds	r3, r3, #2
 1953 0524 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1954 0526 63F01F03 		orn	r3, r3, #31
 1955 052a DBB2     		uxtb	r3, r3
 1956 052c BB73     		strb	r3, [r7, #14]
 430:.\Protocolo.c **** 		buffer[7]=(valor[3]|0xE0);
 1957              		.loc 1 430 0
 1958 052e 3B68     		ldr	r3, [r7]
 1959 0530 0333     		adds	r3, r3, #3
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 44


 1960 0532 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1961 0534 63F01F03 		orn	r3, r3, #31
 1962 0538 DBB2     		uxtb	r3, r3
 1963 053a FB73     		strb	r3, [r7, #15]
 431:.\Protocolo.c **** 		buffer[8]=(valor[4]|0xE0);
 1964              		.loc 1 431 0
 1965 053c 3B68     		ldr	r3, [r7]
 1966 053e 0433     		adds	r3, r3, #4
 1967 0540 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1968 0542 63F01F03 		orn	r3, r3, #31
 1969 0546 DBB2     		uxtb	r3, r3
 1970 0548 3B74     		strb	r3, [r7, #16]
 432:.\Protocolo.c **** 		buffer[9]=(valor[5]|0xE0);
 1971              		.loc 1 432 0
 1972 054a 3B68     		ldr	r3, [r7]
 1973 054c 0533     		adds	r3, r3, #5
 1974 054e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1975 0550 63F01F03 		orn	r3, r3, #31
 1976 0554 DBB2     		uxtb	r3, r3
 1977 0556 7B74     		strb	r3, [r7, #17]
 433:.\Protocolo.c **** 		buffer[10]=(valor[6]|0xE0);	
 1978              		.loc 1 433 0
 1979 0558 3B68     		ldr	r3, [r7]
 1980 055a 0633     		adds	r3, r3, #6
 1981 055c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1982 055e 63F01F03 		orn	r3, r3, #31
 1983 0562 DBB2     		uxtb	r3, r3
 1984 0564 BB74     		strb	r3, [r7, #18]
 434:.\Protocolo.c **** 		buffer[11]=(valor[7]|0xE0);
 1985              		.loc 1 434 0
 1986 0566 3B68     		ldr	r3, [r7]
 1987 0568 0733     		adds	r3, r3, #7
 1988 056a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1989 056c 63F01F03 		orn	r3, r3, #31
 1990 0570 DBB2     		uxtb	r3, r3
 1991 0572 FB74     		strb	r3, [r7, #19]
 435:.\Protocolo.c **** 		buffer[12]=0xE0;
 1992              		.loc 1 435 0
 1993 0574 E023     		movs	r3, #224
 1994 0576 3B75     		strb	r3, [r7, #20]
 436:.\Protocolo.c **** 		buffer[13]=0xFB;
 1995              		.loc 1 436 0
 1996 0578 FB23     		movs	r3, #251
 1997 057a 7B75     		strb	r3, [r7, #21]
 437:.\Protocolo.c **** 		buffer[14]=0;
 1998              		.loc 1 437 0
 1999 057c 0023     		movs	r3, #0
 2000 057e BB75     		strb	r3, [r7, #22]
 438:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2001              		.loc 1 438 0
 2002 0580 0023     		movs	r3, #0
 2003 0582 7B77     		strb	r3, [r7, #29]
 2004 0584 0FE0     		b	.L109
 2005              	.L110:
 439:.\Protocolo.c **** 			buffer[14]+=(buffer[i]&0x0F);	
 2006              		.loc 1 439 0 discriminator 3
 2007 0586 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 45


 2008 0588 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2009 058a 07F12001 		add	r1, r7, #32
 2010 058e 0B44     		add	r3, r3, r1
 2011 0590 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2012 0594 03F00F03 		and	r3, r3, #15
 2013 0598 DBB2     		uxtb	r3, r3
 2014 059a 1344     		add	r3, r3, r2
 2015 059c DBB2     		uxtb	r3, r3
 2016 059e BB75     		strb	r3, [r7, #22]
 438:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2017              		.loc 1 438 0 discriminator 3
 2018 05a0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2019 05a2 0133     		adds	r3, r3, #1
 2020 05a4 7B77     		strb	r3, [r7, #29]
 2021              	.L109:
 438:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2022              		.loc 1 438 0 is_stmt 0 discriminator 1
 2023 05a6 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2024 05a8 0D2B     		cmp	r3, #13
 2025 05aa ECD9     		bls	.L110
 440:.\Protocolo.c **** 		}
 441:.\Protocolo.c **** 		buffer[14]=(((~buffer[14])+1)&0x0F)|0xE0;
 2026              		.loc 1 441 0 is_stmt 1
 2027 05ac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2028 05ae 5B42     		negs	r3, r3
 2029 05b0 DBB2     		uxtb	r3, r3
 2030 05b2 DBB2     		uxtb	r3, r3
 2031 05b4 03F00F03 		and	r3, r3, #15
 2032 05b8 DBB2     		uxtb	r3, r3
 2033 05ba 63F01F03 		orn	r3, r3, #31
 2034 05be DBB2     		uxtb	r3, r3
 2035 05c0 DBB2     		uxtb	r3, r3
 2036 05c2 BB75     		strb	r3, [r7, #22]
 442:.\Protocolo.c **** 		buffer[15]=0xF0;
 2037              		.loc 1 442 0
 2038 05c4 F023     		movs	r3, #240
 2039 05c6 FB75     		strb	r3, [r7, #23]
 443:.\Protocolo.c **** 		size=15;
 2040              		.loc 1 443 0
 2041 05c8 0F23     		movs	r3, #15
 2042 05ca FB77     		strb	r3, [r7, #31]
 444:.\Protocolo.c **** 		if(preset==1){
 2043              		.loc 1 444 0
 2044 05cc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2045 05ce 012B     		cmp	r3, #1
 2046 05d0 40F0F380 		bne	.L108
 445:.\Protocolo.c **** 			buffer[4]=0xF6;
 2047              		.loc 1 445 0
 2048 05d4 F623     		movs	r3, #246
 2049 05d6 3B73     		strb	r3, [r7, #12]
 446:.\Protocolo.c **** 			buffer[5]=(0xE0|(grado-1));
 2050              		.loc 1 446 0
 2051 05d8 BB79     		ldrb	r3, [r7, #6]
 2052 05da 013B     		subs	r3, r3, #1
 2053 05dc DBB2     		uxtb	r3, r3
 2054 05de DBB2     		uxtb	r3, r3
 2055 05e0 63F01F03 		orn	r3, r3, #31
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 46


 2056 05e4 DBB2     		uxtb	r3, r3
 2057 05e6 DBB2     		uxtb	r3, r3
 2058 05e8 7B73     		strb	r3, [r7, #13]
 447:.\Protocolo.c **** 			buffer[6]=0xF8;
 2059              		.loc 1 447 0
 2060 05ea F823     		movs	r3, #248
 2061 05ec BB73     		strb	r3, [r7, #14]
 448:.\Protocolo.c **** 			if(decimal==4){
 2062              		.loc 1 448 0
 2063 05ee 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2064 05f0 042B     		cmp	r3, #4
 2065 05f2 2DD1     		bne	.L111
 449:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 2066              		.loc 1 449 0
 2067 05f4 3B68     		ldr	r3, [r7]
 2068 05f6 0133     		adds	r3, r3, #1
 2069 05f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2070 05fa 63F01F03 		orn	r3, r3, #31
 2071 05fe DBB2     		uxtb	r3, r3
 2072 0600 FB73     		strb	r3, [r7, #15]
 450:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 2073              		.loc 1 450 0
 2074 0602 3B68     		ldr	r3, [r7]
 2075 0604 0233     		adds	r3, r3, #2
 2076 0606 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2077 0608 63F01F03 		orn	r3, r3, #31
 2078 060c DBB2     		uxtb	r3, r3
 2079 060e 3B74     		strb	r3, [r7, #16]
 451:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 2080              		.loc 1 451 0
 2081 0610 3B68     		ldr	r3, [r7]
 2082 0612 0333     		adds	r3, r3, #3
 2083 0614 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2084 0616 63F01F03 		orn	r3, r3, #31
 2085 061a DBB2     		uxtb	r3, r3
 2086 061c 7B74     		strb	r3, [r7, #17]
 452:.\Protocolo.c **** 				buffer[10]=(valor[5]|0xE0);
 2087              		.loc 1 452 0
 2088 061e 3B68     		ldr	r3, [r7]
 2089 0620 0533     		adds	r3, r3, #5
 2090 0622 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2091 0624 63F01F03 		orn	r3, r3, #31
 2092 0628 DBB2     		uxtb	r3, r3
 2093 062a BB74     		strb	r3, [r7, #18]
 453:.\Protocolo.c **** 				buffer[11]=(valor[6]|0xE0);
 2094              		.loc 1 453 0
 2095 062c 3B68     		ldr	r3, [r7]
 2096 062e 0633     		adds	r3, r3, #6
 2097 0630 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2098 0632 63F01F03 		orn	r3, r3, #31
 2099 0636 DBB2     		uxtb	r3, r3
 2100 0638 FB74     		strb	r3, [r7, #19]
 454:.\Protocolo.c **** 				buffer[12]=(valor[7]|0xE0);	
 2101              		.loc 1 454 0
 2102 063a 3B68     		ldr	r3, [r7]
 2103 063c 0733     		adds	r3, r3, #7
 2104 063e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 47


 2105 0640 63F01F03 		orn	r3, r3, #31
 2106 0644 DBB2     		uxtb	r3, r3
 2107 0646 3B75     		strb	r3, [r7, #20]
 455:.\Protocolo.c **** 				buffer[13]=0xE0;	
 2108              		.loc 1 455 0
 2109 0648 E023     		movs	r3, #224
 2110 064a 7B75     		strb	r3, [r7, #21]
 456:.\Protocolo.c **** 				buffer[14]=0xE0;
 2111              		.loc 1 456 0
 2112 064c E023     		movs	r3, #224
 2113 064e BB75     		strb	r3, [r7, #22]
 2114              	.L111:
 457:.\Protocolo.c **** 			}
 458:.\Protocolo.c **** 			if(decimal==3){
 2115              		.loc 1 458 0
 2116 0650 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2117 0652 032B     		cmp	r3, #3
 2118 0654 2DD1     		bne	.L112
 459:.\Protocolo.c **** 				buffer[7]=0xE0;
 2119              		.loc 1 459 0
 2120 0656 E023     		movs	r3, #224
 2121 0658 FB73     		strb	r3, [r7, #15]
 460:.\Protocolo.c **** 				buffer[8]=(valor[1]|0xE0);
 2122              		.loc 1 460 0
 2123 065a 3B68     		ldr	r3, [r7]
 2124 065c 0133     		adds	r3, r3, #1
 2125 065e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2126 0660 63F01F03 		orn	r3, r3, #31
 2127 0664 DBB2     		uxtb	r3, r3
 2128 0666 3B74     		strb	r3, [r7, #16]
 461:.\Protocolo.c **** 				buffer[9]=(valor[2]|0xE0);
 2129              		.loc 1 461 0
 2130 0668 3B68     		ldr	r3, [r7]
 2131 066a 0233     		adds	r3, r3, #2
 2132 066c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2133 066e 63F01F03 		orn	r3, r3, #31
 2134 0672 DBB2     		uxtb	r3, r3
 2135 0674 7B74     		strb	r3, [r7, #17]
 462:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 2136              		.loc 1 462 0
 2137 0676 3B68     		ldr	r3, [r7]
 2138 0678 0433     		adds	r3, r3, #4
 2139 067a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2140 067c 63F01F03 		orn	r3, r3, #31
 2141 0680 DBB2     		uxtb	r3, r3
 2142 0682 BB74     		strb	r3, [r7, #18]
 463:.\Protocolo.c **** 				buffer[11]=(valor[5]|0xE0);
 2143              		.loc 1 463 0
 2144 0684 3B68     		ldr	r3, [r7]
 2145 0686 0533     		adds	r3, r3, #5
 2146 0688 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2147 068a 63F01F03 		orn	r3, r3, #31
 2148 068e DBB2     		uxtb	r3, r3
 2149 0690 FB74     		strb	r3, [r7, #19]
 464:.\Protocolo.c **** 				buffer[12]=(valor[6]|0xE0);
 2150              		.loc 1 464 0
 2151 0692 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 48


 2152 0694 0633     		adds	r3, r3, #6
 2153 0696 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2154 0698 63F01F03 		orn	r3, r3, #31
 2155 069c DBB2     		uxtb	r3, r3
 2156 069e 3B75     		strb	r3, [r7, #20]
 465:.\Protocolo.c **** 				buffer[13]=(valor[7]|0xE0);	
 2157              		.loc 1 465 0
 2158 06a0 3B68     		ldr	r3, [r7]
 2159 06a2 0733     		adds	r3, r3, #7
 2160 06a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2161 06a6 63F01F03 		orn	r3, r3, #31
 2162 06aa DBB2     		uxtb	r3, r3
 2163 06ac 7B75     		strb	r3, [r7, #21]
 466:.\Protocolo.c **** 				buffer[14]=0xE0;	
 2164              		.loc 1 466 0
 2165 06ae E023     		movs	r3, #224
 2166 06b0 BB75     		strb	r3, [r7, #22]
 2167              	.L112:
 467:.\Protocolo.c **** 			}
 468:.\Protocolo.c **** 			if(decimal==2){
 2168              		.loc 1 468 0
 2169 06b2 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2170 06b4 022B     		cmp	r3, #2
 2171 06b6 2DD1     		bne	.L113
 469:.\Protocolo.c **** 				buffer[7]=0xE0;
 2172              		.loc 1 469 0
 2173 06b8 E023     		movs	r3, #224
 2174 06ba FB73     		strb	r3, [r7, #15]
 470:.\Protocolo.c **** 				buffer[8]=0xE0;
 2175              		.loc 1 470 0
 2176 06bc E023     		movs	r3, #224
 2177 06be 3B74     		strb	r3, [r7, #16]
 471:.\Protocolo.c **** 				buffer[9]=(valor[1]|0xE0);
 2178              		.loc 1 471 0
 2179 06c0 3B68     		ldr	r3, [r7]
 2180 06c2 0133     		adds	r3, r3, #1
 2181 06c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2182 06c6 63F01F03 		orn	r3, r3, #31
 2183 06ca DBB2     		uxtb	r3, r3
 2184 06cc 7B74     		strb	r3, [r7, #17]
 472:.\Protocolo.c **** 				buffer[10]=(valor[3]|0xE0);
 2185              		.loc 1 472 0
 2186 06ce 3B68     		ldr	r3, [r7]
 2187 06d0 0333     		adds	r3, r3, #3
 2188 06d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2189 06d4 63F01F03 		orn	r3, r3, #31
 2190 06d8 DBB2     		uxtb	r3, r3
 2191 06da BB74     		strb	r3, [r7, #18]
 473:.\Protocolo.c **** 				buffer[11]=(valor[4]|0xE0);
 2192              		.loc 1 473 0
 2193 06dc 3B68     		ldr	r3, [r7]
 2194 06de 0433     		adds	r3, r3, #4
 2195 06e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2196 06e2 63F01F03 		orn	r3, r3, #31
 2197 06e6 DBB2     		uxtb	r3, r3
 2198 06e8 FB74     		strb	r3, [r7, #19]
 474:.\Protocolo.c **** 				buffer[12]=(valor[5]|0xE0);
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 49


 2199              		.loc 1 474 0
 2200 06ea 3B68     		ldr	r3, [r7]
 2201 06ec 0533     		adds	r3, r3, #5
 2202 06ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2203 06f0 63F01F03 		orn	r3, r3, #31
 2204 06f4 DBB2     		uxtb	r3, r3
 2205 06f6 3B75     		strb	r3, [r7, #20]
 475:.\Protocolo.c **** 				buffer[13]=(valor[6]|0xE0);	
 2206              		.loc 1 475 0
 2207 06f8 3B68     		ldr	r3, [r7]
 2208 06fa 0633     		adds	r3, r3, #6
 2209 06fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2210 06fe 63F01F03 		orn	r3, r3, #31
 2211 0702 DBB2     		uxtb	r3, r3
 2212 0704 7B75     		strb	r3, [r7, #21]
 476:.\Protocolo.c **** 				buffer[14]=(valor[7]|0xE0);	
 2213              		.loc 1 476 0
 2214 0706 3B68     		ldr	r3, [r7]
 2215 0708 0733     		adds	r3, r3, #7
 2216 070a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2217 070c 63F01F03 		orn	r3, r3, #31
 2218 0710 DBB2     		uxtb	r3, r3
 2219 0712 BB75     		strb	r3, [r7, #22]
 2220              	.L113:
 477:.\Protocolo.c **** 			}
 478:.\Protocolo.c **** 			if(decimal==0){
 2221              		.loc 1 478 0
 2222 0714 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2223 0716 002B     		cmp	r3, #0
 2224 0718 23D1     		bne	.L114
 479:.\Protocolo.c **** 				buffer[7]=0xE0;
 2225              		.loc 1 479 0
 2226 071a E023     		movs	r3, #224
 2227 071c FB73     		strb	r3, [r7, #15]
 480:.\Protocolo.c **** 				buffer[8]=0xE0;
 2228              		.loc 1 480 0
 2229 071e E023     		movs	r3, #224
 2230 0720 3B74     		strb	r3, [r7, #16]
 481:.\Protocolo.c **** 				buffer[9]=0xE0;
 2231              		.loc 1 481 0
 2232 0722 E023     		movs	r3, #224
 2233 0724 7B74     		strb	r3, [r7, #17]
 482:.\Protocolo.c **** 				buffer[10]=(valor[1]|0xE0);
 2234              		.loc 1 482 0
 2235 0726 3B68     		ldr	r3, [r7]
 2236 0728 0133     		adds	r3, r3, #1
 2237 072a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2238 072c 63F01F03 		orn	r3, r3, #31
 2239 0730 DBB2     		uxtb	r3, r3
 2240 0732 BB74     		strb	r3, [r7, #18]
 483:.\Protocolo.c **** 				buffer[11]=(valor[2]|0xE0);
 2241              		.loc 1 483 0
 2242 0734 3B68     		ldr	r3, [r7]
 2243 0736 0233     		adds	r3, r3, #2
 2244 0738 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2245 073a 63F01F03 		orn	r3, r3, #31
 2246 073e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 50


 2247 0740 FB74     		strb	r3, [r7, #19]
 484:.\Protocolo.c **** 				buffer[12]=(valor[3]|0xE0);
 2248              		.loc 1 484 0
 2249 0742 3B68     		ldr	r3, [r7]
 2250 0744 0333     		adds	r3, r3, #3
 2251 0746 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2252 0748 63F01F03 		orn	r3, r3, #31
 2253 074c DBB2     		uxtb	r3, r3
 2254 074e 3B75     		strb	r3, [r7, #20]
 485:.\Protocolo.c **** 				buffer[13]=(valor[4]|0xE0);	
 2255              		.loc 1 485 0
 2256 0750 3B68     		ldr	r3, [r7]
 2257 0752 0433     		adds	r3, r3, #4
 2258 0754 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2259 0756 63F01F03 		orn	r3, r3, #31
 2260 075a DBB2     		uxtb	r3, r3
 2261 075c 7B75     		strb	r3, [r7, #21]
 486:.\Protocolo.c **** 				buffer[14]=0xE0;	
 2262              		.loc 1 486 0
 2263 075e E023     		movs	r3, #224
 2264 0760 BB75     		strb	r3, [r7, #22]
 2265              	.L114:
 487:.\Protocolo.c **** 			}			
 488:.\Protocolo.c **** 			buffer[15]=0xFB;
 2266              		.loc 1 488 0
 2267 0762 FB23     		movs	r3, #251
 2268 0764 FB75     		strb	r3, [r7, #23]
 489:.\Protocolo.c **** 			buffer[16]=0;
 2269              		.loc 1 489 0
 2270 0766 0023     		movs	r3, #0
 2271 0768 3B76     		strb	r3, [r7, #24]
 490:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2272              		.loc 1 490 0
 2273 076a 0023     		movs	r3, #0
 2274 076c 7B77     		strb	r3, [r7, #29]
 2275 076e 11E0     		b	.L115
 2276              	.L127:
 2277              		.align	2
 2278              	.L126:
 2279 0770 00000000 		.word	version
 2280              	.L116:
 491:.\Protocolo.c **** 				buffer[16]+=(buffer[i]&0x0F);	
 2281              		.loc 1 491 0 discriminator 3
 2282 0774 3A7E     		ldrb	r2, [r7, #24]	@ zero_extendqisi2
 2283 0776 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2284 0778 07F12001 		add	r1, r7, #32
 2285 077c 0B44     		add	r3, r3, r1
 2286 077e 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2287 0782 03F00F03 		and	r3, r3, #15
 2288 0786 DBB2     		uxtb	r3, r3
 2289 0788 1344     		add	r3, r3, r2
 2290 078a DBB2     		uxtb	r3, r3
 2291 078c 3B76     		strb	r3, [r7, #24]
 490:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2292              		.loc 1 490 0 discriminator 3
 2293 078e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2294 0790 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 51


 2295 0792 7B77     		strb	r3, [r7, #29]
 2296              	.L115:
 490:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2297              		.loc 1 490 0 is_stmt 0 discriminator 1
 2298 0794 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2299 0796 0F2B     		cmp	r3, #15
 2300 0798 ECD9     		bls	.L116
 492:.\Protocolo.c **** 			}
 493:.\Protocolo.c **** 			buffer[16]=(((~buffer[16])+1)&0x0F)|0xE0;			
 2301              		.loc 1 493 0 is_stmt 1
 2302 079a 3B7E     		ldrb	r3, [r7, #24]	@ zero_extendqisi2
 2303 079c 5B42     		negs	r3, r3
 2304 079e DBB2     		uxtb	r3, r3
 2305 07a0 DBB2     		uxtb	r3, r3
 2306 07a2 03F00F03 		and	r3, r3, #15
 2307 07a6 DBB2     		uxtb	r3, r3
 2308 07a8 63F01F03 		orn	r3, r3, #31
 2309 07ac DBB2     		uxtb	r3, r3
 2310 07ae DBB2     		uxtb	r3, r3
 2311 07b0 3B76     		strb	r3, [r7, #24]
 494:.\Protocolo.c **** 			buffer[17]=0xF0;
 2312              		.loc 1 494 0
 2313 07b2 F023     		movs	r3, #240
 2314 07b4 7B76     		strb	r3, [r7, #25]
 495:.\Protocolo.c **** 			size=17;
 2315              		.loc 1 495 0
 2316 07b6 1123     		movs	r3, #17
 2317 07b8 FB77     		strb	r3, [r7, #31]
 2318              	.L108:
 496:.\Protocolo.c **** 		}		
 497:.\Protocolo.c **** 	}
 498:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 2319              		.loc 1 498 0
 2320 07ba FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 499:.\Protocolo.c **** 	Surtidor_PutChar(0x20|dir);
 2321              		.loc 1 499 0
 2322 07be FB79     		ldrb	r3, [r7, #7]
 2323 07c0 43F02003 		orr	r3, r3, #32
 2324 07c4 DBB2     		uxtb	r3, r3
 2325 07c6 1846     		mov	r0, r3
 2326 07c8 FFF7FEFF 		bl	Surtidor_PutChar
 500:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 2327              		.loc 1 500 0
 2328 07cc 2A48     		ldr	r0, .L128
 2329 07ce FFF7FEFF 		bl	isr_1_StartEx
 501:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 2330              		.loc 1 501 0
 2331 07d2 FFF7FEFF 		bl	Timer_RxSurtidor_Start
 502:.\Protocolo.c ****     rx_timeout=0;
 2332              		.loc 1 502 0
 2333 07d6 294B     		ldr	r3, .L128+4
 2334 07d8 0022     		movs	r2, #0
 2335 07da 1A70     		strb	r2, [r3]
 503:.\Protocolo.c ****     CyDelay(10);
 2336              		.loc 1 503 0
 2337 07dc 0A20     		movs	r0, #10
 2338 07de FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 52


 504:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 2339              		.loc 1 504 0
 2340 07e2 0BE0     		b	.L117
 2341              	.L118:
 505:.\Protocolo.c **** 		if(rx_timeout==1){
 2342              		.loc 1 505 0
 2343 07e4 254B     		ldr	r3, .L128+4
 2344 07e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2345 07e8 012B     		cmp	r3, #1
 2346 07ea 07D1     		bne	.L117
 506:.\Protocolo.c **** 			isr_1_Stop();
 2347              		.loc 1 506 0
 2348 07ec FFF7FEFF 		bl	isr_1_Stop
 507:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 2349              		.loc 1 507 0
 2350 07f0 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 508:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 2351              		.loc 1 508 0
 2352 07f4 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 509:.\Protocolo.c **** 			return 0;
 2353              		.loc 1 509 0
 2354 07f8 0023     		movs	r3, #0
 2355 07fa 39E0     		b	.L123
 2356              	.L117:
 504:.\Protocolo.c **** 		if(rx_timeout==1){
 2357              		.loc 1 504 0
 2358 07fc FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2359 0800 0346     		mov	r3, r0
 2360 0802 002B     		cmp	r3, #0
 2361 0804 EED0     		beq	.L118
 510:.\Protocolo.c **** 		}
 511:.\Protocolo.c **** 	}
 512:.\Protocolo.c **** 	isr_1_Stop();
 2362              		.loc 1 512 0
 2363 0806 FFF7FEFF 		bl	isr_1_Stop
 513:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();	
 2364              		.loc 1 513 0
 2365 080a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 514:.\Protocolo.c **** 	if(Surtidor_ReadRxData()==(0xD0|dir)){
 2366              		.loc 1 514 0
 2367 080e FFF7FEFF 		bl	Surtidor_ReadRxData
 2368 0812 0346     		mov	r3, r0
 2369 0814 1A46     		mov	r2, r3
 2370 0816 FB79     		ldrb	r3, [r7, #7]
 2371 0818 63F02F03 		orn	r3, r3, #47
 2372 081c DBB2     		uxtb	r3, r3
 2373 081e 9A42     		cmp	r2, r3
 2374 0820 25D1     		bne	.L119
 515:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 2375              		.loc 1 515 0
 2376 0822 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 516:.\Protocolo.c **** 		CyDelay(10);
 2377              		.loc 1 516 0
 2378 0826 0A20     		movs	r0, #10
 2379 0828 FFF7FEFF 		bl	CyDelay
 517:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2380              		.loc 1 517 0
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 53


 2381 082c 0023     		movs	r3, #0
 2382 082e 7B77     		strb	r3, [r7, #29]
 2383 0830 0BE0     		b	.L120
 2384              	.L121:
 518:.\Protocolo.c ****            	Surtidor_PutChar(buffer[i]);
 2385              		.loc 1 518 0 discriminator 3
 2386 0832 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2387 0834 07F12002 		add	r2, r7, #32
 2388 0838 1344     		add	r3, r3, r2
 2389 083a 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2390 083e 1846     		mov	r0, r3
 2391 0840 FFF7FEFF 		bl	Surtidor_PutChar
 517:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2392              		.loc 1 517 0 discriminator 3
 2393 0844 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2394 0846 0133     		adds	r3, r3, #1
 2395 0848 7B77     		strb	r3, [r7, #29]
 2396              	.L120:
 517:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2397              		.loc 1 517 0 is_stmt 0 discriminator 1
 2398 084a 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 2399 084c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2400 084e 9A42     		cmp	r2, r3
 2401 0850 EFD9     		bls	.L121
 519:.\Protocolo.c ****         }
 520:.\Protocolo.c **** 		CyDelay(50);		
 2402              		.loc 1 520 0 is_stmt 1
 2403 0852 3220     		movs	r0, #50
 2404 0854 FFF7FEFF 		bl	CyDelay
 521:.\Protocolo.c **** 		if(get_estado(dir)==0){
 2405              		.loc 1 521 0
 2406 0858 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2407 085a 1846     		mov	r0, r3
 2408 085c FFF7FEFF 		bl	get_estado
 2409 0860 0346     		mov	r3, r0
 2410 0862 002B     		cmp	r3, #0
 2411 0864 01D1     		bne	.L122
 522:.\Protocolo.c **** 			return 0;
 2412              		.loc 1 522 0
 2413 0866 0023     		movs	r3, #0
 2414 0868 02E0     		b	.L123
 2415              	.L122:
 523:.\Protocolo.c **** 		}
 524:.\Protocolo.c **** 		else{
 525:.\Protocolo.c **** 			return 1;
 2416              		.loc 1 525 0
 2417 086a 0123     		movs	r3, #1
 2418 086c 00E0     		b	.L123
 2419              	.L119:
 526:.\Protocolo.c **** 		}
 527:.\Protocolo.c **** 	}
 528:.\Protocolo.c **** 	else{
 529:.\Protocolo.c **** 		return 0;
 2420              		.loc 1 529 0
 2421 086e 0023     		movs	r3, #0
 2422              	.L123:
 530:.\Protocolo.c **** 	}
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 54


 531:.\Protocolo.c **** }
 2423              		.loc 1 531 0 discriminator 1
 2424 0870 1846     		mov	r0, r3
 2425 0872 2037     		adds	r7, r7, #32
 2426              		.cfi_def_cfa_offset 8
 2427 0874 BD46     		mov	sp, r7
 2428              		.cfi_def_cfa_register 13
 2429              		@ sp needed
 2430 0876 80BD     		pop	{r7, pc}
 2431              	.L129:
 2432              		.align	2
 2433              	.L128:
 2434 0878 00000000 		.word	Rx_Surtidor
 2435 087c 00000000 		.word	rx_timeout
 2436              		.cfi_endproc
 2437              	.LFE69:
 2438              		.size	programar, .-programar
 2439              		.section	.text.cambiar_precio,"ax",%progbits
 2440              		.align	2
 2441              		.global	cambiar_precio
 2442              		.thumb
 2443              		.thumb_func
 2444              		.type	cambiar_precio, %function
 2445              	cambiar_precio:
 2446              	.LFB70:
 532:.\Protocolo.c **** 
 533:.\Protocolo.c **** /**
 534:.\Protocolo.c **** * cambiar_precio
 535:.\Protocolo.c **** * @brief Realiza el cambio de precio al producto según lo enviado por el Beagle
 536:.\Protocolo.c **** * @param dir posición del surtidor
 537:.\Protocolo.c **** * @param *precio apuntador al precio con el que se va a realizar el cambio
 538:.\Protocolo.c **** * @param num_man grado del equipo (manguera)
 539:.\Protocolo.c **** * @return 0 si hay error, 1 si realiza el cambio de precio
 540:.\Protocolo.c **** *
 541:.\Protocolo.c **** */
 542:.\Protocolo.c **** uint8 cambiar_precio(uint8 dir, uint8 *precio, uint8 num_man){
 2447              		.loc 1 542 0
 2448              		.cfi_startproc
 2449              		@ args = 0, pretend = 0, frame = 32
 2450              		@ frame_needed = 1, uses_anonymous_args = 0
 2451 0000 80B5     		push	{r7, lr}
 2452              		.cfi_def_cfa_offset 8
 2453              		.cfi_offset 7, -8
 2454              		.cfi_offset 14, -4
 2455 0002 88B0     		sub	sp, sp, #32
 2456              		.cfi_def_cfa_offset 40
 2457 0004 00AF     		add	r7, sp, #0
 2458              		.cfi_def_cfa_register 7
 2459 0006 0346     		mov	r3, r0
 2460 0008 3960     		str	r1, [r7]
 2461 000a FB71     		strb	r3, [r7, #7]
 2462 000c 1346     		mov	r3, r2
 2463 000e BB71     		strb	r3, [r7, #6]
 543:.\Protocolo.c **** 	uint8 buffer[15]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},size,x;
 2464              		.loc 1 543 0
 2465 0010 0023     		movs	r3, #0
 2466 0012 3B73     		strb	r3, [r7, #12]
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 55


 2467 0014 0023     		movs	r3, #0
 2468 0016 7B73     		strb	r3, [r7, #13]
 2469 0018 0023     		movs	r3, #0
 2470 001a BB73     		strb	r3, [r7, #14]
 2471 001c 0023     		movs	r3, #0
 2472 001e FB73     		strb	r3, [r7, #15]
 2473 0020 0023     		movs	r3, #0
 2474 0022 3B74     		strb	r3, [r7, #16]
 2475 0024 0023     		movs	r3, #0
 2476 0026 7B74     		strb	r3, [r7, #17]
 2477 0028 0023     		movs	r3, #0
 2478 002a BB74     		strb	r3, [r7, #18]
 2479 002c 0023     		movs	r3, #0
 2480 002e FB74     		strb	r3, [r7, #19]
 2481 0030 0023     		movs	r3, #0
 2482 0032 3B75     		strb	r3, [r7, #20]
 2483 0034 0023     		movs	r3, #0
 2484 0036 7B75     		strb	r3, [r7, #21]
 2485 0038 0023     		movs	r3, #0
 2486 003a BB75     		strb	r3, [r7, #22]
 2487 003c 0023     		movs	r3, #0
 2488 003e FB75     		strb	r3, [r7, #23]
 2489 0040 0023     		movs	r3, #0
 2490 0042 3B76     		strb	r3, [r7, #24]
 2491 0044 0023     		movs	r3, #0
 2492 0046 7B76     		strb	r3, [r7, #25]
 2493 0048 0023     		movs	r3, #0
 2494 004a BB76     		strb	r3, [r7, #26]
 544:.\Protocolo.c **** 	if(version[1]!=7){
 2495              		.loc 1 544 0
 2496 004c 884B     		ldr	r3, .L149
 2497 004e 5B78     		ldrb	r3, [r3, #1]
 2498 0050 DBB2     		uxtb	r3, r3
 2499 0052 072B     		cmp	r3, #7
 2500 0054 56D0     		beq	.L131
 545:.\Protocolo.c **** 		buffer[0]=0xFF;
 2501              		.loc 1 545 0
 2502 0056 FF23     		movs	r3, #255
 2503 0058 3B73     		strb	r3, [r7, #12]
 546:.\Protocolo.c **** 		buffer[1]=0xE5;
 2504              		.loc 1 546 0
 2505 005a E523     		movs	r3, #229
 2506 005c 7B73     		strb	r3, [r7, #13]
 547:.\Protocolo.c **** 		buffer[2]=0xF4;
 2507              		.loc 1 547 0
 2508 005e F423     		movs	r3, #244
 2509 0060 BB73     		strb	r3, [r7, #14]
 548:.\Protocolo.c **** 		buffer[3]=0xF6;
 2510              		.loc 1 548 0
 2511 0062 F623     		movs	r3, #246
 2512 0064 FB73     		strb	r3, [r7, #15]
 549:.\Protocolo.c **** 		buffer[4]=(0xE0|(num_man-1));
 2513              		.loc 1 549 0
 2514 0066 BB79     		ldrb	r3, [r7, #6]
 2515 0068 013B     		subs	r3, r3, #1
 2516 006a DBB2     		uxtb	r3, r3
 2517 006c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 56


 2518 006e 63F01F03 		orn	r3, r3, #31
 2519 0072 DBB2     		uxtb	r3, r3
 2520 0074 DBB2     		uxtb	r3, r3
 2521 0076 3B74     		strb	r3, [r7, #16]
 550:.\Protocolo.c **** 		buffer[5]=0xF7;	
 2522              		.loc 1 550 0
 2523 0078 F723     		movs	r3, #247
 2524 007a 7B74     		strb	r3, [r7, #17]
 551:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 2525              		.loc 1 551 0
 2526 007c 0623     		movs	r3, #6
 2527 007e BB77     		strb	r3, [r7, #30]
 2528 0080 15E0     		b	.L132
 2529              	.L133:
 552:.\Protocolo.c **** 			buffer[x]=(0xE0|(precio[x-6]&0x0F));
 2530              		.loc 1 552 0 discriminator 3
 2531 0082 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2532 0084 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2533 0086 063A     		subs	r2, r2, #6
 2534 0088 3968     		ldr	r1, [r7]
 2535 008a 0A44     		add	r2, r2, r1
 2536 008c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2537 008e D2B2     		uxtb	r2, r2
 2538 0090 02F00F02 		and	r2, r2, #15
 2539 0094 D2B2     		uxtb	r2, r2
 2540 0096 62F01F02 		orn	r2, r2, #31
 2541 009a D2B2     		uxtb	r2, r2
 2542 009c D2B2     		uxtb	r2, r2
 2543 009e 07F12001 		add	r1, r7, #32
 2544 00a2 0B44     		add	r3, r3, r1
 2545 00a4 03F8142C 		strb	r2, [r3, #-20]
 551:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 2546              		.loc 1 551 0 discriminator 3
 2547 00a8 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2548 00aa 0133     		adds	r3, r3, #1
 2549 00ac BB77     		strb	r3, [r7, #30]
 2550              	.L132:
 551:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 2551              		.loc 1 551 0 is_stmt 0 discriminator 1
 2552 00ae BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2553 00b0 092B     		cmp	r3, #9
 2554 00b2 E6D9     		bls	.L133
 553:.\Protocolo.c **** 		}
 554:.\Protocolo.c **** 		buffer[10]=0xFB;
 2555              		.loc 1 554 0 is_stmt 1
 2556 00b4 FB23     		movs	r3, #251
 2557 00b6 BB75     		strb	r3, [r7, #22]
 555:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 2558              		.loc 1 555 0
 2559 00b8 0023     		movs	r3, #0
 2560 00ba BB77     		strb	r3, [r7, #30]
 2561 00bc 0FE0     		b	.L134
 2562              	.L135:
 556:.\Protocolo.c **** 			buffer[11]+=(buffer[x]&0x0F);	
 2563              		.loc 1 556 0 discriminator 3
 2564 00be FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2565 00c0 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 57


 2566 00c2 07F12001 		add	r1, r7, #32
 2567 00c6 0B44     		add	r3, r3, r1
 2568 00c8 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 2569 00cc 03F00F03 		and	r3, r3, #15
 2570 00d0 DBB2     		uxtb	r3, r3
 2571 00d2 1344     		add	r3, r3, r2
 2572 00d4 DBB2     		uxtb	r3, r3
 2573 00d6 FB75     		strb	r3, [r7, #23]
 555:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 2574              		.loc 1 555 0 discriminator 3
 2575 00d8 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2576 00da 0133     		adds	r3, r3, #1
 2577 00dc BB77     		strb	r3, [r7, #30]
 2578              	.L134:
 555:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 2579              		.loc 1 555 0 is_stmt 0 discriminator 1
 2580 00de BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2581 00e0 0A2B     		cmp	r3, #10
 2582 00e2 ECD9     		bls	.L135
 557:.\Protocolo.c **** 		}
 558:.\Protocolo.c **** 		buffer[11]=(((~buffer[11])+1)&0x0F)|0xE0;
 2583              		.loc 1 558 0 is_stmt 1
 2584 00e4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2585 00e6 5B42     		negs	r3, r3
 2586 00e8 DBB2     		uxtb	r3, r3
 2587 00ea DBB2     		uxtb	r3, r3
 2588 00ec 03F00F03 		and	r3, r3, #15
 2589 00f0 DBB2     		uxtb	r3, r3
 2590 00f2 63F01F03 		orn	r3, r3, #31
 2591 00f6 DBB2     		uxtb	r3, r3
 2592 00f8 DBB2     		uxtb	r3, r3
 2593 00fa FB75     		strb	r3, [r7, #23]
 559:.\Protocolo.c **** 		buffer[12]=0xF0;
 2594              		.loc 1 559 0
 2595 00fc F023     		movs	r3, #240
 2596 00fe 3B76     		strb	r3, [r7, #24]
 560:.\Protocolo.c **** 		size=12;
 2597              		.loc 1 560 0
 2598 0100 0C23     		movs	r3, #12
 2599 0102 FB77     		strb	r3, [r7, #31]
 2600              	.L131:
 561:.\Protocolo.c **** 	}
 562:.\Protocolo.c **** 	if(version[1]==7){
 2601              		.loc 1 562 0
 2602 0104 5A4B     		ldr	r3, .L149
 2603 0106 5B78     		ldrb	r3, [r3, #1]
 2604 0108 DBB2     		uxtb	r3, r3
 2605 010a 072B     		cmp	r3, #7
 2606 010c 53D1     		bne	.L136
 563:.\Protocolo.c **** 		buffer[0]=0xFF;
 2607              		.loc 1 563 0
 2608 010e FF23     		movs	r3, #255
 2609 0110 3B73     		strb	r3, [r7, #12]
 564:.\Protocolo.c **** 		buffer[1]=0xE3;
 2610              		.loc 1 564 0
 2611 0112 E323     		movs	r3, #227
 2612 0114 7B73     		strb	r3, [r7, #13]
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 58


 565:.\Protocolo.c **** 		buffer[2]=0xF4;
 2613              		.loc 1 565 0
 2614 0116 F423     		movs	r3, #244
 2615 0118 BB73     		strb	r3, [r7, #14]
 566:.\Protocolo.c **** 		buffer[3]=0xF6;
 2616              		.loc 1 566 0
 2617 011a F623     		movs	r3, #246
 2618 011c FB73     		strb	r3, [r7, #15]
 567:.\Protocolo.c **** 		buffer[4]=(0xE0|(num_man-1));
 2619              		.loc 1 567 0
 2620 011e BB79     		ldrb	r3, [r7, #6]
 2621 0120 013B     		subs	r3, r3, #1
 2622 0122 DBB2     		uxtb	r3, r3
 2623 0124 DBB2     		uxtb	r3, r3
 2624 0126 63F01F03 		orn	r3, r3, #31
 2625 012a DBB2     		uxtb	r3, r3
 2626 012c DBB2     		uxtb	r3, r3
 2627 012e 3B74     		strb	r3, [r7, #16]
 568:.\Protocolo.c **** 		buffer[5]=0xF7;		
 2628              		.loc 1 568 0
 2629 0130 F723     		movs	r3, #247
 2630 0132 7B74     		strb	r3, [r7, #17]
 569:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 2631              		.loc 1 569 0
 2632 0134 0623     		movs	r3, #6
 2633 0136 BB77     		strb	r3, [r7, #30]
 2634 0138 10E0     		b	.L137
 2635              	.L138:
 570:.\Protocolo.c **** 			buffer[x]=(0xE0|precio[x-6]);
 2636              		.loc 1 570 0 discriminator 3
 2637 013a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2638 013c BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2639 013e 063A     		subs	r2, r2, #6
 2640 0140 3968     		ldr	r1, [r7]
 2641 0142 0A44     		add	r2, r2, r1
 2642 0144 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2643 0146 62F01F02 		orn	r2, r2, #31
 2644 014a D2B2     		uxtb	r2, r2
 2645 014c 07F12001 		add	r1, r7, #32
 2646 0150 0B44     		add	r3, r3, r1
 2647 0152 03F8142C 		strb	r2, [r3, #-20]
 569:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 2648              		.loc 1 569 0 discriminator 3
 2649 0156 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2650 0158 0133     		adds	r3, r3, #1
 2651 015a BB77     		strb	r3, [r7, #30]
 2652              	.L137:
 569:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 2653              		.loc 1 569 0 is_stmt 0 discriminator 1
 2654 015c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2655 015e 0A2B     		cmp	r3, #10
 2656 0160 EBD9     		bls	.L138
 571:.\Protocolo.c **** 		}
 572:.\Protocolo.c **** 		buffer[11]=0xE0;
 2657              		.loc 1 572 0 is_stmt 1
 2658 0162 E023     		movs	r3, #224
 2659 0164 FB75     		strb	r3, [r7, #23]
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 59


 573:.\Protocolo.c **** 		buffer[12]=0xFB;
 2660              		.loc 1 573 0
 2661 0166 FB23     		movs	r3, #251
 2662 0168 3B76     		strb	r3, [r7, #24]
 574:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 2663              		.loc 1 574 0
 2664 016a 0023     		movs	r3, #0
 2665 016c BB77     		strb	r3, [r7, #30]
 2666 016e 0FE0     		b	.L139
 2667              	.L140:
 575:.\Protocolo.c **** 			buffer[13]+=(buffer[x]&0x0F);	
 2668              		.loc 1 575 0 discriminator 3
 2669 0170 7A7E     		ldrb	r2, [r7, #25]	@ zero_extendqisi2
 2670 0172 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2671 0174 07F12001 		add	r1, r7, #32
 2672 0178 0B44     		add	r3, r3, r1
 2673 017a 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 2674 017e 03F00F03 		and	r3, r3, #15
 2675 0182 DBB2     		uxtb	r3, r3
 2676 0184 1344     		add	r3, r3, r2
 2677 0186 DBB2     		uxtb	r3, r3
 2678 0188 7B76     		strb	r3, [r7, #25]
 574:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 2679              		.loc 1 574 0 discriminator 3
 2680 018a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2681 018c 0133     		adds	r3, r3, #1
 2682 018e BB77     		strb	r3, [r7, #30]
 2683              	.L139:
 574:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 2684              		.loc 1 574 0 is_stmt 0 discriminator 1
 2685 0190 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2686 0192 0C2B     		cmp	r3, #12
 2687 0194 ECD9     		bls	.L140
 576:.\Protocolo.c **** 		}
 577:.\Protocolo.c **** 		buffer[13]=(((~buffer[13])+1)&0x0F)|0xE0;
 2688              		.loc 1 577 0 is_stmt 1
 2689 0196 7B7E     		ldrb	r3, [r7, #25]	@ zero_extendqisi2
 2690 0198 5B42     		negs	r3, r3
 2691 019a DBB2     		uxtb	r3, r3
 2692 019c DBB2     		uxtb	r3, r3
 2693 019e 03F00F03 		and	r3, r3, #15
 2694 01a2 DBB2     		uxtb	r3, r3
 2695 01a4 63F01F03 		orn	r3, r3, #31
 2696 01a8 DBB2     		uxtb	r3, r3
 2697 01aa DBB2     		uxtb	r3, r3
 2698 01ac 7B76     		strb	r3, [r7, #25]
 578:.\Protocolo.c **** 		buffer[14]=0xF0;
 2699              		.loc 1 578 0
 2700 01ae F023     		movs	r3, #240
 2701 01b0 BB76     		strb	r3, [r7, #26]
 579:.\Protocolo.c **** 		size=14;
 2702              		.loc 1 579 0
 2703 01b2 0E23     		movs	r3, #14
 2704 01b4 FB77     		strb	r3, [r7, #31]
 2705              	.L136:
 580:.\Protocolo.c **** 	}
 581:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 60


 2706              		.loc 1 581 0
 2707 01b6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 582:.\Protocolo.c **** 	Surtidor_PutChar(0x20|dir);
 2708              		.loc 1 582 0
 2709 01ba FB79     		ldrb	r3, [r7, #7]
 2710 01bc 43F02003 		orr	r3, r3, #32
 2711 01c0 DBB2     		uxtb	r3, r3
 2712 01c2 1846     		mov	r0, r3
 2713 01c4 FFF7FEFF 		bl	Surtidor_PutChar
 583:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 2714              		.loc 1 583 0
 2715 01c8 2A48     		ldr	r0, .L149+4
 2716 01ca FFF7FEFF 		bl	isr_1_StartEx
 584:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 2717              		.loc 1 584 0
 2718 01ce FFF7FEFF 		bl	Timer_RxSurtidor_Start
 585:.\Protocolo.c ****     rx_timeout=0;
 2719              		.loc 1 585 0
 2720 01d2 294B     		ldr	r3, .L149+8
 2721 01d4 0022     		movs	r2, #0
 2722 01d6 1A70     		strb	r2, [r3]
 586:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 2723              		.loc 1 586 0
 2724 01d8 0BE0     		b	.L141
 2725              	.L143:
 587:.\Protocolo.c **** 		if(rx_timeout==1){
 2726              		.loc 1 587 0
 2727 01da 274B     		ldr	r3, .L149+8
 2728 01dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2729 01de 012B     		cmp	r3, #1
 2730 01e0 07D1     		bne	.L141
 588:.\Protocolo.c **** 			isr_1_Stop();
 2731              		.loc 1 588 0
 2732 01e2 FFF7FEFF 		bl	isr_1_Stop
 589:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 2733              		.loc 1 589 0
 2734 01e6 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 590:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 2735              		.loc 1 590 0
 2736 01ea FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 591:.\Protocolo.c **** 			return 0;
 2737              		.loc 1 591 0
 2738 01ee 0023     		movs	r3, #0
 2739 01f0 39E0     		b	.L148
 2740              	.L141:
 586:.\Protocolo.c **** 		if(rx_timeout==1){
 2741              		.loc 1 586 0
 2742 01f2 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2743 01f6 0346     		mov	r3, r0
 2744 01f8 002B     		cmp	r3, #0
 2745 01fa EED0     		beq	.L143
 592:.\Protocolo.c **** 		}
 593:.\Protocolo.c **** 	}
 594:.\Protocolo.c **** 	isr_1_Stop();
 2746              		.loc 1 594 0
 2747 01fc FFF7FEFF 		bl	isr_1_Stop
 595:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 61


 2748              		.loc 1 595 0
 2749 0200 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 596:.\Protocolo.c **** 	if(Surtidor_ReadRxData()==(0xD0|dir)){
 2750              		.loc 1 596 0
 2751 0204 FFF7FEFF 		bl	Surtidor_ReadRxData
 2752 0208 0346     		mov	r3, r0
 2753 020a 1A46     		mov	r2, r3
 2754 020c FB79     		ldrb	r3, [r7, #7]
 2755 020e 63F02F03 		orn	r3, r3, #47
 2756 0212 DBB2     		uxtb	r3, r3
 2757 0214 9A42     		cmp	r2, r3
 2758 0216 25D1     		bne	.L144
 597:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 2759              		.loc 1 597 0
 2760 0218 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 598:.\Protocolo.c **** 		CyDelay(10);
 2761              		.loc 1 598 0
 2762 021c 0A20     		movs	r0, #10
 2763 021e FFF7FEFF 		bl	CyDelay
 599:.\Protocolo.c ****         for(x=0;x<=size;x++){
 2764              		.loc 1 599 0
 2765 0222 0023     		movs	r3, #0
 2766 0224 BB77     		strb	r3, [r7, #30]
 2767 0226 0BE0     		b	.L145
 2768              	.L146:
 600:.\Protocolo.c ****            	Surtidor_PutChar(buffer[x]);
 2769              		.loc 1 600 0 discriminator 3
 2770 0228 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2771 022a 07F12002 		add	r2, r7, #32
 2772 022e 1344     		add	r3, r3, r2
 2773 0230 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 2774 0234 1846     		mov	r0, r3
 2775 0236 FFF7FEFF 		bl	Surtidor_PutChar
 599:.\Protocolo.c ****         for(x=0;x<=size;x++){
 2776              		.loc 1 599 0 discriminator 3
 2777 023a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2778 023c 0133     		adds	r3, r3, #1
 2779 023e BB77     		strb	r3, [r7, #30]
 2780              	.L145:
 599:.\Protocolo.c ****         for(x=0;x<=size;x++){
 2781              		.loc 1 599 0 is_stmt 0 discriminator 1
 2782 0240 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2783 0242 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2784 0244 9A42     		cmp	r2, r3
 2785 0246 EFD9     		bls	.L146
 601:.\Protocolo.c ****         }
 602:.\Protocolo.c **** 		CyDelay(50);		
 2786              		.loc 1 602 0 is_stmt 1
 2787 0248 3220     		movs	r0, #50
 2788 024a FFF7FEFF 		bl	CyDelay
 603:.\Protocolo.c **** 		if(get_estado(dir)==0){
 2789              		.loc 1 603 0
 2790 024e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2791 0250 1846     		mov	r0, r3
 2792 0252 FFF7FEFF 		bl	get_estado
 2793 0256 0346     		mov	r3, r0
 2794 0258 002B     		cmp	r3, #0
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 62


 2795 025a 01D1     		bne	.L147
 604:.\Protocolo.c **** 			return 0;
 2796              		.loc 1 604 0
 2797 025c 0023     		movs	r3, #0
 2798 025e 02E0     		b	.L148
 2799              	.L147:
 605:.\Protocolo.c **** 		}
 606:.\Protocolo.c **** 		else{
 607:.\Protocolo.c **** 			return 1;
 2800              		.loc 1 607 0
 2801 0260 0123     		movs	r3, #1
 2802 0262 00E0     		b	.L148
 2803              	.L144:
 608:.\Protocolo.c **** 		}
 609:.\Protocolo.c **** 	}
 610:.\Protocolo.c **** 	else{
 611:.\Protocolo.c **** 		return 0;
 2804              		.loc 1 611 0
 2805 0264 0023     		movs	r3, #0
 2806              	.L148:
 612:.\Protocolo.c **** 	}
 613:.\Protocolo.c **** }
 2807              		.loc 1 613 0 discriminator 1
 2808 0266 1846     		mov	r0, r3
 2809 0268 2037     		adds	r7, r7, #32
 2810              		.cfi_def_cfa_offset 8
 2811 026a BD46     		mov	sp, r7
 2812              		.cfi_def_cfa_register 13
 2813              		@ sp needed
 2814 026c 80BD     		pop	{r7, pc}
 2815              	.L150:
 2816 026e 00BF     		.align	2
 2817              	.L149:
 2818 0270 00000000 		.word	version
 2819 0274 00000000 		.word	Rx_Surtidor
 2820 0278 00000000 		.word	rx_timeout
 2821              		.cfi_endproc
 2822              	.LFE70:
 2823              		.size	cambiar_precio, .-cambiar_precio
 2824              		.section	.text.totales,"ax",%progbits
 2825              		.align	2
 2826              		.global	totales
 2827              		.thumb
 2828              		.thumb_func
 2829              		.type	totales, %function
 2830              	totales:
 2831              	.LFB71:
 614:.\Protocolo.c **** 
 615:.\Protocolo.c **** /**
 616:.\Protocolo.c **** * totales
 617:.\Protocolo.c **** * @brief Obtiene los totales electrónicos del equipo
 618:.\Protocolo.c **** * almacena los valores obtenidos en las variables ladox.totales
 619:.\Protocolo.c **** * @param dir posición del surtidor
 620:.\Protocolo.c **** * @param nmangueras numero de mangueras definidas
 621:.\Protocolo.c **** * @return 0 si hay error, =!0 si se realizan las operaciones   
 622:.\Protocolo.c **** *
 623:.\Protocolo.c **** */
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 63


 624:.\Protocolo.c **** uint8 totales(uint8 dir, uint8 nmangueras){
 2832              		.loc 1 624 0
 2833              		.cfi_startproc
 2834              		@ args = 0, pretend = 0, frame = 16
 2835              		@ frame_needed = 1, uses_anonymous_args = 0
 2836 0000 80B5     		push	{r7, lr}
 2837              		.cfi_def_cfa_offset 8
 2838              		.cfi_offset 7, -8
 2839              		.cfi_offset 14, -4
 2840 0002 84B0     		sub	sp, sp, #16
 2841              		.cfi_def_cfa_offset 24
 2842 0004 00AF     		add	r7, sp, #0
 2843              		.cfi_def_cfa_register 7
 2844 0006 0346     		mov	r3, r0
 2845 0008 0A46     		mov	r2, r1
 2846 000a FB71     		strb	r3, [r7, #7]
 2847 000c 1346     		mov	r3, r2
 2848 000e BB71     		strb	r3, [r7, #6]
 625:.\Protocolo.c **** 	uint8 x,y;
 626:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 2849              		.loc 1 626 0
 2850 0010 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 627:.\Protocolo.c ****     Surtidor_PutChar(0x50|dir);
 2851              		.loc 1 627 0
 2852 0014 FB79     		ldrb	r3, [r7, #7]
 2853 0016 43F05003 		orr	r3, r3, #80
 2854 001a DBB2     		uxtb	r3, r3
 2855 001c 1846     		mov	r0, r3
 2856 001e FFF7FEFF 		bl	Surtidor_PutChar
 628:.\Protocolo.c ****     rx_timeout=0;
 2857              		.loc 1 628 0
 2858 0022 B04B     		ldr	r3, .L353
 2859 0024 0022     		movs	r2, #0
 2860 0026 1A70     		strb	r2, [r3]
 629:.\Protocolo.c **** 	CyDelay(300);
 2861              		.loc 1 629 0
 2862 0028 4FF49670 		mov	r0, #300
 2863 002c FFF7FEFF 		bl	CyDelay
 630:.\Protocolo.c **** 	if(Surtidor_GetRxBufferSize()>=1){
 2864              		.loc 1 630 0
 2865 0030 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2866 0034 0346     		mov	r3, r0
 2867 0036 002B     		cmp	r3, #0
 2868 0038 01F02280 		beq	.L152
 631:.\Protocolo.c **** 		if(dir==lado1.dir){
 2869              		.loc 1 631 0
 2870 003c AA4B     		ldr	r3, .L353+4
 2871 003e 1B78     		ldrb	r3, [r3]
 2872 0040 DBB2     		uxtb	r3, r3
 2873 0042 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2874 0044 9A42     		cmp	r2, r3
 2875 0046 40F01F84 		bne	.L153
 632:.\Protocolo.c **** 			if(version[1]!=7){
 2876              		.loc 1 632 0
 2877 004a A84B     		ldr	r3, .L353+8
 2878 004c 5B78     		ldrb	r3, [r3, #1]
 2879 004e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 64


 2880 0050 072B     		cmp	r3, #7
 2881 0052 00F00C82 		beq	.L154
 633:.\Protocolo.c **** 				CyDelay(900);
 2882              		.loc 1 633 0
 2883 0056 4FF46170 		mov	r0, #900
 2884 005a FFF7FEFF 		bl	CyDelay
 634:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 2885              		.loc 1 634 0
 2886 005e FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2887 0062 0346     		mov	r3, r0
 2888 0064 FB73     		strb	r3, [r7, #15]
 635:.\Protocolo.c **** 				if((x==34)||(x==64)||(x==94)){
 2889              		.loc 1 635 0
 2890 0066 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2891 0068 222B     		cmp	r3, #34
 2892 006a 06D0     		beq	.L155
 2893              		.loc 1 635 0 is_stmt 0 discriminator 1
 2894 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2895 006e 402B     		cmp	r3, #64
 2896 0070 03D0     		beq	.L155
 2897              		.loc 1 635 0 discriminator 2
 2898 0072 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2899 0074 5E2B     		cmp	r3, #94
 2900 0076 40F0F581 		bne	.L156
 2901              	.L155:
 636:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9))  
 2902              		.loc 1 636 0 is_stmt 1
 2903 007a 9D4B     		ldr	r3, .L353+12
 2904 007c 1B78     		ldrb	r3, [r3]
 2905 007e DBB2     		uxtb	r3, r3
 2906 0080 FF2B     		cmp	r3, #255
 2907 0082 40F0EA81 		bne	.L157
 2908              		.loc 1 636 0 is_stmt 0 discriminator 1
 2909 0086 9A4B     		ldr	r3, .L353+12
 2910 0088 5B78     		ldrb	r3, [r3, #1]
 2911 008a DBB2     		uxtb	r3, r3
 2912 008c F62B     		cmp	r3, #246
 2913 008e 40F0E481 		bne	.L157
 2914              		.loc 1 636 0 discriminator 2
 2915 0092 974B     		ldr	r3, .L353+12
 2916 0094 DB78     		ldrb	r3, [r3, #3]
 2917 0096 DBB2     		uxtb	r3, r3
 2918 0098 F92B     		cmp	r3, #249
 2919 009a 40F0DE81 		bne	.L157
 637:.\Protocolo.c ****                     {                     
 638:.\Protocolo.c ****                     	for(y=0;y<=2;y++){// MOD: inicializa valores en cero
 2920              		.loc 1 638 0 is_stmt 1
 2921 009e 0023     		movs	r3, #0
 2922 00a0 BB73     		strb	r3, [r7, #14]
 2923 00a2 16E0     		b	.L158
 2924              	.L161:
 639:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 2925              		.loc 1 639 0
 2926 00a4 0023     		movs	r3, #0
 2927 00a6 FB73     		strb	r3, [r7, #15]
 2928 00a8 0DE0     		b	.L159
 2929              	.L160:
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 65


 640:.\Protocolo.c ****                     			lado1.totales[y][x]=0;
 2930              		.loc 1 640 0 discriminator 3
 2931 00aa BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 2932 00ac F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 2933 00ae 8E48     		ldr	r0, .L353+4
 2934 00b0 1346     		mov	r3, r2
 2935 00b2 5B00     		lsls	r3, r3, #1
 2936 00b4 1344     		add	r3, r3, r2
 2937 00b6 DB00     		lsls	r3, r3, #3
 2938 00b8 0B44     		add	r3, r3, r1
 2939 00ba 0344     		add	r3, r3, r0
 2940 00bc 0022     		movs	r2, #0
 2941 00be 9A70     		strb	r2, [r3, #2]
 639:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 2942              		.loc 1 639 0 discriminator 3
 2943 00c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2944 00c2 0133     		adds	r3, r3, #1
 2945 00c4 FB73     		strb	r3, [r7, #15]
 2946              	.L159:
 639:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 2947              		.loc 1 639 0 is_stmt 0 discriminator 1
 2948 00c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2949 00c8 172B     		cmp	r3, #23
 2950 00ca EED9     		bls	.L160
 638:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 2951              		.loc 1 638 0 is_stmt 1 discriminator 2
 2952 00cc BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2953 00ce 0133     		adds	r3, r3, #1
 2954 00d0 BB73     		strb	r3, [r7, #14]
 2955              	.L158:
 638:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 2956              		.loc 1 638 0 is_stmt 0 discriminator 1
 2957 00d2 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2958 00d4 022B     		cmp	r3, #2
 2959 00d6 E5D9     		bls	.L161
 641:.\Protocolo.c ****                     		}
 642:.\Protocolo.c ****                     	}                        
 643:.\Protocolo.c **** 						for(x=0;x<=7;x++){///producto 1 6xto digito
 2960              		.loc 1 643 0 is_stmt 1
 2961 00d8 0023     		movs	r3, #0
 2962 00da FB73     		strb	r3, [r7, #15]
 2963 00dc 21E0     		b	.L162
 2964              	.L166:
 644:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 2965              		.loc 1 644 0
 2966 00de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2967 00e0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2968 00e2 0432     		adds	r2, r2, #4
 2969 00e4 8249     		ldr	r1, .L353+12
 2970 00e6 8A5C     		ldrb	r2, [r1, r2]
 2971 00e8 D1B2     		uxtb	r1, r2
 2972 00ea 7F4A     		ldr	r2, .L353+4
 2973 00ec 1344     		add	r3, r3, r2
 2974 00ee 0A46     		mov	r2, r1
 2975 00f0 9A70     		strb	r2, [r3, #2]
 645:.\Protocolo.c ****                             ///////////''modificacion actual''//// Se añade esta verificacion para
 646:.\Protocolo.c **** 							if(lado1.totales[0][x]==0||(lado1.totales[0][x]&0xF0)!=0xE0){
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 66


 2976              		.loc 1 646 0
 2977 00f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2978 00f4 7C4A     		ldr	r2, .L353+4
 2979 00f6 1344     		add	r3, r3, r2
 2980 00f8 9B78     		ldrb	r3, [r3, #2]
 2981 00fa DBB2     		uxtb	r3, r3
 2982 00fc 002B     		cmp	r3, #0
 2983 00fe 08D0     		beq	.L163
 2984              		.loc 1 646 0 is_stmt 0 discriminator 1
 2985 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2986 0102 794A     		ldr	r2, .L353+4
 2987 0104 1344     		add	r3, r3, r2
 2988 0106 9B78     		ldrb	r3, [r3, #2]
 2989 0108 DBB2     		uxtb	r3, r3
 2990 010a 03F0F003 		and	r3, r3, #240
 2991 010e E02B     		cmp	r3, #224
 2992 0110 04D0     		beq	.L164
 2993              	.L163:
 647:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 2994              		.loc 1 647 0 is_stmt 1
 2995 0112 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 648:.\Protocolo.c **** 								return 0;
 2996              		.loc 1 648 0
 2997 0116 0023     		movs	r3, #0
 2998 0118 00F0B3BF 		b	.L165
 2999              	.L164:
 643:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3000              		.loc 1 643 0 discriminator 2
 3001 011c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3002 011e 0133     		adds	r3, r3, #1
 3003 0120 FB73     		strb	r3, [r7, #15]
 3004              	.L162:
 643:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3005              		.loc 1 643 0 is_stmt 0 discriminator 1
 3006 0122 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3007 0124 072B     		cmp	r3, #7
 3008 0126 DAD9     		bls	.L166
 649:.\Protocolo.c **** 							}
 650:.\Protocolo.c ****                             ///////////''modificacion actual''////
 651:.\Protocolo.c **** 						}
 652:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 3009              		.loc 1 652 0 is_stmt 1
 3010 0128 0023     		movs	r3, #0
 3011 012a FB73     		strb	r3, [r7, #15]
 3012 012c 24E0     		b	.L167
 3013              	.L170:
 653:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 3014              		.loc 1 653 0
 3015 012e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3016 0130 0C33     		adds	r3, r3, #12
 3017 0132 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3018 0134 0D32     		adds	r2, r2, #13
 3019 0136 6E49     		ldr	r1, .L353+12
 3020 0138 8A5C     		ldrb	r2, [r1, r2]
 3021 013a D1B2     		uxtb	r1, r2
 3022 013c 6A4A     		ldr	r2, .L353+4
 3023 013e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 67


 3024 0140 0A46     		mov	r2, r1
 3025 0142 9A70     		strb	r2, [r3, #2]
 654:.\Protocolo.c **** 							if(lado1.totales[0][x+12]==0||(lado1.totales[0][x+12]&0xF0)!=0xE0){
 3026              		.loc 1 654 0
 3027 0144 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3028 0146 0C33     		adds	r3, r3, #12
 3029 0148 674A     		ldr	r2, .L353+4
 3030 014a 1344     		add	r3, r3, r2
 3031 014c 9B78     		ldrb	r3, [r3, #2]
 3032 014e DBB2     		uxtb	r3, r3
 3033 0150 002B     		cmp	r3, #0
 3034 0152 09D0     		beq	.L168
 3035              		.loc 1 654 0 is_stmt 0 discriminator 1
 3036 0154 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3037 0156 0C33     		adds	r3, r3, #12
 3038 0158 634A     		ldr	r2, .L353+4
 3039 015a 1344     		add	r3, r3, r2
 3040 015c 9B78     		ldrb	r3, [r3, #2]
 3041 015e DBB2     		uxtb	r3, r3
 3042 0160 03F0F003 		and	r3, r3, #240
 3043 0164 E02B     		cmp	r3, #224
 3044 0166 04D0     		beq	.L169
 3045              	.L168:
 655:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3046              		.loc 1 655 0 is_stmt 1
 3047 0168 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 656:.\Protocolo.c **** 								return 0;
 3048              		.loc 1 656 0
 3049 016c 0023     		movs	r3, #0
 3050 016e 00F088BF 		b	.L165
 3051              	.L169:
 652:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 3052              		.loc 1 652 0 discriminator 2
 3053 0172 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3054 0174 0133     		adds	r3, r3, #1
 3055 0176 FB73     		strb	r3, [r7, #15]
 3056              	.L167:
 652:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 3057              		.loc 1 652 0 is_stmt 0 discriminator 1
 3058 0178 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3059 017a 072B     		cmp	r3, #7
 3060 017c D7D9     		bls	.L170
 657:.\Protocolo.c **** 							}							
 658:.\Protocolo.c **** 						}
 659:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 3061              		.loc 1 659 0 is_stmt 1
 3062 017e 0023     		movs	r3, #0
 3063 0180 FB73     		strb	r3, [r7, #15]
 3064 0182 0DE0     		b	.L171
 3065              	.L172:
 660:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+22];							
 3066              		.loc 1 660 0 discriminator 3
 3067 0184 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3068 0186 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3069 0188 1632     		adds	r2, r2, #22
 3070 018a 5949     		ldr	r1, .L353+12
 3071 018c 8A5C     		ldrb	r2, [r1, r2]
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 68


 3072 018e D1B2     		uxtb	r1, r2
 3073 0190 554A     		ldr	r2, .L353+4
 3074 0192 1344     		add	r3, r3, r2
 3075 0194 0A46     		mov	r2, r1
 3076 0196 83F84A20 		strb	r2, [r3, #74]
 659:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+22];							
 3077              		.loc 1 659 0 discriminator 3
 3078 019a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3079 019c 0133     		adds	r3, r3, #1
 3080 019e FB73     		strb	r3, [r7, #15]
 3081              	.L171:
 659:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+22];							
 3082              		.loc 1 659 0 is_stmt 0 discriminator 1
 3083 01a0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3084 01a2 032B     		cmp	r3, #3
 3085 01a4 EED9     		bls	.L172
 661:.\Protocolo.c **** 						}					
 662:.\Protocolo.c **** 						if(nmangueras==2){
 3086              		.loc 1 662 0 is_stmt 1
 3087 01a6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3088 01a8 022B     		cmp	r3, #2
 3089 01aa 6BD1     		bne	.L173
 663:.\Protocolo.c **** 							for(x=0;x<=7;x++){ ///producto 2
 3090              		.loc 1 663 0
 3091 01ac 0023     		movs	r3, #0
 3092 01ae FB73     		strb	r3, [r7, #15]
 3093 01b0 21E0     		b	.L174
 3094              	.L177:
 664:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3095              		.loc 1 664 0
 3096 01b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3097 01b4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3098 01b6 2232     		adds	r2, r2, #34
 3099 01b8 4D49     		ldr	r1, .L353+12
 3100 01ba 8A5C     		ldrb	r2, [r1, r2]
 3101 01bc D1B2     		uxtb	r1, r2
 3102 01be 4A4A     		ldr	r2, .L353+4
 3103 01c0 1344     		add	r3, r3, r2
 3104 01c2 0A46     		mov	r2, r1
 3105 01c4 9A76     		strb	r2, [r3, #26]
 665:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3106              		.loc 1 665 0
 3107 01c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3108 01c8 474A     		ldr	r2, .L353+4
 3109 01ca 1344     		add	r3, r3, r2
 3110 01cc 9B7E     		ldrb	r3, [r3, #26]
 3111 01ce DBB2     		uxtb	r3, r3
 3112 01d0 002B     		cmp	r3, #0
 3113 01d2 08D0     		beq	.L175
 3114              		.loc 1 665 0 is_stmt 0 discriminator 1
 3115 01d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3116 01d6 444A     		ldr	r2, .L353+4
 3117 01d8 1344     		add	r3, r3, r2
 3118 01da 9B7E     		ldrb	r3, [r3, #26]
 3119 01dc DBB2     		uxtb	r3, r3
 3120 01de 03F0F003 		and	r3, r3, #240
 3121 01e2 E02B     		cmp	r3, #224
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 69


 3122 01e4 04D0     		beq	.L176
 3123              	.L175:
 666:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3124              		.loc 1 666 0 is_stmt 1
 3125 01e6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 667:.\Protocolo.c **** 									return 0;
 3126              		.loc 1 667 0
 3127 01ea 0023     		movs	r3, #0
 3128 01ec 00F049BF 		b	.L165
 3129              	.L176:
 663:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3130              		.loc 1 663 0 discriminator 2
 3131 01f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3132 01f2 0133     		adds	r3, r3, #1
 3133 01f4 FB73     		strb	r3, [r7, #15]
 3134              	.L174:
 663:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3135              		.loc 1 663 0 is_stmt 0 discriminator 1
 3136 01f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3137 01f8 072B     		cmp	r3, #7
 3138 01fa DAD9     		bls	.L177
 668:.\Protocolo.c **** 								}								
 669:.\Protocolo.c **** 							}
 670:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3139              		.loc 1 670 0 is_stmt 1
 3140 01fc 0023     		movs	r3, #0
 3141 01fe FB73     		strb	r3, [r7, #15]
 3142 0200 24E0     		b	.L178
 3143              	.L181:
 671:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3144              		.loc 1 671 0
 3145 0202 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3146 0204 0C33     		adds	r3, r3, #12
 3147 0206 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3148 0208 2B32     		adds	r2, r2, #43
 3149 020a 3949     		ldr	r1, .L353+12
 3150 020c 8A5C     		ldrb	r2, [r1, r2]
 3151 020e D1B2     		uxtb	r1, r2
 3152 0210 354A     		ldr	r2, .L353+4
 3153 0212 1344     		add	r3, r3, r2
 3154 0214 0A46     		mov	r2, r1
 3155 0216 9A76     		strb	r2, [r3, #26]
 672:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3156              		.loc 1 672 0
 3157 0218 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3158 021a 0C33     		adds	r3, r3, #12
 3159 021c 324A     		ldr	r2, .L353+4
 3160 021e 1344     		add	r3, r3, r2
 3161 0220 9B7E     		ldrb	r3, [r3, #26]
 3162 0222 DBB2     		uxtb	r3, r3
 3163 0224 002B     		cmp	r3, #0
 3164 0226 09D0     		beq	.L179
 3165              		.loc 1 672 0 is_stmt 0 discriminator 1
 3166 0228 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3167 022a 0C33     		adds	r3, r3, #12
 3168 022c 2E4A     		ldr	r2, .L353+4
 3169 022e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 70


 3170 0230 9B7E     		ldrb	r3, [r3, #26]
 3171 0232 DBB2     		uxtb	r3, r3
 3172 0234 03F0F003 		and	r3, r3, #240
 3173 0238 E02B     		cmp	r3, #224
 3174 023a 04D0     		beq	.L180
 3175              	.L179:
 673:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3176              		.loc 1 673 0 is_stmt 1
 3177 023c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 674:.\Protocolo.c **** 									return 0;
 3178              		.loc 1 674 0
 3179 0240 0023     		movs	r3, #0
 3180 0242 00F01EBF 		b	.L165
 3181              	.L180:
 670:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3182              		.loc 1 670 0 discriminator 2
 3183 0246 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3184 0248 0133     		adds	r3, r3, #1
 3185 024a FB73     		strb	r3, [r7, #15]
 3186              	.L178:
 670:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3187              		.loc 1 670 0 is_stmt 0 discriminator 1
 3188 024c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3189 024e 072B     		cmp	r3, #7
 3190 0250 D7D9     		bls	.L181
 675:.\Protocolo.c **** 								}								
 676:.\Protocolo.c **** 							}
 677:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3191              		.loc 1 677 0 is_stmt 1
 3192 0252 0023     		movs	r3, #0
 3193 0254 FB73     		strb	r3, [r7, #15]
 3194 0256 0DE0     		b	.L182
 3195              	.L183:
 678:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3196              		.loc 1 678 0 discriminator 3
 3197 0258 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3198 025a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3199 025c 3432     		adds	r2, r2, #52
 3200 025e 2449     		ldr	r1, .L353+12
 3201 0260 8A5C     		ldrb	r2, [r1, r2]
 3202 0262 D1B2     		uxtb	r1, r2
 3203 0264 204A     		ldr	r2, .L353+4
 3204 0266 1344     		add	r3, r3, r2
 3205 0268 0A46     		mov	r2, r1
 3206 026a 83F84F20 		strb	r2, [r3, #79]
 677:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3207              		.loc 1 677 0 discriminator 3
 3208 026e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3209 0270 0133     		adds	r3, r3, #1
 3210 0272 FB73     		strb	r3, [r7, #15]
 3211              	.L182:
 677:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3212              		.loc 1 677 0 is_stmt 0 discriminator 1
 3213 0274 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3214 0276 032B     		cmp	r3, #3
 3215 0278 EED9     		bls	.L183
 679:.\Protocolo.c **** 							}	
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 71


 680:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3216              		.loc 1 680 0 is_stmt 1
 3217 027a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 681:.\Protocolo.c ****     						return 2;                            
 3218              		.loc 1 681 0
 3219 027e 0223     		movs	r3, #2
 3220 0280 00F0FFBE 		b	.L165
 3221              	.L173:
 682:.\Protocolo.c **** 						}
 683:.\Protocolo.c **** 						if(nmangueras==3){
 3222              		.loc 1 683 0
 3223 0284 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3224 0286 032B     		cmp	r3, #3
 3225 0288 40F0E280 		bne	.L184
 684:.\Protocolo.c **** 							for(x=0;x<=7;x++){///producto 2
 3226              		.loc 1 684 0
 3227 028c 0023     		movs	r3, #0
 3228 028e FB73     		strb	r3, [r7, #15]
 3229 0290 21E0     		b	.L185
 3230              	.L188:
 685:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3231              		.loc 1 685 0
 3232 0292 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3233 0294 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3234 0296 2232     		adds	r2, r2, #34
 3235 0298 1549     		ldr	r1, .L353+12
 3236 029a 8A5C     		ldrb	r2, [r1, r2]
 3237 029c D1B2     		uxtb	r1, r2
 3238 029e 124A     		ldr	r2, .L353+4
 3239 02a0 1344     		add	r3, r3, r2
 3240 02a2 0A46     		mov	r2, r1
 3241 02a4 9A76     		strb	r2, [r3, #26]
 686:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3242              		.loc 1 686 0
 3243 02a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3244 02a8 0F4A     		ldr	r2, .L353+4
 3245 02aa 1344     		add	r3, r3, r2
 3246 02ac 9B7E     		ldrb	r3, [r3, #26]
 3247 02ae DBB2     		uxtb	r3, r3
 3248 02b0 002B     		cmp	r3, #0
 3249 02b2 08D0     		beq	.L186
 3250              		.loc 1 686 0 is_stmt 0 discriminator 1
 3251 02b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3252 02b6 0C4A     		ldr	r2, .L353+4
 3253 02b8 1344     		add	r3, r3, r2
 3254 02ba 9B7E     		ldrb	r3, [r3, #26]
 3255 02bc DBB2     		uxtb	r3, r3
 3256 02be 03F0F003 		and	r3, r3, #240
 3257 02c2 E02B     		cmp	r3, #224
 3258 02c4 04D0     		beq	.L187
 3259              	.L186:
 687:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3260              		.loc 1 687 0 is_stmt 1
 3261 02c6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 688:.\Protocolo.c **** 									return 0;
 3262              		.loc 1 688 0
 3263 02ca 0023     		movs	r3, #0
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 72


 3264 02cc 00F0D9BE 		b	.L165
 3265              	.L187:
 684:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3266              		.loc 1 684 0 discriminator 2
 3267 02d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3268 02d2 0133     		adds	r3, r3, #1
 3269 02d4 FB73     		strb	r3, [r7, #15]
 3270              	.L185:
 684:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3271              		.loc 1 684 0 is_stmt 0 discriminator 1
 3272 02d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3273 02d8 072B     		cmp	r3, #7
 3274 02da DAD9     		bls	.L188
 689:.\Protocolo.c **** 								}								
 690:.\Protocolo.c **** 							}
 691:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3275              		.loc 1 691 0 is_stmt 1
 3276 02dc 0023     		movs	r3, #0
 3277 02de FB73     		strb	r3, [r7, #15]
 3278 02e0 2DE0     		b	.L189
 3279              	.L354:
 3280 02e2 00BF     		.align	2
 3281              	.L353:
 3282 02e4 00000000 		.word	rx_timeout
 3283 02e8 00000000 		.word	lado1
 3284 02ec 00000000 		.word	version
 3285 02f0 00000000 		.word	Surtidor_rxBuffer
 3286              	.L192:
 692:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3287              		.loc 1 692 0
 3288 02f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3289 02f6 0C33     		adds	r3, r3, #12
 3290 02f8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3291 02fa 2B32     		adds	r2, r2, #43
 3292 02fc B349     		ldr	r1, .L355
 3293 02fe 8A5C     		ldrb	r2, [r1, r2]
 3294 0300 D1B2     		uxtb	r1, r2
 3295 0302 B34A     		ldr	r2, .L355+4
 3296 0304 1344     		add	r3, r3, r2
 3297 0306 0A46     		mov	r2, r1
 3298 0308 9A76     		strb	r2, [r3, #26]
 693:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3299              		.loc 1 693 0
 3300 030a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3301 030c 0C33     		adds	r3, r3, #12
 3302 030e B04A     		ldr	r2, .L355+4
 3303 0310 1344     		add	r3, r3, r2
 3304 0312 9B7E     		ldrb	r3, [r3, #26]
 3305 0314 DBB2     		uxtb	r3, r3
 3306 0316 002B     		cmp	r3, #0
 3307 0318 09D0     		beq	.L190
 3308              		.loc 1 693 0 is_stmt 0 discriminator 1
 3309 031a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3310 031c 0C33     		adds	r3, r3, #12
 3311 031e AC4A     		ldr	r2, .L355+4
 3312 0320 1344     		add	r3, r3, r2
 3313 0322 9B7E     		ldrb	r3, [r3, #26]
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 73


 3314 0324 DBB2     		uxtb	r3, r3
 3315 0326 03F0F003 		and	r3, r3, #240
 3316 032a E02B     		cmp	r3, #224
 3317 032c 04D0     		beq	.L191
 3318              	.L190:
 694:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3319              		.loc 1 694 0 is_stmt 1
 3320 032e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 695:.\Protocolo.c **** 									return 0;
 3321              		.loc 1 695 0
 3322 0332 0023     		movs	r3, #0
 3323 0334 00F0A5BE 		b	.L165
 3324              	.L191:
 691:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3325              		.loc 1 691 0 discriminator 2
 3326 0338 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3327 033a 0133     		adds	r3, r3, #1
 3328 033c FB73     		strb	r3, [r7, #15]
 3329              	.L189:
 691:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3330              		.loc 1 691 0 is_stmt 0 discriminator 1
 3331 033e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3332 0340 072B     		cmp	r3, #7
 3333 0342 D7D9     		bls	.L192
 696:.\Protocolo.c **** 								}								
 697:.\Protocolo.c **** 							}
 698:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3334              		.loc 1 698 0 is_stmt 1
 3335 0344 0023     		movs	r3, #0
 3336 0346 FB73     		strb	r3, [r7, #15]
 3337 0348 0DE0     		b	.L193
 3338              	.L194:
 699:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3339              		.loc 1 699 0 discriminator 3
 3340 034a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3341 034c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3342 034e 3432     		adds	r2, r2, #52
 3343 0350 9E49     		ldr	r1, .L355
 3344 0352 8A5C     		ldrb	r2, [r1, r2]
 3345 0354 D1B2     		uxtb	r1, r2
 3346 0356 9E4A     		ldr	r2, .L355+4
 3347 0358 1344     		add	r3, r3, r2
 3348 035a 0A46     		mov	r2, r1
 3349 035c 83F84F20 		strb	r2, [r3, #79]
 698:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3350              		.loc 1 698 0 discriminator 3
 3351 0360 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3352 0362 0133     		adds	r3, r3, #1
 3353 0364 FB73     		strb	r3, [r7, #15]
 3354              	.L193:
 698:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3355              		.loc 1 698 0 is_stmt 0 discriminator 1
 3356 0366 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3357 0368 032B     		cmp	r3, #3
 3358 036a EED9     		bls	.L194
 700:.\Protocolo.c **** 							}					
 701:.\Protocolo.c **** 							for(x=0;x<=7;x++){///producto 3
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 74


 3359              		.loc 1 701 0 is_stmt 1
 3360 036c 0023     		movs	r3, #0
 3361 036e FB73     		strb	r3, [r7, #15]
 3362 0370 24E0     		b	.L195
 3363              	.L198:
 702:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+64];
 3364              		.loc 1 702 0
 3365 0372 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3366 0374 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3367 0376 4032     		adds	r2, r2, #64
 3368 0378 9449     		ldr	r1, .L355
 3369 037a 8A5C     		ldrb	r2, [r1, r2]
 3370 037c D1B2     		uxtb	r1, r2
 3371 037e 944A     		ldr	r2, .L355+4
 3372 0380 1344     		add	r3, r3, r2
 3373 0382 0A46     		mov	r2, r1
 3374 0384 83F83220 		strb	r2, [r3, #50]
 703:.\Protocolo.c **** 								if(lado1.totales[2][x]==0||(lado1.totales[2][x]&0xF0)!=0xE0){
 3375              		.loc 1 703 0
 3376 0388 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3377 038a 914A     		ldr	r2, .L355+4
 3378 038c 1344     		add	r3, r3, r2
 3379 038e 93F83230 		ldrb	r3, [r3, #50]
 3380 0392 DBB2     		uxtb	r3, r3
 3381 0394 002B     		cmp	r3, #0
 3382 0396 09D0     		beq	.L196
 3383              		.loc 1 703 0 is_stmt 0 discriminator 1
 3384 0398 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3385 039a 8D4A     		ldr	r2, .L355+4
 3386 039c 1344     		add	r3, r3, r2
 3387 039e 93F83230 		ldrb	r3, [r3, #50]
 3388 03a2 DBB2     		uxtb	r3, r3
 3389 03a4 03F0F003 		and	r3, r3, #240
 3390 03a8 E02B     		cmp	r3, #224
 3391 03aa 04D0     		beq	.L197
 3392              	.L196:
 704:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3393              		.loc 1 704 0 is_stmt 1
 3394 03ac FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 705:.\Protocolo.c **** 									return 0;
 3395              		.loc 1 705 0
 3396 03b0 0023     		movs	r3, #0
 3397 03b2 00F066BE 		b	.L165
 3398              	.L197:
 701:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+64];
 3399              		.loc 1 701 0 discriminator 2
 3400 03b6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3401 03b8 0133     		adds	r3, r3, #1
 3402 03ba FB73     		strb	r3, [r7, #15]
 3403              	.L195:
 701:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+64];
 3404              		.loc 1 701 0 is_stmt 0 discriminator 1
 3405 03bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3406 03be 072B     		cmp	r3, #7
 3407 03c0 D7D9     		bls	.L198
 706:.\Protocolo.c **** 								}								
 707:.\Protocolo.c **** 							}
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 75


 708:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3408              		.loc 1 708 0 is_stmt 1
 3409 03c2 0023     		movs	r3, #0
 3410 03c4 FB73     		strb	r3, [r7, #15]
 3411 03c6 27E0     		b	.L199
 3412              	.L202:
 709:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 3413              		.loc 1 709 0
 3414 03c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3415 03ca 0C33     		adds	r3, r3, #12
 3416 03cc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3417 03ce 4932     		adds	r2, r2, #73
 3418 03d0 7E49     		ldr	r1, .L355
 3419 03d2 8A5C     		ldrb	r2, [r1, r2]
 3420 03d4 D1B2     		uxtb	r1, r2
 3421 03d6 7E4A     		ldr	r2, .L355+4
 3422 03d8 1344     		add	r3, r3, r2
 3423 03da 0A46     		mov	r2, r1
 3424 03dc 83F83220 		strb	r2, [r3, #50]
 710:.\Protocolo.c **** 								if(lado1.totales[2][x+12]==0||(lado1.totales[2][x+12]&0xF0)!=0xE0){
 3425              		.loc 1 710 0
 3426 03e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3427 03e2 0C33     		adds	r3, r3, #12
 3428 03e4 7A4A     		ldr	r2, .L355+4
 3429 03e6 1344     		add	r3, r3, r2
 3430 03e8 93F83230 		ldrb	r3, [r3, #50]
 3431 03ec DBB2     		uxtb	r3, r3
 3432 03ee 002B     		cmp	r3, #0
 3433 03f0 0AD0     		beq	.L200
 3434              		.loc 1 710 0 is_stmt 0 discriminator 1
 3435 03f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3436 03f4 0C33     		adds	r3, r3, #12
 3437 03f6 764A     		ldr	r2, .L355+4
 3438 03f8 1344     		add	r3, r3, r2
 3439 03fa 93F83230 		ldrb	r3, [r3, #50]
 3440 03fe DBB2     		uxtb	r3, r3
 3441 0400 03F0F003 		and	r3, r3, #240
 3442 0404 E02B     		cmp	r3, #224
 3443 0406 04D0     		beq	.L201
 3444              	.L200:
 711:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3445              		.loc 1 711 0 is_stmt 1
 3446 0408 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 712:.\Protocolo.c **** 									return 0;
 3447              		.loc 1 712 0
 3448 040c 0023     		movs	r3, #0
 3449 040e 00F038BE 		b	.L165
 3450              	.L201:
 708:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 3451              		.loc 1 708 0 discriminator 2
 3452 0412 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3453 0414 0133     		adds	r3, r3, #1
 3454 0416 FB73     		strb	r3, [r7, #15]
 3455              	.L199:
 708:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 3456              		.loc 1 708 0 is_stmt 0 discriminator 1
 3457 0418 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 76


 3458 041a 072B     		cmp	r3, #7
 3459 041c D4D9     		bls	.L202
 713:.\Protocolo.c **** 								}								
 714:.\Protocolo.c **** 							}
 715:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3460              		.loc 1 715 0 is_stmt 1
 3461 041e 0023     		movs	r3, #0
 3462 0420 FB73     		strb	r3, [r7, #15]
 3463 0422 0DE0     		b	.L203
 3464              	.L204:
 716:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+82];
 3465              		.loc 1 716 0 discriminator 3
 3466 0424 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3467 0426 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3468 0428 5232     		adds	r2, r2, #82
 3469 042a 6849     		ldr	r1, .L355
 3470 042c 8A5C     		ldrb	r2, [r1, r2]
 3471 042e D1B2     		uxtb	r1, r2
 3472 0430 674A     		ldr	r2, .L355+4
 3473 0432 1344     		add	r3, r3, r2
 3474 0434 0A46     		mov	r2, r1
 3475 0436 83F85420 		strb	r2, [r3, #84]
 715:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+82];
 3476              		.loc 1 715 0 discriminator 3
 3477 043a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3478 043c 0133     		adds	r3, r3, #1
 3479 043e FB73     		strb	r3, [r7, #15]
 3480              	.L203:
 715:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+82];
 3481              		.loc 1 715 0 is_stmt 0 discriminator 1
 3482 0440 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3483 0442 032B     		cmp	r3, #3
 3484 0444 EED9     		bls	.L204
 717:.\Protocolo.c **** 							}
 718:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3485              		.loc 1 718 0 is_stmt 1
 3486 0446 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 719:.\Protocolo.c ****     						return 3;                            
 3487              		.loc 1 719 0
 3488 044a 0323     		movs	r3, #3
 3489 044c 00F019BE 		b	.L165
 3490              	.L184:
 720:.\Protocolo.c **** 						}
 721:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 3491              		.loc 1 721 0
 3492 0450 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 722:.\Protocolo.c **** 						return 1;
 3493              		.loc 1 722 0
 3494 0454 0123     		movs	r3, #1
 3495 0456 00F014BE 		b	.L165
 3496              	.L157:
 723:.\Protocolo.c **** 					}
 724:.\Protocolo.c **** 					else{
 725:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 3497              		.loc 1 725 0
 3498 045a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 726:.\Protocolo.c **** 						return 0;
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 77


 3499              		.loc 1 726 0
 3500 045e 0023     		movs	r3, #0
 3501 0460 00F00FBE 		b	.L165
 3502              	.L156:
 727:.\Protocolo.c **** 					}					
 728:.\Protocolo.c **** 				}
 729:.\Protocolo.c **** 				else{
 730:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 3503              		.loc 1 730 0
 3504 0464 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 731:.\Protocolo.c **** 					return 0;		
 3505              		.loc 1 731 0
 3506 0468 0023     		movs	r3, #0
 3507 046a 00F00ABE 		b	.L165
 3508              	.L154:
 732:.\Protocolo.c **** 				}
 733:.\Protocolo.c **** 			}
 734:.\Protocolo.c **** 			else{
 735:.\Protocolo.c **** 				CyDelay(900);
 3509              		.loc 1 735 0
 3510 046e 4FF46170 		mov	r0, #900
 3511 0472 FFF7FEFF 		bl	CyDelay
 736:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 3512              		.loc 1 736 0
 3513 0476 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 3514 047a 0346     		mov	r3, r0
 3515 047c FB73     		strb	r3, [r7, #15]
 737:.\Protocolo.c **** 				if((x==46)||(x==88)||(x==130)){				
 3516              		.loc 1 737 0
 3517 047e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3518 0480 2E2B     		cmp	r3, #46
 3519 0482 06D0     		beq	.L205
 3520              		.loc 1 737 0 is_stmt 0 discriminator 1
 3521 0484 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3522 0486 582B     		cmp	r3, #88
 3523 0488 03D0     		beq	.L205
 3524              		.loc 1 737 0 discriminator 2
 3525 048a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3526 048c 822B     		cmp	r3, #130
 3527 048e 40F0F181 		bne	.L206
 3528              	.L205:
 738:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 3529              		.loc 1 738 0 is_stmt 1
 3530 0492 4E4B     		ldr	r3, .L355
 3531 0494 1B78     		ldrb	r3, [r3]
 3532 0496 DBB2     		uxtb	r3, r3
 3533 0498 FF2B     		cmp	r3, #255
 3534 049a 40F0E681 		bne	.L207
 3535              		.loc 1 738 0 is_stmt 0 discriminator 1
 3536 049e 4B4B     		ldr	r3, .L355
 3537 04a0 5B78     		ldrb	r3, [r3, #1]
 3538 04a2 DBB2     		uxtb	r3, r3
 3539 04a4 F62B     		cmp	r3, #246
 3540 04a6 40F0E081 		bne	.L207
 3541              		.loc 1 738 0 discriminator 2
 3542 04aa 484B     		ldr	r3, .L355
 3543 04ac DB78     		ldrb	r3, [r3, #3]
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 78


 3544 04ae DBB2     		uxtb	r3, r3
 3545 04b0 F92B     		cmp	r3, #249
 3546 04b2 40F0DA81 		bne	.L207
 739:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3547              		.loc 1 739 0 is_stmt 1
 3548 04b6 0023     		movs	r3, #0
 3549 04b8 BB73     		strb	r3, [r7, #14]
 3550 04ba 16E0     		b	.L208
 3551              	.L211:
 740:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3552              		.loc 1 740 0
 3553 04bc 0023     		movs	r3, #0
 3554 04be FB73     		strb	r3, [r7, #15]
 3555 04c0 0DE0     		b	.L209
 3556              	.L210:
 741:.\Protocolo.c ****                     			lado1.totales[y][x]=0;
 3557              		.loc 1 741 0 discriminator 3
 3558 04c2 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 3559 04c4 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 3560 04c6 4248     		ldr	r0, .L355+4
 3561 04c8 1346     		mov	r3, r2
 3562 04ca 5B00     		lsls	r3, r3, #1
 3563 04cc 1344     		add	r3, r3, r2
 3564 04ce DB00     		lsls	r3, r3, #3
 3565 04d0 0B44     		add	r3, r3, r1
 3566 04d2 0344     		add	r3, r3, r0
 3567 04d4 0022     		movs	r2, #0
 3568 04d6 9A70     		strb	r2, [r3, #2]
 740:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3569              		.loc 1 740 0 discriminator 3
 3570 04d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3571 04da 0133     		adds	r3, r3, #1
 3572 04dc FB73     		strb	r3, [r7, #15]
 3573              	.L209:
 740:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3574              		.loc 1 740 0 is_stmt 0 discriminator 1
 3575 04de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3576 04e0 172B     		cmp	r3, #23
 3577 04e2 EED9     		bls	.L210
 739:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3578              		.loc 1 739 0 is_stmt 1 discriminator 2
 3579 04e4 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3580 04e6 0133     		adds	r3, r3, #1
 3581 04e8 BB73     		strb	r3, [r7, #14]
 3582              	.L208:
 739:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3583              		.loc 1 739 0 is_stmt 0 discriminator 1
 3584 04ea BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3585 04ec 022B     		cmp	r3, #2
 3586 04ee E5D9     		bls	.L211
 742:.\Protocolo.c ****                     		}
 743:.\Protocolo.c ****                     	}                        
 744:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3587              		.loc 1 744 0 is_stmt 1
 3588 04f0 0023     		movs	r3, #0
 3589 04f2 FB73     		strb	r3, [r7, #15]
 3590 04f4 21E0     		b	.L212
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 79


 3591              	.L215:
 745:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3592              		.loc 1 745 0
 3593 04f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3594 04f8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3595 04fa 0432     		adds	r2, r2, #4
 3596 04fc 3349     		ldr	r1, .L355
 3597 04fe 8A5C     		ldrb	r2, [r1, r2]
 3598 0500 D1B2     		uxtb	r1, r2
 3599 0502 334A     		ldr	r2, .L355+4
 3600 0504 1344     		add	r3, r3, r2
 3601 0506 0A46     		mov	r2, r1
 3602 0508 9A70     		strb	r2, [r3, #2]
 746:.\Protocolo.c **** 							if(lado1.totales[0][x]==0||(lado1.totales[0][x]&0xF0)!=0xE0){
 3603              		.loc 1 746 0
 3604 050a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3605 050c 304A     		ldr	r2, .L355+4
 3606 050e 1344     		add	r3, r3, r2
 3607 0510 9B78     		ldrb	r3, [r3, #2]
 3608 0512 DBB2     		uxtb	r3, r3
 3609 0514 002B     		cmp	r3, #0
 3610 0516 08D0     		beq	.L213
 3611              		.loc 1 746 0 is_stmt 0 discriminator 1
 3612 0518 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3613 051a 2D4A     		ldr	r2, .L355+4
 3614 051c 1344     		add	r3, r3, r2
 3615 051e 9B78     		ldrb	r3, [r3, #2]
 3616 0520 DBB2     		uxtb	r3, r3
 3617 0522 03F0F003 		and	r3, r3, #240
 3618 0526 E02B     		cmp	r3, #224
 3619 0528 04D0     		beq	.L214
 3620              	.L213:
 747:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3621              		.loc 1 747 0 is_stmt 1
 3622 052a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 748:.\Protocolo.c **** 								return 0;
 3623              		.loc 1 748 0
 3624 052e 0023     		movs	r3, #0
 3625 0530 00F0A7BD 		b	.L165
 3626              	.L214:
 744:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3627              		.loc 1 744 0 discriminator 2
 3628 0534 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3629 0536 0133     		adds	r3, r3, #1
 3630 0538 FB73     		strb	r3, [r7, #15]
 3631              	.L212:
 744:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3632              		.loc 1 744 0 is_stmt 0 discriminator 1
 3633 053a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3634 053c 0B2B     		cmp	r3, #11
 3635 053e DAD9     		bls	.L215
 749:.\Protocolo.c **** 							}							
 750:.\Protocolo.c **** 						}
 751:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3636              		.loc 1 751 0 is_stmt 1
 3637 0540 0023     		movs	r3, #0
 3638 0542 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 80


 3639 0544 24E0     		b	.L216
 3640              	.L219:
 752:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 3641              		.loc 1 752 0
 3642 0546 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3643 0548 0C33     		adds	r3, r3, #12
 3644 054a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3645 054c 1132     		adds	r2, r2, #17
 3646 054e 1F49     		ldr	r1, .L355
 3647 0550 8A5C     		ldrb	r2, [r1, r2]
 3648 0552 D1B2     		uxtb	r1, r2
 3649 0554 1E4A     		ldr	r2, .L355+4
 3650 0556 1344     		add	r3, r3, r2
 3651 0558 0A46     		mov	r2, r1
 3652 055a 9A70     		strb	r2, [r3, #2]
 753:.\Protocolo.c **** 							if(lado1.totales[0][x+12]==0||(lado1.totales[0][x+12]&0xF0)!=0xE0){
 3653              		.loc 1 753 0
 3654 055c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3655 055e 0C33     		adds	r3, r3, #12
 3656 0560 1B4A     		ldr	r2, .L355+4
 3657 0562 1344     		add	r3, r3, r2
 3658 0564 9B78     		ldrb	r3, [r3, #2]
 3659 0566 DBB2     		uxtb	r3, r3
 3660 0568 002B     		cmp	r3, #0
 3661 056a 09D0     		beq	.L217
 3662              		.loc 1 753 0 is_stmt 0 discriminator 1
 3663 056c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3664 056e 0C33     		adds	r3, r3, #12
 3665 0570 174A     		ldr	r2, .L355+4
 3666 0572 1344     		add	r3, r3, r2
 3667 0574 9B78     		ldrb	r3, [r3, #2]
 3668 0576 DBB2     		uxtb	r3, r3
 3669 0578 03F0F003 		and	r3, r3, #240
 3670 057c E02B     		cmp	r3, #224
 3671 057e 04D0     		beq	.L218
 3672              	.L217:
 754:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3673              		.loc 1 754 0 is_stmt 1
 3674 0580 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 755:.\Protocolo.c **** 								return 0;
 3675              		.loc 1 755 0
 3676 0584 0023     		movs	r3, #0
 3677 0586 00F07CBD 		b	.L165
 3678              	.L218:
 751:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 3679              		.loc 1 751 0 discriminator 2
 3680 058a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3681 058c 0133     		adds	r3, r3, #1
 3682 058e FB73     		strb	r3, [r7, #15]
 3683              	.L216:
 751:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 3684              		.loc 1 751 0 is_stmt 0 discriminator 1
 3685 0590 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3686 0592 0B2B     		cmp	r3, #11
 3687 0594 D7D9     		bls	.L219
 756:.\Protocolo.c **** 							}							
 757:.\Protocolo.c **** 						}
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 81


 758:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 3688              		.loc 1 758 0 is_stmt 1
 3689 0596 0023     		movs	r3, #0
 3690 0598 FB73     		strb	r3, [r7, #15]
 3691 059a 0DE0     		b	.L220
 3692              	.L221:
 759:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+30];
 3693              		.loc 1 759 0 discriminator 3
 3694 059c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3695 059e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3696 05a0 1E32     		adds	r2, r2, #30
 3697 05a2 0A49     		ldr	r1, .L355
 3698 05a4 8A5C     		ldrb	r2, [r1, r2]
 3699 05a6 D1B2     		uxtb	r1, r2
 3700 05a8 094A     		ldr	r2, .L355+4
 3701 05aa 1344     		add	r3, r3, r2
 3702 05ac 0A46     		mov	r2, r1
 3703 05ae 83F84A20 		strb	r2, [r3, #74]
 758:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+30];
 3704              		.loc 1 758 0 discriminator 3
 3705 05b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3706 05b4 0133     		adds	r3, r3, #1
 3707 05b6 FB73     		strb	r3, [r7, #15]
 3708              	.L220:
 758:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+30];
 3709              		.loc 1 758 0 is_stmt 0 discriminator 1
 3710 05b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3711 05ba 042B     		cmp	r3, #4
 3712 05bc EED9     		bls	.L221
 760:.\Protocolo.c **** 						}				
 761:.\Protocolo.c **** 						if(nmangueras==2){
 3713              		.loc 1 761 0 is_stmt 1
 3714 05be BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3715 05c0 022B     		cmp	r3, #2
 3716 05c2 70D1     		bne	.L222
 762:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3717              		.loc 1 762 0
 3718 05c4 0023     		movs	r3, #0
 3719 05c6 FB73     		strb	r3, [r7, #15]
 3720 05c8 26E0     		b	.L223
 3721              	.L356:
 3722 05ca 00BF     		.align	2
 3723              	.L355:
 3724 05cc 00000000 		.word	Surtidor_rxBuffer
 3725 05d0 00000000 		.word	lado1
 3726              	.L226:
 763:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3727              		.loc 1 763 0
 3728 05d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3729 05d6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3730 05d8 2E32     		adds	r2, r2, #46
 3731 05da A949     		ldr	r1, .L357
 3732 05dc 8A5C     		ldrb	r2, [r1, r2]
 3733 05de D1B2     		uxtb	r1, r2
 3734 05e0 A84A     		ldr	r2, .L357+4
 3735 05e2 1344     		add	r3, r3, r2
 3736 05e4 0A46     		mov	r2, r1
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 82


 3737 05e6 9A76     		strb	r2, [r3, #26]
 764:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3738              		.loc 1 764 0
 3739 05e8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3740 05ea A64A     		ldr	r2, .L357+4
 3741 05ec 1344     		add	r3, r3, r2
 3742 05ee 9B7E     		ldrb	r3, [r3, #26]
 3743 05f0 DBB2     		uxtb	r3, r3
 3744 05f2 002B     		cmp	r3, #0
 3745 05f4 08D0     		beq	.L224
 3746              		.loc 1 764 0 is_stmt 0 discriminator 1
 3747 05f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3748 05f8 A24A     		ldr	r2, .L357+4
 3749 05fa 1344     		add	r3, r3, r2
 3750 05fc 9B7E     		ldrb	r3, [r3, #26]
 3751 05fe DBB2     		uxtb	r3, r3
 3752 0600 03F0F003 		and	r3, r3, #240
 3753 0604 E02B     		cmp	r3, #224
 3754 0606 04D0     		beq	.L225
 3755              	.L224:
 765:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3756              		.loc 1 765 0 is_stmt 1
 3757 0608 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 766:.\Protocolo.c **** 									return 0;
 3758              		.loc 1 766 0
 3759 060c 0023     		movs	r3, #0
 3760 060e 00F038BD 		b	.L165
 3761              	.L225:
 762:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3762              		.loc 1 762 0 discriminator 2
 3763 0612 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3764 0614 0133     		adds	r3, r3, #1
 3765 0616 FB73     		strb	r3, [r7, #15]
 3766              	.L223:
 762:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3767              		.loc 1 762 0 is_stmt 0 discriminator 1
 3768 0618 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3769 061a 0B2B     		cmp	r3, #11
 3770 061c DAD9     		bls	.L226
 767:.\Protocolo.c **** 								}								
 768:.\Protocolo.c **** 							}
 769:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3771              		.loc 1 769 0 is_stmt 1
 3772 061e 0023     		movs	r3, #0
 3773 0620 FB73     		strb	r3, [r7, #15]
 3774 0622 24E0     		b	.L227
 3775              	.L230:
 770:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3776              		.loc 1 770 0
 3777 0624 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3778 0626 0C33     		adds	r3, r3, #12
 3779 0628 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3780 062a 3B32     		adds	r2, r2, #59
 3781 062c 9449     		ldr	r1, .L357
 3782 062e 8A5C     		ldrb	r2, [r1, r2]
 3783 0630 D1B2     		uxtb	r1, r2
 3784 0632 944A     		ldr	r2, .L357+4
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 83


 3785 0634 1344     		add	r3, r3, r2
 3786 0636 0A46     		mov	r2, r1
 3787 0638 9A76     		strb	r2, [r3, #26]
 771:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3788              		.loc 1 771 0
 3789 063a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3790 063c 0C33     		adds	r3, r3, #12
 3791 063e 914A     		ldr	r2, .L357+4
 3792 0640 1344     		add	r3, r3, r2
 3793 0642 9B7E     		ldrb	r3, [r3, #26]
 3794 0644 DBB2     		uxtb	r3, r3
 3795 0646 002B     		cmp	r3, #0
 3796 0648 09D0     		beq	.L228
 3797              		.loc 1 771 0 is_stmt 0 discriminator 1
 3798 064a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3799 064c 0C33     		adds	r3, r3, #12
 3800 064e 8D4A     		ldr	r2, .L357+4
 3801 0650 1344     		add	r3, r3, r2
 3802 0652 9B7E     		ldrb	r3, [r3, #26]
 3803 0654 DBB2     		uxtb	r3, r3
 3804 0656 03F0F003 		and	r3, r3, #240
 3805 065a E02B     		cmp	r3, #224
 3806 065c 04D0     		beq	.L229
 3807              	.L228:
 772:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3808              		.loc 1 772 0 is_stmt 1
 3809 065e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 773:.\Protocolo.c **** 									return 0;
 3810              		.loc 1 773 0
 3811 0662 0023     		movs	r3, #0
 3812 0664 00F00DBD 		b	.L165
 3813              	.L229:
 769:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3814              		.loc 1 769 0 discriminator 2
 3815 0668 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3816 066a 0133     		adds	r3, r3, #1
 3817 066c FB73     		strb	r3, [r7, #15]
 3818              	.L227:
 769:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3819              		.loc 1 769 0 is_stmt 0 discriminator 1
 3820 066e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3821 0670 0B2B     		cmp	r3, #11
 3822 0672 D7D9     		bls	.L230
 774:.\Protocolo.c **** 								}								
 775:.\Protocolo.c **** 							}
 776:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 3823              		.loc 1 776 0 is_stmt 1
 3824 0674 0023     		movs	r3, #0
 3825 0676 FB73     		strb	r3, [r7, #15]
 3826 0678 0DE0     		b	.L231
 3827              	.L232:
 777:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 3828              		.loc 1 777 0 discriminator 3
 3829 067a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3830 067c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3831 067e 4832     		adds	r2, r2, #72
 3832 0680 7F49     		ldr	r1, .L357
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 84


 3833 0682 8A5C     		ldrb	r2, [r1, r2]
 3834 0684 D1B2     		uxtb	r1, r2
 3835 0686 7F4A     		ldr	r2, .L357+4
 3836 0688 1344     		add	r3, r3, r2
 3837 068a 0A46     		mov	r2, r1
 3838 068c 83F84F20 		strb	r2, [r3, #79]
 776:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 3839              		.loc 1 776 0 discriminator 3
 3840 0690 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3841 0692 0133     		adds	r3, r3, #1
 3842 0694 FB73     		strb	r3, [r7, #15]
 3843              	.L231:
 776:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 3844              		.loc 1 776 0 is_stmt 0 discriminator 1
 3845 0696 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3846 0698 042B     		cmp	r3, #4
 3847 069a EED9     		bls	.L232
 778:.\Protocolo.c **** 							}
 779:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3848              		.loc 1 779 0 is_stmt 1
 3849 069c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 780:.\Protocolo.c ****     						return 2;                            
 3850              		.loc 1 780 0
 3851 06a0 0223     		movs	r3, #2
 3852 06a2 00F0EEBC 		b	.L165
 3853              	.L222:
 781:.\Protocolo.c **** 						}
 782:.\Protocolo.c **** 						if(nmangueras==3){
 3854              		.loc 1 782 0
 3855 06a6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3856 06a8 032B     		cmp	r3, #3
 3857 06aa 40F0D980 		bne	.L233
 783:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3858              		.loc 1 783 0
 3859 06ae 0023     		movs	r3, #0
 3860 06b0 FB73     		strb	r3, [r7, #15]
 3861 06b2 21E0     		b	.L234
 3862              	.L237:
 784:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3863              		.loc 1 784 0
 3864 06b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3865 06b6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3866 06b8 2E32     		adds	r2, r2, #46
 3867 06ba 7149     		ldr	r1, .L357
 3868 06bc 8A5C     		ldrb	r2, [r1, r2]
 3869 06be D1B2     		uxtb	r1, r2
 3870 06c0 704A     		ldr	r2, .L357+4
 3871 06c2 1344     		add	r3, r3, r2
 3872 06c4 0A46     		mov	r2, r1
 3873 06c6 9A76     		strb	r2, [r3, #26]
 785:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3874              		.loc 1 785 0
 3875 06c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3876 06ca 6E4A     		ldr	r2, .L357+4
 3877 06cc 1344     		add	r3, r3, r2
 3878 06ce 9B7E     		ldrb	r3, [r3, #26]
 3879 06d0 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 85


 3880 06d2 002B     		cmp	r3, #0
 3881 06d4 08D0     		beq	.L235
 3882              		.loc 1 785 0 is_stmt 0 discriminator 1
 3883 06d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3884 06d8 6A4A     		ldr	r2, .L357+4
 3885 06da 1344     		add	r3, r3, r2
 3886 06dc 9B7E     		ldrb	r3, [r3, #26]
 3887 06de DBB2     		uxtb	r3, r3
 3888 06e0 03F0F003 		and	r3, r3, #240
 3889 06e4 E02B     		cmp	r3, #224
 3890 06e6 04D0     		beq	.L236
 3891              	.L235:
 786:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3892              		.loc 1 786 0 is_stmt 1
 3893 06e8 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 787:.\Protocolo.c **** 									return 0;
 3894              		.loc 1 787 0
 3895 06ec 0023     		movs	r3, #0
 3896 06ee 00F0C8BC 		b	.L165
 3897              	.L236:
 783:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3898              		.loc 1 783 0 discriminator 2
 3899 06f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3900 06f4 0133     		adds	r3, r3, #1
 3901 06f6 FB73     		strb	r3, [r7, #15]
 3902              	.L234:
 783:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3903              		.loc 1 783 0 is_stmt 0 discriminator 1
 3904 06f8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3905 06fa 0B2B     		cmp	r3, #11
 3906 06fc DAD9     		bls	.L237
 788:.\Protocolo.c **** 								}								
 789:.\Protocolo.c **** 							}
 790:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3907              		.loc 1 790 0 is_stmt 1
 3908 06fe 0023     		movs	r3, #0
 3909 0700 FB73     		strb	r3, [r7, #15]
 3910 0702 24E0     		b	.L238
 3911              	.L241:
 791:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3912              		.loc 1 791 0
 3913 0704 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3914 0706 0C33     		adds	r3, r3, #12
 3915 0708 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3916 070a 3B32     		adds	r2, r2, #59
 3917 070c 5C49     		ldr	r1, .L357
 3918 070e 8A5C     		ldrb	r2, [r1, r2]
 3919 0710 D1B2     		uxtb	r1, r2
 3920 0712 5C4A     		ldr	r2, .L357+4
 3921 0714 1344     		add	r3, r3, r2
 3922 0716 0A46     		mov	r2, r1
 3923 0718 9A76     		strb	r2, [r3, #26]
 792:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3924              		.loc 1 792 0
 3925 071a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3926 071c 0C33     		adds	r3, r3, #12
 3927 071e 594A     		ldr	r2, .L357+4
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 86


 3928 0720 1344     		add	r3, r3, r2
 3929 0722 9B7E     		ldrb	r3, [r3, #26]
 3930 0724 DBB2     		uxtb	r3, r3
 3931 0726 002B     		cmp	r3, #0
 3932 0728 09D0     		beq	.L239
 3933              		.loc 1 792 0 is_stmt 0 discriminator 1
 3934 072a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3935 072c 0C33     		adds	r3, r3, #12
 3936 072e 554A     		ldr	r2, .L357+4
 3937 0730 1344     		add	r3, r3, r2
 3938 0732 9B7E     		ldrb	r3, [r3, #26]
 3939 0734 DBB2     		uxtb	r3, r3
 3940 0736 03F0F003 		and	r3, r3, #240
 3941 073a E02B     		cmp	r3, #224
 3942 073c 04D0     		beq	.L240
 3943              	.L239:
 793:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3944              		.loc 1 793 0 is_stmt 1
 3945 073e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 794:.\Protocolo.c **** 									return 0;
 3946              		.loc 1 794 0
 3947 0742 0023     		movs	r3, #0
 3948 0744 00F09DBC 		b	.L165
 3949              	.L240:
 790:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3950              		.loc 1 790 0 discriminator 2
 3951 0748 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3952 074a 0133     		adds	r3, r3, #1
 3953 074c FB73     		strb	r3, [r7, #15]
 3954              	.L238:
 790:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3955              		.loc 1 790 0 is_stmt 0 discriminator 1
 3956 074e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3957 0750 0B2B     		cmp	r3, #11
 3958 0752 D7D9     		bls	.L241
 795:.\Protocolo.c **** 								}								
 796:.\Protocolo.c **** 							}
 797:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 3959              		.loc 1 797 0 is_stmt 1
 3960 0754 0023     		movs	r3, #0
 3961 0756 FB73     		strb	r3, [r7, #15]
 3962 0758 0DE0     		b	.L242
 3963              	.L243:
 798:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 3964              		.loc 1 798 0 discriminator 3
 3965 075a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3966 075c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3967 075e 4832     		adds	r2, r2, #72
 3968 0760 4749     		ldr	r1, .L357
 3969 0762 8A5C     		ldrb	r2, [r1, r2]
 3970 0764 D1B2     		uxtb	r1, r2
 3971 0766 474A     		ldr	r2, .L357+4
 3972 0768 1344     		add	r3, r3, r2
 3973 076a 0A46     		mov	r2, r1
 3974 076c 83F84F20 		strb	r2, [r3, #79]
 797:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 3975              		.loc 1 797 0 discriminator 3
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 87


 3976 0770 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3977 0772 0133     		adds	r3, r3, #1
 3978 0774 FB73     		strb	r3, [r7, #15]
 3979              	.L242:
 797:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 3980              		.loc 1 797 0 is_stmt 0 discriminator 1
 3981 0776 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3982 0778 042B     		cmp	r3, #4
 3983 077a EED9     		bls	.L243
 799:.\Protocolo.c **** 							}					
 800:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3984              		.loc 1 800 0 is_stmt 1
 3985 077c 0023     		movs	r3, #0
 3986 077e FB73     		strb	r3, [r7, #15]
 3987 0780 24E0     		b	.L244
 3988              	.L247:
 801:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+88];
 3989              		.loc 1 801 0
 3990 0782 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3991 0784 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3992 0786 5832     		adds	r2, r2, #88
 3993 0788 3D49     		ldr	r1, .L357
 3994 078a 8A5C     		ldrb	r2, [r1, r2]
 3995 078c D1B2     		uxtb	r1, r2
 3996 078e 3D4A     		ldr	r2, .L357+4
 3997 0790 1344     		add	r3, r3, r2
 3998 0792 0A46     		mov	r2, r1
 3999 0794 83F83220 		strb	r2, [r3, #50]
 802:.\Protocolo.c **** 								if(lado1.totales[2][x]==0||(lado1.totales[2][x]&0xF0)!=0xE0){
 4000              		.loc 1 802 0
 4001 0798 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4002 079a 3A4A     		ldr	r2, .L357+4
 4003 079c 1344     		add	r3, r3, r2
 4004 079e 93F83230 		ldrb	r3, [r3, #50]
 4005 07a2 DBB2     		uxtb	r3, r3
 4006 07a4 002B     		cmp	r3, #0
 4007 07a6 09D0     		beq	.L245
 4008              		.loc 1 802 0 is_stmt 0 discriminator 1
 4009 07a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4010 07aa 364A     		ldr	r2, .L357+4
 4011 07ac 1344     		add	r3, r3, r2
 4012 07ae 93F83230 		ldrb	r3, [r3, #50]
 4013 07b2 DBB2     		uxtb	r3, r3
 4014 07b4 03F0F003 		and	r3, r3, #240
 4015 07b8 E02B     		cmp	r3, #224
 4016 07ba 04D0     		beq	.L246
 4017              	.L245:
 803:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4018              		.loc 1 803 0 is_stmt 1
 4019 07bc FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 804:.\Protocolo.c **** 									return 0;
 4020              		.loc 1 804 0
 4021 07c0 0023     		movs	r3, #0
 4022 07c2 00F05EBC 		b	.L165
 4023              	.L246:
 800:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+88];
 4024              		.loc 1 800 0 discriminator 2
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 88


 4025 07c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4026 07c8 0133     		adds	r3, r3, #1
 4027 07ca FB73     		strb	r3, [r7, #15]
 4028              	.L244:
 800:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+88];
 4029              		.loc 1 800 0 is_stmt 0 discriminator 1
 4030 07cc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4031 07ce 0B2B     		cmp	r3, #11
 4032 07d0 D7D9     		bls	.L247
 805:.\Protocolo.c **** 								}								
 806:.\Protocolo.c **** 							}
 807:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4033              		.loc 1 807 0 is_stmt 1
 4034 07d2 0023     		movs	r3, #0
 4035 07d4 FB73     		strb	r3, [r7, #15]
 4036 07d6 27E0     		b	.L248
 4037              	.L251:
 808:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 4038              		.loc 1 808 0
 4039 07d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4040 07da 0C33     		adds	r3, r3, #12
 4041 07dc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4042 07de 6532     		adds	r2, r2, #101
 4043 07e0 2749     		ldr	r1, .L357
 4044 07e2 8A5C     		ldrb	r2, [r1, r2]
 4045 07e4 D1B2     		uxtb	r1, r2
 4046 07e6 274A     		ldr	r2, .L357+4
 4047 07e8 1344     		add	r3, r3, r2
 4048 07ea 0A46     		mov	r2, r1
 4049 07ec 83F83220 		strb	r2, [r3, #50]
 809:.\Protocolo.c **** 								if(lado1.totales[2][x+12]==0||(lado1.totales[2][x+12]&0xF0)!=0xE0){
 4050              		.loc 1 809 0
 4051 07f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4052 07f2 0C33     		adds	r3, r3, #12
 4053 07f4 234A     		ldr	r2, .L357+4
 4054 07f6 1344     		add	r3, r3, r2
 4055 07f8 93F83230 		ldrb	r3, [r3, #50]
 4056 07fc DBB2     		uxtb	r3, r3
 4057 07fe 002B     		cmp	r3, #0
 4058 0800 0AD0     		beq	.L249
 4059              		.loc 1 809 0 is_stmt 0 discriminator 1
 4060 0802 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4061 0804 0C33     		adds	r3, r3, #12
 4062 0806 1F4A     		ldr	r2, .L357+4
 4063 0808 1344     		add	r3, r3, r2
 4064 080a 93F83230 		ldrb	r3, [r3, #50]
 4065 080e DBB2     		uxtb	r3, r3
 4066 0810 03F0F003 		and	r3, r3, #240
 4067 0814 E02B     		cmp	r3, #224
 4068 0816 04D0     		beq	.L250
 4069              	.L249:
 810:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4070              		.loc 1 810 0 is_stmt 1
 4071 0818 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 811:.\Protocolo.c **** 									return 0;
 4072              		.loc 1 811 0
 4073 081c 0023     		movs	r3, #0
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 89


 4074 081e 00F030BC 		b	.L165
 4075              	.L250:
 807:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 4076              		.loc 1 807 0 discriminator 2
 4077 0822 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4078 0824 0133     		adds	r3, r3, #1
 4079 0826 FB73     		strb	r3, [r7, #15]
 4080              	.L248:
 807:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 4081              		.loc 1 807 0 is_stmt 0 discriminator 1
 4082 0828 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4083 082a 0B2B     		cmp	r3, #11
 4084 082c D4D9     		bls	.L251
 812:.\Protocolo.c **** 								}								
 813:.\Protocolo.c **** 							}
 814:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4085              		.loc 1 814 0 is_stmt 1
 4086 082e 0023     		movs	r3, #0
 4087 0830 FB73     		strb	r3, [r7, #15]
 4088 0832 0DE0     		b	.L252
 4089              	.L253:
 815:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+114];
 4090              		.loc 1 815 0 discriminator 3
 4091 0834 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4092 0836 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4093 0838 7232     		adds	r2, r2, #114
 4094 083a 1149     		ldr	r1, .L357
 4095 083c 8A5C     		ldrb	r2, [r1, r2]
 4096 083e D1B2     		uxtb	r1, r2
 4097 0840 104A     		ldr	r2, .L357+4
 4098 0842 1344     		add	r3, r3, r2
 4099 0844 0A46     		mov	r2, r1
 4100 0846 83F85420 		strb	r2, [r3, #84]
 814:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+114];
 4101              		.loc 1 814 0 discriminator 3
 4102 084a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4103 084c 0133     		adds	r3, r3, #1
 4104 084e FB73     		strb	r3, [r7, #15]
 4105              	.L252:
 814:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+114];
 4106              		.loc 1 814 0 is_stmt 0 discriminator 1
 4107 0850 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4108 0852 042B     		cmp	r3, #4
 4109 0854 EED9     		bls	.L253
 816:.\Protocolo.c **** 							}
 817:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4110              		.loc 1 817 0 is_stmt 1
 4111 0856 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 818:.\Protocolo.c ****     						return 3;                            
 4112              		.loc 1 818 0
 4113 085a 0323     		movs	r3, #3
 4114 085c 00F011BC 		b	.L165
 4115              	.L233:
 819:.\Protocolo.c **** 						}
 820:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4116              		.loc 1 820 0
 4117 0860 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 90


 821:.\Protocolo.c **** 						return 1;			
 4118              		.loc 1 821 0
 4119 0864 0123     		movs	r3, #1
 4120 0866 00F00CBC 		b	.L165
 4121              	.L207:
 822:.\Protocolo.c **** 					}
 823:.\Protocolo.c **** 					else{
 824:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4122              		.loc 1 824 0
 4123 086a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 825:.\Protocolo.c **** 						return 0;					
 4124              		.loc 1 825 0
 4125 086e 0023     		movs	r3, #0
 4126 0870 00F007BC 		b	.L165
 4127              	.L206:
 826:.\Protocolo.c **** 					}
 827:.\Protocolo.c **** 				}
 828:.\Protocolo.c **** 				else{
 829:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 4128              		.loc 1 829 0
 4129 0874 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 830:.\Protocolo.c **** 					return 0;		
 4130              		.loc 1 830 0
 4131 0878 0023     		movs	r3, #0
 4132 087a 00F002BC 		b	.L165
 4133              	.L358:
 4134 087e 00BF     		.align	2
 4135              	.L357:
 4136 0880 00000000 		.word	Surtidor_rxBuffer
 4137 0884 00000000 		.word	lado1
 4138              	.L153:
 831:.\Protocolo.c **** 				}	
 832:.\Protocolo.c **** 			}
 833:.\Protocolo.c **** 		}
 834:.\Protocolo.c **** 		else{
 835:.\Protocolo.c **** 			if(version[1]!=7){
 4139              		.loc 1 835 0
 4140 0888 A24B     		ldr	r3, .L359
 4141 088a 5B78     		ldrb	r3, [r3, #1]
 4142 088c DBB2     		uxtb	r3, r3
 4143 088e 072B     		cmp	r3, #7
 4144 0890 00F0FC81 		beq	.L254
 836:.\Protocolo.c **** 				CyDelay(900);
 4145              		.loc 1 836 0
 4146 0894 4FF46170 		mov	r0, #900
 4147 0898 FFF7FEFF 		bl	CyDelay
 837:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 4148              		.loc 1 837 0
 4149 089c FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 4150 08a0 0346     		mov	r3, r0
 4151 08a2 FB73     		strb	r3, [r7, #15]
 838:.\Protocolo.c **** 				if((x==34)||(x==64)||(x==94)){				
 4152              		.loc 1 838 0
 4153 08a4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4154 08a6 222B     		cmp	r3, #34
 4155 08a8 06D0     		beq	.L255
 4156              		.loc 1 838 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 91


 4157 08aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4158 08ac 402B     		cmp	r3, #64
 4159 08ae 03D0     		beq	.L255
 4160              		.loc 1 838 0 discriminator 2
 4161 08b0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4162 08b2 5E2B     		cmp	r3, #94
 4163 08b4 40F0E681 		bne	.L256
 4164              	.L255:
 839:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 4165              		.loc 1 839 0 is_stmt 1
 4166 08b8 974B     		ldr	r3, .L359+4
 4167 08ba 1B78     		ldrb	r3, [r3]
 4168 08bc DBB2     		uxtb	r3, r3
 4169 08be FF2B     		cmp	r3, #255
 4170 08c0 40F0DC81 		bne	.L257
 4171              		.loc 1 839 0 is_stmt 0 discriminator 1
 4172 08c4 944B     		ldr	r3, .L359+4
 4173 08c6 5B78     		ldrb	r3, [r3, #1]
 4174 08c8 DBB2     		uxtb	r3, r3
 4175 08ca F62B     		cmp	r3, #246
 4176 08cc 40F0D681 		bne	.L257
 4177              		.loc 1 839 0 discriminator 2
 4178 08d0 914B     		ldr	r3, .L359+4
 4179 08d2 DB78     		ldrb	r3, [r3, #3]
 4180 08d4 DBB2     		uxtb	r3, r3
 4181 08d6 F92B     		cmp	r3, #249
 4182 08d8 40F0D081 		bne	.L257
 840:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4183              		.loc 1 840 0 is_stmt 1
 4184 08dc 0023     		movs	r3, #0
 4185 08de BB73     		strb	r3, [r7, #14]
 4186 08e0 16E0     		b	.L258
 4187              	.L261:
 841:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4188              		.loc 1 841 0
 4189 08e2 0023     		movs	r3, #0
 4190 08e4 FB73     		strb	r3, [r7, #15]
 4191 08e6 0DE0     		b	.L259
 4192              	.L260:
 842:.\Protocolo.c ****                     			lado2.totales[y][x]=0;
 4193              		.loc 1 842 0 discriminator 3
 4194 08e8 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 4195 08ea F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 4196 08ec 8B48     		ldr	r0, .L359+8
 4197 08ee 1346     		mov	r3, r2
 4198 08f0 5B00     		lsls	r3, r3, #1
 4199 08f2 1344     		add	r3, r3, r2
 4200 08f4 DB00     		lsls	r3, r3, #3
 4201 08f6 0B44     		add	r3, r3, r1
 4202 08f8 0344     		add	r3, r3, r0
 4203 08fa 0022     		movs	r2, #0
 4204 08fc 9A70     		strb	r2, [r3, #2]
 841:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4205              		.loc 1 841 0 discriminator 3
 4206 08fe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4207 0900 0133     		adds	r3, r3, #1
 4208 0902 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 92


 4209              	.L259:
 841:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4210              		.loc 1 841 0 is_stmt 0 discriminator 1
 4211 0904 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4212 0906 172B     		cmp	r3, #23
 4213 0908 EED9     		bls	.L260
 840:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4214              		.loc 1 840 0 is_stmt 1 discriminator 2
 4215 090a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4216 090c 0133     		adds	r3, r3, #1
 4217 090e BB73     		strb	r3, [r7, #14]
 4218              	.L258:
 840:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4219              		.loc 1 840 0 is_stmt 0 discriminator 1
 4220 0910 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4221 0912 022B     		cmp	r3, #2
 4222 0914 E5D9     		bls	.L261
 843:.\Protocolo.c ****                     		}
 844:.\Protocolo.c ****                     	}                        
 845:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 4223              		.loc 1 845 0 is_stmt 1
 4224 0916 0023     		movs	r3, #0
 4225 0918 FB73     		strb	r3, [r7, #15]
 4226 091a 20E0     		b	.L262
 4227              	.L265:
 846:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4228              		.loc 1 846 0
 4229 091c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4230 091e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4231 0920 0432     		adds	r2, r2, #4
 4232 0922 7D49     		ldr	r1, .L359+4
 4233 0924 8A5C     		ldrb	r2, [r1, r2]
 4234 0926 D1B2     		uxtb	r1, r2
 4235 0928 7C4A     		ldr	r2, .L359+8
 4236 092a 1344     		add	r3, r3, r2
 4237 092c 0A46     		mov	r2, r1
 4238 092e 9A70     		strb	r2, [r3, #2]
 847:.\Protocolo.c **** 							if(lado2.totales[0][x]==0||(lado2.totales[0][x]&0xF0)!=0xE0){
 4239              		.loc 1 847 0
 4240 0930 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4241 0932 7A4A     		ldr	r2, .L359+8
 4242 0934 1344     		add	r3, r3, r2
 4243 0936 9B78     		ldrb	r3, [r3, #2]
 4244 0938 DBB2     		uxtb	r3, r3
 4245 093a 002B     		cmp	r3, #0
 4246 093c 08D0     		beq	.L263
 4247              		.loc 1 847 0 is_stmt 0 discriminator 1
 4248 093e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4249 0940 764A     		ldr	r2, .L359+8
 4250 0942 1344     		add	r3, r3, r2
 4251 0944 9B78     		ldrb	r3, [r3, #2]
 4252 0946 DBB2     		uxtb	r3, r3
 4253 0948 03F0F003 		and	r3, r3, #240
 4254 094c E02B     		cmp	r3, #224
 4255 094e 03D0     		beq	.L264
 4256              	.L263:
 848:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 93


 4257              		.loc 1 848 0 is_stmt 1
 4258 0950 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 849:.\Protocolo.c **** 								return 0;
 4259              		.loc 1 849 0
 4260 0954 0023     		movs	r3, #0
 4261 0956 94E3     		b	.L165
 4262              	.L264:
 845:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4263              		.loc 1 845 0 discriminator 2
 4264 0958 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4265 095a 0133     		adds	r3, r3, #1
 4266 095c FB73     		strb	r3, [r7, #15]
 4267              	.L262:
 845:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4268              		.loc 1 845 0 is_stmt 0 discriminator 1
 4269 095e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4270 0960 072B     		cmp	r3, #7
 4271 0962 DBD9     		bls	.L265
 850:.\Protocolo.c **** 							}							
 851:.\Protocolo.c **** 						}
 852:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 4272              		.loc 1 852 0 is_stmt 1
 4273 0964 0023     		movs	r3, #0
 4274 0966 FB73     		strb	r3, [r7, #15]
 4275 0968 23E0     		b	.L266
 4276              	.L269:
 853:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 4277              		.loc 1 853 0
 4278 096a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4279 096c 0C33     		adds	r3, r3, #12
 4280 096e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4281 0970 0D32     		adds	r2, r2, #13
 4282 0972 6949     		ldr	r1, .L359+4
 4283 0974 8A5C     		ldrb	r2, [r1, r2]
 4284 0976 D1B2     		uxtb	r1, r2
 4285 0978 684A     		ldr	r2, .L359+8
 4286 097a 1344     		add	r3, r3, r2
 4287 097c 0A46     		mov	r2, r1
 4288 097e 9A70     		strb	r2, [r3, #2]
 854:.\Protocolo.c **** 							if(lado2.totales[0][x+12]==0||(lado2.totales[0][x+12]&0xF0)!=0xE0){
 4289              		.loc 1 854 0
 4290 0980 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4291 0982 0C33     		adds	r3, r3, #12
 4292 0984 654A     		ldr	r2, .L359+8
 4293 0986 1344     		add	r3, r3, r2
 4294 0988 9B78     		ldrb	r3, [r3, #2]
 4295 098a DBB2     		uxtb	r3, r3
 4296 098c 002B     		cmp	r3, #0
 4297 098e 09D0     		beq	.L267
 4298              		.loc 1 854 0 is_stmt 0 discriminator 1
 4299 0990 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4300 0992 0C33     		adds	r3, r3, #12
 4301 0994 614A     		ldr	r2, .L359+8
 4302 0996 1344     		add	r3, r3, r2
 4303 0998 9B78     		ldrb	r3, [r3, #2]
 4304 099a DBB2     		uxtb	r3, r3
 4305 099c 03F0F003 		and	r3, r3, #240
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 94


 4306 09a0 E02B     		cmp	r3, #224
 4307 09a2 03D0     		beq	.L268
 4308              	.L267:
 855:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4309              		.loc 1 855 0 is_stmt 1
 4310 09a4 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 856:.\Protocolo.c **** 								return 0;
 4311              		.loc 1 856 0
 4312 09a8 0023     		movs	r3, #0
 4313 09aa 6AE3     		b	.L165
 4314              	.L268:
 852:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 4315              		.loc 1 852 0 discriminator 2
 4316 09ac FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4317 09ae 0133     		adds	r3, r3, #1
 4318 09b0 FB73     		strb	r3, [r7, #15]
 4319              	.L266:
 852:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 4320              		.loc 1 852 0 is_stmt 0 discriminator 1
 4321 09b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4322 09b4 072B     		cmp	r3, #7
 4323 09b6 D8D9     		bls	.L269
 857:.\Protocolo.c **** 							}							
 858:.\Protocolo.c **** 						}
 859:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 4324              		.loc 1 859 0 is_stmt 1
 4325 09b8 0023     		movs	r3, #0
 4326 09ba FB73     		strb	r3, [r7, #15]
 4327 09bc 0DE0     		b	.L270
 4328              	.L271:
 860:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+22];
 4329              		.loc 1 860 0 discriminator 3
 4330 09be FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4331 09c0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4332 09c2 1632     		adds	r2, r2, #22
 4333 09c4 5449     		ldr	r1, .L359+4
 4334 09c6 8A5C     		ldrb	r2, [r1, r2]
 4335 09c8 D1B2     		uxtb	r1, r2
 4336 09ca 544A     		ldr	r2, .L359+8
 4337 09cc 1344     		add	r3, r3, r2
 4338 09ce 0A46     		mov	r2, r1
 4339 09d0 83F84A20 		strb	r2, [r3, #74]
 859:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+22];
 4340              		.loc 1 859 0 discriminator 3
 4341 09d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4342 09d6 0133     		adds	r3, r3, #1
 4343 09d8 FB73     		strb	r3, [r7, #15]
 4344              	.L270:
 859:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+22];
 4345              		.loc 1 859 0 is_stmt 0 discriminator 1
 4346 09da FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4347 09dc 032B     		cmp	r3, #3
 4348 09de EED9     		bls	.L271
 861:.\Protocolo.c **** 						}				
 862:.\Protocolo.c **** 						if(nmangueras==2){
 4349              		.loc 1 862 0 is_stmt 1
 4350 09e0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 95


 4351 09e2 022B     		cmp	r3, #2
 4352 09e4 68D1     		bne	.L272
 863:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4353              		.loc 1 863 0
 4354 09e6 0023     		movs	r3, #0
 4355 09e8 FB73     		strb	r3, [r7, #15]
 4356 09ea 20E0     		b	.L273
 4357              	.L276:
 864:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4358              		.loc 1 864 0
 4359 09ec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4360 09ee FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4361 09f0 2232     		adds	r2, r2, #34
 4362 09f2 4949     		ldr	r1, .L359+4
 4363 09f4 8A5C     		ldrb	r2, [r1, r2]
 4364 09f6 D1B2     		uxtb	r1, r2
 4365 09f8 484A     		ldr	r2, .L359+8
 4366 09fa 1344     		add	r3, r3, r2
 4367 09fc 0A46     		mov	r2, r1
 4368 09fe 9A76     		strb	r2, [r3, #26]
 865:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 4369              		.loc 1 865 0
 4370 0a00 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4371 0a02 464A     		ldr	r2, .L359+8
 4372 0a04 1344     		add	r3, r3, r2
 4373 0a06 9B7E     		ldrb	r3, [r3, #26]
 4374 0a08 DBB2     		uxtb	r3, r3
 4375 0a0a 002B     		cmp	r3, #0
 4376 0a0c 08D0     		beq	.L274
 4377              		.loc 1 865 0 is_stmt 0 discriminator 1
 4378 0a0e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4379 0a10 424A     		ldr	r2, .L359+8
 4380 0a12 1344     		add	r3, r3, r2
 4381 0a14 9B7E     		ldrb	r3, [r3, #26]
 4382 0a16 DBB2     		uxtb	r3, r3
 4383 0a18 03F0F003 		and	r3, r3, #240
 4384 0a1c E02B     		cmp	r3, #224
 4385 0a1e 03D0     		beq	.L275
 4386              	.L274:
 866:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4387              		.loc 1 866 0 is_stmt 1
 4388 0a20 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 867:.\Protocolo.c **** 									return 0;
 4389              		.loc 1 867 0
 4390 0a24 0023     		movs	r3, #0
 4391 0a26 2CE3     		b	.L165
 4392              	.L275:
 863:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4393              		.loc 1 863 0 discriminator 2
 4394 0a28 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4395 0a2a 0133     		adds	r3, r3, #1
 4396 0a2c FB73     		strb	r3, [r7, #15]
 4397              	.L273:
 863:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4398              		.loc 1 863 0 is_stmt 0 discriminator 1
 4399 0a2e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4400 0a30 072B     		cmp	r3, #7
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 96


 4401 0a32 DBD9     		bls	.L276
 868:.\Protocolo.c **** 								}								
 869:.\Protocolo.c **** 							}
 870:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4402              		.loc 1 870 0 is_stmt 1
 4403 0a34 0023     		movs	r3, #0
 4404 0a36 FB73     		strb	r3, [r7, #15]
 4405 0a38 23E0     		b	.L277
 4406              	.L280:
 871:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4407              		.loc 1 871 0
 4408 0a3a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4409 0a3c 0C33     		adds	r3, r3, #12
 4410 0a3e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4411 0a40 2B32     		adds	r2, r2, #43
 4412 0a42 3549     		ldr	r1, .L359+4
 4413 0a44 8A5C     		ldrb	r2, [r1, r2]
 4414 0a46 D1B2     		uxtb	r1, r2
 4415 0a48 344A     		ldr	r2, .L359+8
 4416 0a4a 1344     		add	r3, r3, r2
 4417 0a4c 0A46     		mov	r2, r1
 4418 0a4e 9A76     		strb	r2, [r3, #26]
 872:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 4419              		.loc 1 872 0
 4420 0a50 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4421 0a52 0C33     		adds	r3, r3, #12
 4422 0a54 314A     		ldr	r2, .L359+8
 4423 0a56 1344     		add	r3, r3, r2
 4424 0a58 9B7E     		ldrb	r3, [r3, #26]
 4425 0a5a DBB2     		uxtb	r3, r3
 4426 0a5c 002B     		cmp	r3, #0
 4427 0a5e 09D0     		beq	.L278
 4428              		.loc 1 872 0 is_stmt 0 discriminator 1
 4429 0a60 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4430 0a62 0C33     		adds	r3, r3, #12
 4431 0a64 2D4A     		ldr	r2, .L359+8
 4432 0a66 1344     		add	r3, r3, r2
 4433 0a68 9B7E     		ldrb	r3, [r3, #26]
 4434 0a6a DBB2     		uxtb	r3, r3
 4435 0a6c 03F0F003 		and	r3, r3, #240
 4436 0a70 E02B     		cmp	r3, #224
 4437 0a72 03D0     		beq	.L279
 4438              	.L278:
 873:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4439              		.loc 1 873 0 is_stmt 1
 4440 0a74 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 874:.\Protocolo.c **** 									return 0;
 4441              		.loc 1 874 0
 4442 0a78 0023     		movs	r3, #0
 4443 0a7a 02E3     		b	.L165
 4444              	.L279:
 870:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4445              		.loc 1 870 0 discriminator 2
 4446 0a7c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4447 0a7e 0133     		adds	r3, r3, #1
 4448 0a80 FB73     		strb	r3, [r7, #15]
 4449              	.L277:
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 97


 870:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4450              		.loc 1 870 0 is_stmt 0 discriminator 1
 4451 0a82 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4452 0a84 072B     		cmp	r3, #7
 4453 0a86 D8D9     		bls	.L280
 875:.\Protocolo.c **** 								}								
 876:.\Protocolo.c **** 							}
 877:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4454              		.loc 1 877 0 is_stmt 1
 4455 0a88 0023     		movs	r3, #0
 4456 0a8a FB73     		strb	r3, [r7, #15]
 4457 0a8c 0DE0     		b	.L281
 4458              	.L282:
 878:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4459              		.loc 1 878 0 discriminator 3
 4460 0a8e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4461 0a90 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4462 0a92 3432     		adds	r2, r2, #52
 4463 0a94 2049     		ldr	r1, .L359+4
 4464 0a96 8A5C     		ldrb	r2, [r1, r2]
 4465 0a98 D1B2     		uxtb	r1, r2
 4466 0a9a 204A     		ldr	r2, .L359+8
 4467 0a9c 1344     		add	r3, r3, r2
 4468 0a9e 0A46     		mov	r2, r1
 4469 0aa0 83F84F20 		strb	r2, [r3, #79]
 877:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4470              		.loc 1 877 0 discriminator 3
 4471 0aa4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4472 0aa6 0133     		adds	r3, r3, #1
 4473 0aa8 FB73     		strb	r3, [r7, #15]
 4474              	.L281:
 877:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4475              		.loc 1 877 0 is_stmt 0 discriminator 1
 4476 0aaa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4477 0aac 032B     		cmp	r3, #3
 4478 0aae EED9     		bls	.L282
 879:.\Protocolo.c **** 							}
 880:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4479              		.loc 1 880 0 is_stmt 1
 4480 0ab0 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 881:.\Protocolo.c ****     						return 2;                            
 4481              		.loc 1 881 0
 4482 0ab4 0223     		movs	r3, #2
 4483 0ab6 E4E2     		b	.L165
 4484              	.L272:
 882:.\Protocolo.c **** 						}
 883:.\Protocolo.c **** 						if(nmangueras==3){
 4485              		.loc 1 883 0
 4486 0ab8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4487 0aba 032B     		cmp	r3, #3
 4488 0abc 40F0DA80 		bne	.L283
 884:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4489              		.loc 1 884 0
 4490 0ac0 0023     		movs	r3, #0
 4491 0ac2 FB73     		strb	r3, [r7, #15]
 4492 0ac4 20E0     		b	.L284
 4493              	.L287:
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 98


 885:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4494              		.loc 1 885 0
 4495 0ac6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4496 0ac8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4497 0aca 2232     		adds	r2, r2, #34
 4498 0acc 1249     		ldr	r1, .L359+4
 4499 0ace 8A5C     		ldrb	r2, [r1, r2]
 4500 0ad0 D1B2     		uxtb	r1, r2
 4501 0ad2 124A     		ldr	r2, .L359+8
 4502 0ad4 1344     		add	r3, r3, r2
 4503 0ad6 0A46     		mov	r2, r1
 4504 0ad8 9A76     		strb	r2, [r3, #26]
 886:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 4505              		.loc 1 886 0
 4506 0ada FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4507 0adc 0F4A     		ldr	r2, .L359+8
 4508 0ade 1344     		add	r3, r3, r2
 4509 0ae0 9B7E     		ldrb	r3, [r3, #26]
 4510 0ae2 DBB2     		uxtb	r3, r3
 4511 0ae4 002B     		cmp	r3, #0
 4512 0ae6 08D0     		beq	.L285
 4513              		.loc 1 886 0 is_stmt 0 discriminator 1
 4514 0ae8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4515 0aea 0C4A     		ldr	r2, .L359+8
 4516 0aec 1344     		add	r3, r3, r2
 4517 0aee 9B7E     		ldrb	r3, [r3, #26]
 4518 0af0 DBB2     		uxtb	r3, r3
 4519 0af2 03F0F003 		and	r3, r3, #240
 4520 0af6 E02B     		cmp	r3, #224
 4521 0af8 03D0     		beq	.L286
 4522              	.L285:
 887:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4523              		.loc 1 887 0 is_stmt 1
 4524 0afa FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 888:.\Protocolo.c **** 									return 0;
 4525              		.loc 1 888 0
 4526 0afe 0023     		movs	r3, #0
 4527 0b00 BFE2     		b	.L165
 4528              	.L286:
 884:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4529              		.loc 1 884 0 discriminator 2
 4530 0b02 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4531 0b04 0133     		adds	r3, r3, #1
 4532 0b06 FB73     		strb	r3, [r7, #15]
 4533              	.L284:
 884:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4534              		.loc 1 884 0 is_stmt 0 discriminator 1
 4535 0b08 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4536 0b0a 072B     		cmp	r3, #7
 4537 0b0c DBD9     		bls	.L287
 889:.\Protocolo.c **** 								}								
 890:.\Protocolo.c **** 							}
 891:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4538              		.loc 1 891 0 is_stmt 1
 4539 0b0e 0023     		movs	r3, #0
 4540 0b10 FB73     		strb	r3, [r7, #15]
 4541 0b12 29E0     		b	.L288
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 99


 4542              	.L360:
 4543              		.align	2
 4544              	.L359:
 4545 0b14 00000000 		.word	version
 4546 0b18 00000000 		.word	Surtidor_rxBuffer
 4547 0b1c 00000000 		.word	lado2
 4548              	.L291:
 892:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4549              		.loc 1 892 0
 4550 0b20 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4551 0b22 0C33     		adds	r3, r3, #12
 4552 0b24 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4553 0b26 2B32     		adds	r2, r2, #43
 4554 0b28 AE49     		ldr	r1, .L361
 4555 0b2a 8A5C     		ldrb	r2, [r1, r2]
 4556 0b2c D1B2     		uxtb	r1, r2
 4557 0b2e AE4A     		ldr	r2, .L361+4
 4558 0b30 1344     		add	r3, r3, r2
 4559 0b32 0A46     		mov	r2, r1
 4560 0b34 9A76     		strb	r2, [r3, #26]
 893:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 4561              		.loc 1 893 0
 4562 0b36 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4563 0b38 0C33     		adds	r3, r3, #12
 4564 0b3a AB4A     		ldr	r2, .L361+4
 4565 0b3c 1344     		add	r3, r3, r2
 4566 0b3e 9B7E     		ldrb	r3, [r3, #26]
 4567 0b40 DBB2     		uxtb	r3, r3
 4568 0b42 002B     		cmp	r3, #0
 4569 0b44 09D0     		beq	.L289
 4570              		.loc 1 893 0 is_stmt 0 discriminator 1
 4571 0b46 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4572 0b48 0C33     		adds	r3, r3, #12
 4573 0b4a A74A     		ldr	r2, .L361+4
 4574 0b4c 1344     		add	r3, r3, r2
 4575 0b4e 9B7E     		ldrb	r3, [r3, #26]
 4576 0b50 DBB2     		uxtb	r3, r3
 4577 0b52 03F0F003 		and	r3, r3, #240
 4578 0b56 E02B     		cmp	r3, #224
 4579 0b58 03D0     		beq	.L290
 4580              	.L289:
 894:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4581              		.loc 1 894 0 is_stmt 1
 4582 0b5a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 895:.\Protocolo.c **** 									return 0;
 4583              		.loc 1 895 0
 4584 0b5e 0023     		movs	r3, #0
 4585 0b60 8FE2     		b	.L165
 4586              	.L290:
 891:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4587              		.loc 1 891 0 discriminator 2
 4588 0b62 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4589 0b64 0133     		adds	r3, r3, #1
 4590 0b66 FB73     		strb	r3, [r7, #15]
 4591              	.L288:
 891:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4592              		.loc 1 891 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 100


 4593 0b68 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4594 0b6a 072B     		cmp	r3, #7
 4595 0b6c D8D9     		bls	.L291
 896:.\Protocolo.c **** 								}								
 897:.\Protocolo.c **** 							}
 898:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4596              		.loc 1 898 0 is_stmt 1
 4597 0b6e 0023     		movs	r3, #0
 4598 0b70 FB73     		strb	r3, [r7, #15]
 4599 0b72 0DE0     		b	.L292
 4600              	.L293:
 899:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4601              		.loc 1 899 0 discriminator 3
 4602 0b74 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4603 0b76 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4604 0b78 3432     		adds	r2, r2, #52
 4605 0b7a 9A49     		ldr	r1, .L361
 4606 0b7c 8A5C     		ldrb	r2, [r1, r2]
 4607 0b7e D1B2     		uxtb	r1, r2
 4608 0b80 994A     		ldr	r2, .L361+4
 4609 0b82 1344     		add	r3, r3, r2
 4610 0b84 0A46     		mov	r2, r1
 4611 0b86 83F84F20 		strb	r2, [r3, #79]
 898:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4612              		.loc 1 898 0 discriminator 3
 4613 0b8a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4614 0b8c 0133     		adds	r3, r3, #1
 4615 0b8e FB73     		strb	r3, [r7, #15]
 4616              	.L292:
 898:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4617              		.loc 1 898 0 is_stmt 0 discriminator 1
 4618 0b90 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4619 0b92 032B     		cmp	r3, #3
 4620 0b94 EED9     		bls	.L293
 900:.\Protocolo.c **** 							}						
 901:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4621              		.loc 1 901 0 is_stmt 1
 4622 0b96 0023     		movs	r3, #0
 4623 0b98 FB73     		strb	r3, [r7, #15]
 4624 0b9a 23E0     		b	.L294
 4625              	.L297:
 902:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+64];
 4626              		.loc 1 902 0
 4627 0b9c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4628 0b9e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4629 0ba0 4032     		adds	r2, r2, #64
 4630 0ba2 9049     		ldr	r1, .L361
 4631 0ba4 8A5C     		ldrb	r2, [r1, r2]
 4632 0ba6 D1B2     		uxtb	r1, r2
 4633 0ba8 8F4A     		ldr	r2, .L361+4
 4634 0baa 1344     		add	r3, r3, r2
 4635 0bac 0A46     		mov	r2, r1
 4636 0bae 83F83220 		strb	r2, [r3, #50]
 903:.\Protocolo.c **** 								if(lado2.totales[2][x]==0||(lado2.totales[2][x]&0xF0)!=0xE0){
 4637              		.loc 1 903 0
 4638 0bb2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4639 0bb4 8C4A     		ldr	r2, .L361+4
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 101


 4640 0bb6 1344     		add	r3, r3, r2
 4641 0bb8 93F83230 		ldrb	r3, [r3, #50]
 4642 0bbc DBB2     		uxtb	r3, r3
 4643 0bbe 002B     		cmp	r3, #0
 4644 0bc0 09D0     		beq	.L295
 4645              		.loc 1 903 0 is_stmt 0 discriminator 1
 4646 0bc2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4647 0bc4 884A     		ldr	r2, .L361+4
 4648 0bc6 1344     		add	r3, r3, r2
 4649 0bc8 93F83230 		ldrb	r3, [r3, #50]
 4650 0bcc DBB2     		uxtb	r3, r3
 4651 0bce 03F0F003 		and	r3, r3, #240
 4652 0bd2 E02B     		cmp	r3, #224
 4653 0bd4 03D0     		beq	.L296
 4654              	.L295:
 904:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4655              		.loc 1 904 0 is_stmt 1
 4656 0bd6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 905:.\Protocolo.c **** 									return 0;
 4657              		.loc 1 905 0
 4658 0bda 0023     		movs	r3, #0
 4659 0bdc 51E2     		b	.L165
 4660              	.L296:
 901:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+64];
 4661              		.loc 1 901 0 discriminator 2
 4662 0bde FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4663 0be0 0133     		adds	r3, r3, #1
 4664 0be2 FB73     		strb	r3, [r7, #15]
 4665              	.L294:
 901:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+64];
 4666              		.loc 1 901 0 is_stmt 0 discriminator 1
 4667 0be4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4668 0be6 072B     		cmp	r3, #7
 4669 0be8 D8D9     		bls	.L297
 906:.\Protocolo.c **** 								}								
 907:.\Protocolo.c **** 							}
 908:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4670              		.loc 1 908 0 is_stmt 1
 4671 0bea 0023     		movs	r3, #0
 4672 0bec FB73     		strb	r3, [r7, #15]
 4673 0bee 26E0     		b	.L298
 4674              	.L301:
 909:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 4675              		.loc 1 909 0
 4676 0bf0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4677 0bf2 0C33     		adds	r3, r3, #12
 4678 0bf4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4679 0bf6 4932     		adds	r2, r2, #73
 4680 0bf8 7A49     		ldr	r1, .L361
 4681 0bfa 8A5C     		ldrb	r2, [r1, r2]
 4682 0bfc D1B2     		uxtb	r1, r2
 4683 0bfe 7A4A     		ldr	r2, .L361+4
 4684 0c00 1344     		add	r3, r3, r2
 4685 0c02 0A46     		mov	r2, r1
 4686 0c04 83F83220 		strb	r2, [r3, #50]
 910:.\Protocolo.c **** 								if(lado2.totales[2][x+12]==0||(lado2.totales[2][x+12]&0xF0)!=0xE0){
 4687              		.loc 1 910 0
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 102


 4688 0c08 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4689 0c0a 0C33     		adds	r3, r3, #12
 4690 0c0c 764A     		ldr	r2, .L361+4
 4691 0c0e 1344     		add	r3, r3, r2
 4692 0c10 93F83230 		ldrb	r3, [r3, #50]
 4693 0c14 DBB2     		uxtb	r3, r3
 4694 0c16 002B     		cmp	r3, #0
 4695 0c18 0AD0     		beq	.L299
 4696              		.loc 1 910 0 is_stmt 0 discriminator 1
 4697 0c1a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4698 0c1c 0C33     		adds	r3, r3, #12
 4699 0c1e 724A     		ldr	r2, .L361+4
 4700 0c20 1344     		add	r3, r3, r2
 4701 0c22 93F83230 		ldrb	r3, [r3, #50]
 4702 0c26 DBB2     		uxtb	r3, r3
 4703 0c28 03F0F003 		and	r3, r3, #240
 4704 0c2c E02B     		cmp	r3, #224
 4705 0c2e 03D0     		beq	.L300
 4706              	.L299:
 911:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4707              		.loc 1 911 0 is_stmt 1
 4708 0c30 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 912:.\Protocolo.c **** 									return 0;
 4709              		.loc 1 912 0
 4710 0c34 0023     		movs	r3, #0
 4711 0c36 24E2     		b	.L165
 4712              	.L300:
 908:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 4713              		.loc 1 908 0 discriminator 2
 4714 0c38 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4715 0c3a 0133     		adds	r3, r3, #1
 4716 0c3c FB73     		strb	r3, [r7, #15]
 4717              	.L298:
 908:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 4718              		.loc 1 908 0 is_stmt 0 discriminator 1
 4719 0c3e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4720 0c40 072B     		cmp	r3, #7
 4721 0c42 D5D9     		bls	.L301
 913:.\Protocolo.c **** 								}								
 914:.\Protocolo.c **** 							}
 915:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4722              		.loc 1 915 0 is_stmt 1
 4723 0c44 0023     		movs	r3, #0
 4724 0c46 FB73     		strb	r3, [r7, #15]
 4725 0c48 0DE0     		b	.L302
 4726              	.L303:
 916:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+82];
 4727              		.loc 1 916 0 discriminator 3
 4728 0c4a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4729 0c4c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4730 0c4e 5232     		adds	r2, r2, #82
 4731 0c50 6449     		ldr	r1, .L361
 4732 0c52 8A5C     		ldrb	r2, [r1, r2]
 4733 0c54 D1B2     		uxtb	r1, r2
 4734 0c56 644A     		ldr	r2, .L361+4
 4735 0c58 1344     		add	r3, r3, r2
 4736 0c5a 0A46     		mov	r2, r1
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 103


 4737 0c5c 83F85420 		strb	r2, [r3, #84]
 915:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+82];
 4738              		.loc 1 915 0 discriminator 3
 4739 0c60 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4740 0c62 0133     		adds	r3, r3, #1
 4741 0c64 FB73     		strb	r3, [r7, #15]
 4742              	.L302:
 915:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+82];
 4743              		.loc 1 915 0 is_stmt 0 discriminator 1
 4744 0c66 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4745 0c68 032B     		cmp	r3, #3
 4746 0c6a EED9     		bls	.L303
 917:.\Protocolo.c **** 							}
 918:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4747              		.loc 1 918 0 is_stmt 1
 4748 0c6c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 919:.\Protocolo.c ****     						return 3;                            
 4749              		.loc 1 919 0
 4750 0c70 0323     		movs	r3, #3
 4751 0c72 06E2     		b	.L165
 4752              	.L283:
 920:.\Protocolo.c **** 						}
 921:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4753              		.loc 1 921 0
 4754 0c74 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 922:.\Protocolo.c **** 						return 1;			
 4755              		.loc 1 922 0
 4756 0c78 0123     		movs	r3, #1
 4757 0c7a 02E2     		b	.L165
 4758              	.L257:
 923:.\Protocolo.c **** 					}
 924:.\Protocolo.c **** 					else{
 925:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4759              		.loc 1 925 0
 4760 0c7c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 926:.\Protocolo.c **** 						return 0;		
 4761              		.loc 1 926 0
 4762 0c80 0023     		movs	r3, #0
 4763 0c82 FEE1     		b	.L165
 4764              	.L256:
 927:.\Protocolo.c **** 					}
 928:.\Protocolo.c **** 				}
 929:.\Protocolo.c **** 				else{
 930:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 4765              		.loc 1 930 0
 4766 0c84 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 931:.\Protocolo.c **** 					return 0;		
 4767              		.loc 1 931 0
 4768 0c88 0023     		movs	r3, #0
 4769 0c8a FAE1     		b	.L165
 4770              	.L254:
 932:.\Protocolo.c **** 				}				
 933:.\Protocolo.c **** 			}
 934:.\Protocolo.c **** 			else{
 935:.\Protocolo.c **** 				CyDelay(900);
 4771              		.loc 1 935 0
 4772 0c8c 4FF46170 		mov	r0, #900
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 104


 4773 0c90 FFF7FEFF 		bl	CyDelay
 936:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 4774              		.loc 1 936 0
 4775 0c94 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 4776 0c98 0346     		mov	r3, r0
 4777 0c9a FB73     		strb	r3, [r7, #15]
 937:.\Protocolo.c **** 				if((x==46)||(x==88)||(x==130)){					
 4778              		.loc 1 937 0
 4779 0c9c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4780 0c9e 2E2B     		cmp	r3, #46
 4781 0ca0 06D0     		beq	.L304
 4782              		.loc 1 937 0 is_stmt 0 discriminator 1
 4783 0ca2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4784 0ca4 582B     		cmp	r3, #88
 4785 0ca6 03D0     		beq	.L304
 4786              		.loc 1 937 0 discriminator 2
 4787 0ca8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4788 0caa 822B     		cmp	r3, #130
 4789 0cac 40F0E481 		bne	.L305
 4790              	.L304:
 938:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 4791              		.loc 1 938 0 is_stmt 1
 4792 0cb0 4C4B     		ldr	r3, .L361
 4793 0cb2 1B78     		ldrb	r3, [r3]
 4794 0cb4 DBB2     		uxtb	r3, r3
 4795 0cb6 FF2B     		cmp	r3, #255
 4796 0cb8 40F0DA81 		bne	.L306
 4797              		.loc 1 938 0 is_stmt 0 discriminator 1
 4798 0cbc 494B     		ldr	r3, .L361
 4799 0cbe 5B78     		ldrb	r3, [r3, #1]
 4800 0cc0 DBB2     		uxtb	r3, r3
 4801 0cc2 F62B     		cmp	r3, #246
 4802 0cc4 40F0D481 		bne	.L306
 4803              		.loc 1 938 0 discriminator 2
 4804 0cc8 464B     		ldr	r3, .L361
 4805 0cca DB78     		ldrb	r3, [r3, #3]
 4806 0ccc DBB2     		uxtb	r3, r3
 4807 0cce F92B     		cmp	r3, #249
 4808 0cd0 40F0CE81 		bne	.L306
 939:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4809              		.loc 1 939 0 is_stmt 1
 4810 0cd4 0023     		movs	r3, #0
 4811 0cd6 BB73     		strb	r3, [r7, #14]
 4812 0cd8 16E0     		b	.L307
 4813              	.L310:
 940:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4814              		.loc 1 940 0
 4815 0cda 0023     		movs	r3, #0
 4816 0cdc FB73     		strb	r3, [r7, #15]
 4817 0cde 0DE0     		b	.L308
 4818              	.L309:
 941:.\Protocolo.c ****                     			lado2.totales[y][x]=0;
 4819              		.loc 1 941 0 discriminator 3
 4820 0ce0 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 4821 0ce2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 4822 0ce4 4048     		ldr	r0, .L361+4
 4823 0ce6 1346     		mov	r3, r2
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 105


 4824 0ce8 5B00     		lsls	r3, r3, #1
 4825 0cea 1344     		add	r3, r3, r2
 4826 0cec DB00     		lsls	r3, r3, #3
 4827 0cee 0B44     		add	r3, r3, r1
 4828 0cf0 0344     		add	r3, r3, r0
 4829 0cf2 0022     		movs	r2, #0
 4830 0cf4 9A70     		strb	r2, [r3, #2]
 940:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4831              		.loc 1 940 0 discriminator 3
 4832 0cf6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4833 0cf8 0133     		adds	r3, r3, #1
 4834 0cfa FB73     		strb	r3, [r7, #15]
 4835              	.L308:
 940:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4836              		.loc 1 940 0 is_stmt 0 discriminator 1
 4837 0cfc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4838 0cfe 172B     		cmp	r3, #23
 4839 0d00 EED9     		bls	.L309
 939:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4840              		.loc 1 939 0 is_stmt 1 discriminator 2
 4841 0d02 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4842 0d04 0133     		adds	r3, r3, #1
 4843 0d06 BB73     		strb	r3, [r7, #14]
 4844              	.L307:
 939:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4845              		.loc 1 939 0 is_stmt 0 discriminator 1
 4846 0d08 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4847 0d0a 022B     		cmp	r3, #2
 4848 0d0c E5D9     		bls	.L310
 942:.\Protocolo.c ****                     		}
 943:.\Protocolo.c ****                     	}                         
 944:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4849              		.loc 1 944 0 is_stmt 1
 4850 0d0e 0023     		movs	r3, #0
 4851 0d10 FB73     		strb	r3, [r7, #15]
 4852 0d12 20E0     		b	.L311
 4853              	.L314:
 945:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4854              		.loc 1 945 0
 4855 0d14 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4856 0d16 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4857 0d18 0432     		adds	r2, r2, #4
 4858 0d1a 3249     		ldr	r1, .L361
 4859 0d1c 8A5C     		ldrb	r2, [r1, r2]
 4860 0d1e D1B2     		uxtb	r1, r2
 4861 0d20 314A     		ldr	r2, .L361+4
 4862 0d22 1344     		add	r3, r3, r2
 4863 0d24 0A46     		mov	r2, r1
 4864 0d26 9A70     		strb	r2, [r3, #2]
 946:.\Protocolo.c **** 							if(lado2.totales[0][x]==0||(lado2.totales[0][x]&0xF0)!=0xE0){
 4865              		.loc 1 946 0
 4866 0d28 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4867 0d2a 2F4A     		ldr	r2, .L361+4
 4868 0d2c 1344     		add	r3, r3, r2
 4869 0d2e 9B78     		ldrb	r3, [r3, #2]
 4870 0d30 DBB2     		uxtb	r3, r3
 4871 0d32 002B     		cmp	r3, #0
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 106


 4872 0d34 08D0     		beq	.L312
 4873              		.loc 1 946 0 is_stmt 0 discriminator 1
 4874 0d36 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4875 0d38 2B4A     		ldr	r2, .L361+4
 4876 0d3a 1344     		add	r3, r3, r2
 4877 0d3c 9B78     		ldrb	r3, [r3, #2]
 4878 0d3e DBB2     		uxtb	r3, r3
 4879 0d40 03F0F003 		and	r3, r3, #240
 4880 0d44 E02B     		cmp	r3, #224
 4881 0d46 03D0     		beq	.L313
 4882              	.L312:
 947:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4883              		.loc 1 947 0 is_stmt 1
 4884 0d48 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 948:.\Protocolo.c **** 								return 0;
 4885              		.loc 1 948 0
 4886 0d4c 0023     		movs	r3, #0
 4887 0d4e 98E1     		b	.L165
 4888              	.L313:
 944:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4889              		.loc 1 944 0 discriminator 2
 4890 0d50 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4891 0d52 0133     		adds	r3, r3, #1
 4892 0d54 FB73     		strb	r3, [r7, #15]
 4893              	.L311:
 944:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4894              		.loc 1 944 0 is_stmt 0 discriminator 1
 4895 0d56 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4896 0d58 0B2B     		cmp	r3, #11
 4897 0d5a DBD9     		bls	.L314
 949:.\Protocolo.c **** 							}							
 950:.\Protocolo.c **** 						}
 951:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4898              		.loc 1 951 0 is_stmt 1
 4899 0d5c 0023     		movs	r3, #0
 4900 0d5e FB73     		strb	r3, [r7, #15]
 4901 0d60 23E0     		b	.L315
 4902              	.L318:
 952:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 4903              		.loc 1 952 0
 4904 0d62 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4905 0d64 0C33     		adds	r3, r3, #12
 4906 0d66 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4907 0d68 1132     		adds	r2, r2, #17
 4908 0d6a 1E49     		ldr	r1, .L361
 4909 0d6c 8A5C     		ldrb	r2, [r1, r2]
 4910 0d6e D1B2     		uxtb	r1, r2
 4911 0d70 1D4A     		ldr	r2, .L361+4
 4912 0d72 1344     		add	r3, r3, r2
 4913 0d74 0A46     		mov	r2, r1
 4914 0d76 9A70     		strb	r2, [r3, #2]
 953:.\Protocolo.c **** 							if(lado2.totales[0][x+12]==0||(lado2.totales[0][x+12]&0xF0)!=0xE0){
 4915              		.loc 1 953 0
 4916 0d78 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4917 0d7a 0C33     		adds	r3, r3, #12
 4918 0d7c 1A4A     		ldr	r2, .L361+4
 4919 0d7e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 107


 4920 0d80 9B78     		ldrb	r3, [r3, #2]
 4921 0d82 DBB2     		uxtb	r3, r3
 4922 0d84 002B     		cmp	r3, #0
 4923 0d86 09D0     		beq	.L316
 4924              		.loc 1 953 0 is_stmt 0 discriminator 1
 4925 0d88 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4926 0d8a 0C33     		adds	r3, r3, #12
 4927 0d8c 164A     		ldr	r2, .L361+4
 4928 0d8e 1344     		add	r3, r3, r2
 4929 0d90 9B78     		ldrb	r3, [r3, #2]
 4930 0d92 DBB2     		uxtb	r3, r3
 4931 0d94 03F0F003 		and	r3, r3, #240
 4932 0d98 E02B     		cmp	r3, #224
 4933 0d9a 03D0     		beq	.L317
 4934              	.L316:
 954:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4935              		.loc 1 954 0 is_stmt 1
 4936 0d9c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 955:.\Protocolo.c **** 								return 0;
 4937              		.loc 1 955 0
 4938 0da0 0023     		movs	r3, #0
 4939 0da2 6EE1     		b	.L165
 4940              	.L317:
 951:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 4941              		.loc 1 951 0 discriminator 2
 4942 0da4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4943 0da6 0133     		adds	r3, r3, #1
 4944 0da8 FB73     		strb	r3, [r7, #15]
 4945              	.L315:
 951:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 4946              		.loc 1 951 0 is_stmt 0 discriminator 1
 4947 0daa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4948 0dac 0B2B     		cmp	r3, #11
 4949 0dae D8D9     		bls	.L318
 956:.\Protocolo.c **** 							}							
 957:.\Protocolo.c **** 						}
 958:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 4950              		.loc 1 958 0 is_stmt 1
 4951 0db0 0023     		movs	r3, #0
 4952 0db2 FB73     		strb	r3, [r7, #15]
 4953 0db4 0DE0     		b	.L319
 4954              	.L320:
 959:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+30];
 4955              		.loc 1 959 0 discriminator 3
 4956 0db6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4957 0db8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4958 0dba 1E32     		adds	r2, r2, #30
 4959 0dbc 0949     		ldr	r1, .L361
 4960 0dbe 8A5C     		ldrb	r2, [r1, r2]
 4961 0dc0 D1B2     		uxtb	r1, r2
 4962 0dc2 094A     		ldr	r2, .L361+4
 4963 0dc4 1344     		add	r3, r3, r2
 4964 0dc6 0A46     		mov	r2, r1
 4965 0dc8 83F84A20 		strb	r2, [r3, #74]
 958:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+30];
 4966              		.loc 1 958 0 discriminator 3
 4967 0dcc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 108


 4968 0dce 0133     		adds	r3, r3, #1
 4969 0dd0 FB73     		strb	r3, [r7, #15]
 4970              	.L319:
 958:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+30];
 4971              		.loc 1 958 0 is_stmt 0 discriminator 1
 4972 0dd2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4973 0dd4 042B     		cmp	r3, #4
 4974 0dd6 EED9     		bls	.L320
 960:.\Protocolo.c **** 						}				
 961:.\Protocolo.c **** 						if(nmangueras==2){
 4975              		.loc 1 961 0 is_stmt 1
 4976 0dd8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4977 0dda 022B     		cmp	r3, #2
 4978 0ddc 6CD1     		bne	.L321
 962:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4979              		.loc 1 962 0
 4980 0dde 0023     		movs	r3, #0
 4981 0de0 FB73     		strb	r3, [r7, #15]
 4982 0de2 24E0     		b	.L322
 4983              	.L362:
 4984              		.align	2
 4985              	.L361:
 4986 0de4 00000000 		.word	Surtidor_rxBuffer
 4987 0de8 00000000 		.word	lado2
 4988              	.L325:
 963:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 4989              		.loc 1 963 0
 4990 0dec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4991 0dee FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4992 0df0 2E32     		adds	r2, r2, #46
 4993 0df2 A649     		ldr	r1, .L363
 4994 0df4 8A5C     		ldrb	r2, [r1, r2]
 4995 0df6 D1B2     		uxtb	r1, r2
 4996 0df8 A54A     		ldr	r2, .L363+4
 4997 0dfa 1344     		add	r3, r3, r2
 4998 0dfc 0A46     		mov	r2, r1
 4999 0dfe 9A76     		strb	r2, [r3, #26]
 964:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 5000              		.loc 1 964 0
 5001 0e00 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5002 0e02 A34A     		ldr	r2, .L363+4
 5003 0e04 1344     		add	r3, r3, r2
 5004 0e06 9B7E     		ldrb	r3, [r3, #26]
 5005 0e08 DBB2     		uxtb	r3, r3
 5006 0e0a 002B     		cmp	r3, #0
 5007 0e0c 08D0     		beq	.L323
 5008              		.loc 1 964 0 is_stmt 0 discriminator 1
 5009 0e0e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5010 0e10 9F4A     		ldr	r2, .L363+4
 5011 0e12 1344     		add	r3, r3, r2
 5012 0e14 9B7E     		ldrb	r3, [r3, #26]
 5013 0e16 DBB2     		uxtb	r3, r3
 5014 0e18 03F0F003 		and	r3, r3, #240
 5015 0e1c E02B     		cmp	r3, #224
 5016 0e1e 03D0     		beq	.L324
 5017              	.L323:
 965:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 109


 5018              		.loc 1 965 0 is_stmt 1
 5019 0e20 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 966:.\Protocolo.c **** 									return 0;
 5020              		.loc 1 966 0
 5021 0e24 0023     		movs	r3, #0
 5022 0e26 2CE1     		b	.L165
 5023              	.L324:
 962:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5024              		.loc 1 962 0 discriminator 2
 5025 0e28 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5026 0e2a 0133     		adds	r3, r3, #1
 5027 0e2c FB73     		strb	r3, [r7, #15]
 5028              	.L322:
 962:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5029              		.loc 1 962 0 is_stmt 0 discriminator 1
 5030 0e2e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5031 0e30 0B2B     		cmp	r3, #11
 5032 0e32 DBD9     		bls	.L325
 967:.\Protocolo.c **** 								}								
 968:.\Protocolo.c **** 							}
 969:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5033              		.loc 1 969 0 is_stmt 1
 5034 0e34 0023     		movs	r3, #0
 5035 0e36 FB73     		strb	r3, [r7, #15]
 5036 0e38 23E0     		b	.L326
 5037              	.L329:
 970:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5038              		.loc 1 970 0
 5039 0e3a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5040 0e3c 0C33     		adds	r3, r3, #12
 5041 0e3e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5042 0e40 3B32     		adds	r2, r2, #59
 5043 0e42 9249     		ldr	r1, .L363
 5044 0e44 8A5C     		ldrb	r2, [r1, r2]
 5045 0e46 D1B2     		uxtb	r1, r2
 5046 0e48 914A     		ldr	r2, .L363+4
 5047 0e4a 1344     		add	r3, r3, r2
 5048 0e4c 0A46     		mov	r2, r1
 5049 0e4e 9A76     		strb	r2, [r3, #26]
 971:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 5050              		.loc 1 971 0
 5051 0e50 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5052 0e52 0C33     		adds	r3, r3, #12
 5053 0e54 8E4A     		ldr	r2, .L363+4
 5054 0e56 1344     		add	r3, r3, r2
 5055 0e58 9B7E     		ldrb	r3, [r3, #26]
 5056 0e5a DBB2     		uxtb	r3, r3
 5057 0e5c 002B     		cmp	r3, #0
 5058 0e5e 09D0     		beq	.L327
 5059              		.loc 1 971 0 is_stmt 0 discriminator 1
 5060 0e60 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5061 0e62 0C33     		adds	r3, r3, #12
 5062 0e64 8A4A     		ldr	r2, .L363+4
 5063 0e66 1344     		add	r3, r3, r2
 5064 0e68 9B7E     		ldrb	r3, [r3, #26]
 5065 0e6a DBB2     		uxtb	r3, r3
 5066 0e6c 03F0F003 		and	r3, r3, #240
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 110


 5067 0e70 E02B     		cmp	r3, #224
 5068 0e72 03D0     		beq	.L328
 5069              	.L327:
 972:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5070              		.loc 1 972 0 is_stmt 1
 5071 0e74 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 973:.\Protocolo.c **** 									return 0;
 5072              		.loc 1 973 0
 5073 0e78 0023     		movs	r3, #0
 5074 0e7a 02E1     		b	.L165
 5075              	.L328:
 969:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5076              		.loc 1 969 0 discriminator 2
 5077 0e7c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5078 0e7e 0133     		adds	r3, r3, #1
 5079 0e80 FB73     		strb	r3, [r7, #15]
 5080              	.L326:
 969:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5081              		.loc 1 969 0 is_stmt 0 discriminator 1
 5082 0e82 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5083 0e84 0B2B     		cmp	r3, #11
 5084 0e86 D8D9     		bls	.L329
 974:.\Protocolo.c **** 								}								
 975:.\Protocolo.c **** 							}
 976:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5085              		.loc 1 976 0 is_stmt 1
 5086 0e88 0023     		movs	r3, #0
 5087 0e8a FB73     		strb	r3, [r7, #15]
 5088 0e8c 0DE0     		b	.L330
 5089              	.L331:
 977:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5090              		.loc 1 977 0 discriminator 3
 5091 0e8e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5092 0e90 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5093 0e92 4832     		adds	r2, r2, #72
 5094 0e94 7D49     		ldr	r1, .L363
 5095 0e96 8A5C     		ldrb	r2, [r1, r2]
 5096 0e98 D1B2     		uxtb	r1, r2
 5097 0e9a 7D4A     		ldr	r2, .L363+4
 5098 0e9c 1344     		add	r3, r3, r2
 5099 0e9e 0A46     		mov	r2, r1
 5100 0ea0 83F84F20 		strb	r2, [r3, #79]
 976:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5101              		.loc 1 976 0 discriminator 3
 5102 0ea4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5103 0ea6 0133     		adds	r3, r3, #1
 5104 0ea8 FB73     		strb	r3, [r7, #15]
 5105              	.L330:
 976:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5106              		.loc 1 976 0 is_stmt 0 discriminator 1
 5107 0eaa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5108 0eac 042B     		cmp	r3, #4
 5109 0eae EED9     		bls	.L331
 978:.\Protocolo.c **** 							}
 979:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 5110              		.loc 1 979 0 is_stmt 1
 5111 0eb0 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 111


 980:.\Protocolo.c ****     						return 2;                            
 5112              		.loc 1 980 0
 5113 0eb4 0223     		movs	r3, #2
 5114 0eb6 E4E0     		b	.L165
 5115              	.L321:
 981:.\Protocolo.c **** 						}
 982:.\Protocolo.c **** 						if(nmangueras==3){
 5116              		.loc 1 982 0
 5117 0eb8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5118 0eba 032B     		cmp	r3, #3
 5119 0ebc 40F0D480 		bne	.L332
 983:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5120              		.loc 1 983 0
 5121 0ec0 0023     		movs	r3, #0
 5122 0ec2 FB73     		strb	r3, [r7, #15]
 5123 0ec4 20E0     		b	.L333
 5124              	.L336:
 984:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5125              		.loc 1 984 0
 5126 0ec6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5127 0ec8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5128 0eca 2E32     		adds	r2, r2, #46
 5129 0ecc 6F49     		ldr	r1, .L363
 5130 0ece 8A5C     		ldrb	r2, [r1, r2]
 5131 0ed0 D1B2     		uxtb	r1, r2
 5132 0ed2 6F4A     		ldr	r2, .L363+4
 5133 0ed4 1344     		add	r3, r3, r2
 5134 0ed6 0A46     		mov	r2, r1
 5135 0ed8 9A76     		strb	r2, [r3, #26]
 985:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 5136              		.loc 1 985 0
 5137 0eda FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5138 0edc 6C4A     		ldr	r2, .L363+4
 5139 0ede 1344     		add	r3, r3, r2
 5140 0ee0 9B7E     		ldrb	r3, [r3, #26]
 5141 0ee2 DBB2     		uxtb	r3, r3
 5142 0ee4 002B     		cmp	r3, #0
 5143 0ee6 08D0     		beq	.L334
 5144              		.loc 1 985 0 is_stmt 0 discriminator 1
 5145 0ee8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5146 0eea 694A     		ldr	r2, .L363+4
 5147 0eec 1344     		add	r3, r3, r2
 5148 0eee 9B7E     		ldrb	r3, [r3, #26]
 5149 0ef0 DBB2     		uxtb	r3, r3
 5150 0ef2 03F0F003 		and	r3, r3, #240
 5151 0ef6 E02B     		cmp	r3, #224
 5152 0ef8 03D0     		beq	.L335
 5153              	.L334:
 986:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5154              		.loc 1 986 0 is_stmt 1
 5155 0efa FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 987:.\Protocolo.c **** 									return 0;
 5156              		.loc 1 987 0
 5157 0efe 0023     		movs	r3, #0
 5158 0f00 BFE0     		b	.L165
 5159              	.L335:
 983:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 112


 5160              		.loc 1 983 0 discriminator 2
 5161 0f02 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5162 0f04 0133     		adds	r3, r3, #1
 5163 0f06 FB73     		strb	r3, [r7, #15]
 5164              	.L333:
 983:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5165              		.loc 1 983 0 is_stmt 0 discriminator 1
 5166 0f08 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5167 0f0a 0B2B     		cmp	r3, #11
 5168 0f0c DBD9     		bls	.L336
 988:.\Protocolo.c **** 								}								
 989:.\Protocolo.c **** 							}
 990:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5169              		.loc 1 990 0 is_stmt 1
 5170 0f0e 0023     		movs	r3, #0
 5171 0f10 FB73     		strb	r3, [r7, #15]
 5172 0f12 23E0     		b	.L337
 5173              	.L340:
 991:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5174              		.loc 1 991 0
 5175 0f14 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5176 0f16 0C33     		adds	r3, r3, #12
 5177 0f18 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5178 0f1a 3B32     		adds	r2, r2, #59
 5179 0f1c 5B49     		ldr	r1, .L363
 5180 0f1e 8A5C     		ldrb	r2, [r1, r2]
 5181 0f20 D1B2     		uxtb	r1, r2
 5182 0f22 5B4A     		ldr	r2, .L363+4
 5183 0f24 1344     		add	r3, r3, r2
 5184 0f26 0A46     		mov	r2, r1
 5185 0f28 9A76     		strb	r2, [r3, #26]
 992:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 5186              		.loc 1 992 0
 5187 0f2a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5188 0f2c 0C33     		adds	r3, r3, #12
 5189 0f2e 584A     		ldr	r2, .L363+4
 5190 0f30 1344     		add	r3, r3, r2
 5191 0f32 9B7E     		ldrb	r3, [r3, #26]
 5192 0f34 DBB2     		uxtb	r3, r3
 5193 0f36 002B     		cmp	r3, #0
 5194 0f38 09D0     		beq	.L338
 5195              		.loc 1 992 0 is_stmt 0 discriminator 1
 5196 0f3a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5197 0f3c 0C33     		adds	r3, r3, #12
 5198 0f3e 544A     		ldr	r2, .L363+4
 5199 0f40 1344     		add	r3, r3, r2
 5200 0f42 9B7E     		ldrb	r3, [r3, #26]
 5201 0f44 DBB2     		uxtb	r3, r3
 5202 0f46 03F0F003 		and	r3, r3, #240
 5203 0f4a E02B     		cmp	r3, #224
 5204 0f4c 03D0     		beq	.L339
 5205              	.L338:
 993:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5206              		.loc 1 993 0 is_stmt 1
 5207 0f4e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 994:.\Protocolo.c **** 									return 0;
 5208              		.loc 1 994 0
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 113


 5209 0f52 0023     		movs	r3, #0
 5210 0f54 95E0     		b	.L165
 5211              	.L339:
 990:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5212              		.loc 1 990 0 discriminator 2
 5213 0f56 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5214 0f58 0133     		adds	r3, r3, #1
 5215 0f5a FB73     		strb	r3, [r7, #15]
 5216              	.L337:
 990:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5217              		.loc 1 990 0 is_stmt 0 discriminator 1
 5218 0f5c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5219 0f5e 0B2B     		cmp	r3, #11
 5220 0f60 D8D9     		bls	.L340
 995:.\Protocolo.c **** 								}								
 996:.\Protocolo.c **** 							}
 997:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5221              		.loc 1 997 0 is_stmt 1
 5222 0f62 0023     		movs	r3, #0
 5223 0f64 FB73     		strb	r3, [r7, #15]
 5224 0f66 0DE0     		b	.L341
 5225              	.L342:
 998:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5226              		.loc 1 998 0 discriminator 3
 5227 0f68 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5228 0f6a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5229 0f6c 4832     		adds	r2, r2, #72
 5230 0f6e 4749     		ldr	r1, .L363
 5231 0f70 8A5C     		ldrb	r2, [r1, r2]
 5232 0f72 D1B2     		uxtb	r1, r2
 5233 0f74 464A     		ldr	r2, .L363+4
 5234 0f76 1344     		add	r3, r3, r2
 5235 0f78 0A46     		mov	r2, r1
 5236 0f7a 83F84F20 		strb	r2, [r3, #79]
 997:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5237              		.loc 1 997 0 discriminator 3
 5238 0f7e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5239 0f80 0133     		adds	r3, r3, #1
 5240 0f82 FB73     		strb	r3, [r7, #15]
 5241              	.L341:
 997:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5242              		.loc 1 997 0 is_stmt 0 discriminator 1
 5243 0f84 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5244 0f86 042B     		cmp	r3, #4
 5245 0f88 EED9     		bls	.L342
 999:.\Protocolo.c **** 							}					
1000:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5246              		.loc 1 1000 0 is_stmt 1
 5247 0f8a 0023     		movs	r3, #0
 5248 0f8c FB73     		strb	r3, [r7, #15]
 5249 0f8e 23E0     		b	.L343
 5250              	.L346:
1001:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+88];
 5251              		.loc 1 1001 0
 5252 0f90 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5253 0f92 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5254 0f94 5832     		adds	r2, r2, #88
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 114


 5255 0f96 3D49     		ldr	r1, .L363
 5256 0f98 8A5C     		ldrb	r2, [r1, r2]
 5257 0f9a D1B2     		uxtb	r1, r2
 5258 0f9c 3C4A     		ldr	r2, .L363+4
 5259 0f9e 1344     		add	r3, r3, r2
 5260 0fa0 0A46     		mov	r2, r1
 5261 0fa2 83F83220 		strb	r2, [r3, #50]
1002:.\Protocolo.c **** 								if(lado2.totales[2][x]==0||(lado2.totales[2][x]&0xF0)!=0xE0){
 5262              		.loc 1 1002 0
 5263 0fa6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5264 0fa8 394A     		ldr	r2, .L363+4
 5265 0faa 1344     		add	r3, r3, r2
 5266 0fac 93F83230 		ldrb	r3, [r3, #50]
 5267 0fb0 DBB2     		uxtb	r3, r3
 5268 0fb2 002B     		cmp	r3, #0
 5269 0fb4 09D0     		beq	.L344
 5270              		.loc 1 1002 0 is_stmt 0 discriminator 1
 5271 0fb6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5272 0fb8 354A     		ldr	r2, .L363+4
 5273 0fba 1344     		add	r3, r3, r2
 5274 0fbc 93F83230 		ldrb	r3, [r3, #50]
 5275 0fc0 DBB2     		uxtb	r3, r3
 5276 0fc2 03F0F003 		and	r3, r3, #240
 5277 0fc6 E02B     		cmp	r3, #224
 5278 0fc8 03D0     		beq	.L345
 5279              	.L344:
1003:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5280              		.loc 1 1003 0 is_stmt 1
 5281 0fca FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1004:.\Protocolo.c **** 									return 0;
 5282              		.loc 1 1004 0
 5283 0fce 0023     		movs	r3, #0
 5284 0fd0 57E0     		b	.L165
 5285              	.L345:
1000:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+88];
 5286              		.loc 1 1000 0 discriminator 2
 5287 0fd2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5288 0fd4 0133     		adds	r3, r3, #1
 5289 0fd6 FB73     		strb	r3, [r7, #15]
 5290              	.L343:
1000:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+88];
 5291              		.loc 1 1000 0 is_stmt 0 discriminator 1
 5292 0fd8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5293 0fda 0B2B     		cmp	r3, #11
 5294 0fdc D8D9     		bls	.L346
1005:.\Protocolo.c **** 								}								
1006:.\Protocolo.c **** 							}
1007:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5295              		.loc 1 1007 0 is_stmt 1
 5296 0fde 0023     		movs	r3, #0
 5297 0fe0 FB73     		strb	r3, [r7, #15]
 5298 0fe2 26E0     		b	.L347
 5299              	.L350:
1008:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 5300              		.loc 1 1008 0
 5301 0fe4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5302 0fe6 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 115


 5303 0fe8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5304 0fea 6532     		adds	r2, r2, #101
 5305 0fec 2749     		ldr	r1, .L363
 5306 0fee 8A5C     		ldrb	r2, [r1, r2]
 5307 0ff0 D1B2     		uxtb	r1, r2
 5308 0ff2 274A     		ldr	r2, .L363+4
 5309 0ff4 1344     		add	r3, r3, r2
 5310 0ff6 0A46     		mov	r2, r1
 5311 0ff8 83F83220 		strb	r2, [r3, #50]
1009:.\Protocolo.c **** 								if(lado2.totales[2][x+12]==0||(lado2.totales[2][x+12]&0xF0)!=0xE0){
 5312              		.loc 1 1009 0
 5313 0ffc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5314 0ffe 0C33     		adds	r3, r3, #12
 5315 1000 234A     		ldr	r2, .L363+4
 5316 1002 1344     		add	r3, r3, r2
 5317 1004 93F83230 		ldrb	r3, [r3, #50]
 5318 1008 DBB2     		uxtb	r3, r3
 5319 100a 002B     		cmp	r3, #0
 5320 100c 0AD0     		beq	.L348
 5321              		.loc 1 1009 0 is_stmt 0 discriminator 1
 5322 100e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5323 1010 0C33     		adds	r3, r3, #12
 5324 1012 1F4A     		ldr	r2, .L363+4
 5325 1014 1344     		add	r3, r3, r2
 5326 1016 93F83230 		ldrb	r3, [r3, #50]
 5327 101a DBB2     		uxtb	r3, r3
 5328 101c 03F0F003 		and	r3, r3, #240
 5329 1020 E02B     		cmp	r3, #224
 5330 1022 03D0     		beq	.L349
 5331              	.L348:
1010:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5332              		.loc 1 1010 0 is_stmt 1
 5333 1024 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1011:.\Protocolo.c **** 									return 0;
 5334              		.loc 1 1011 0
 5335 1028 0023     		movs	r3, #0
 5336 102a 2AE0     		b	.L165
 5337              	.L349:
1007:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 5338              		.loc 1 1007 0 discriminator 2
 5339 102c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5340 102e 0133     		adds	r3, r3, #1
 5341 1030 FB73     		strb	r3, [r7, #15]
 5342              	.L347:
1007:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 5343              		.loc 1 1007 0 is_stmt 0 discriminator 1
 5344 1032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5345 1034 0B2B     		cmp	r3, #11
 5346 1036 D5D9     		bls	.L350
1012:.\Protocolo.c **** 								}								
1013:.\Protocolo.c **** 							}
1014:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5347              		.loc 1 1014 0 is_stmt 1
 5348 1038 0023     		movs	r3, #0
 5349 103a FB73     		strb	r3, [r7, #15]
 5350 103c 0DE0     		b	.L351
 5351              	.L352:
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 116


1015:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+114];
 5352              		.loc 1 1015 0 discriminator 3
 5353 103e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5354 1040 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5355 1042 7232     		adds	r2, r2, #114
 5356 1044 1149     		ldr	r1, .L363
 5357 1046 8A5C     		ldrb	r2, [r1, r2]
 5358 1048 D1B2     		uxtb	r1, r2
 5359 104a 114A     		ldr	r2, .L363+4
 5360 104c 1344     		add	r3, r3, r2
 5361 104e 0A46     		mov	r2, r1
 5362 1050 83F85420 		strb	r2, [r3, #84]
1014:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+114];
 5363              		.loc 1 1014 0 discriminator 3
 5364 1054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5365 1056 0133     		adds	r3, r3, #1
 5366 1058 FB73     		strb	r3, [r7, #15]
 5367              	.L351:
1014:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+114];
 5368              		.loc 1 1014 0 is_stmt 0 discriminator 1
 5369 105a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5370 105c 042B     		cmp	r3, #4
 5371 105e EED9     		bls	.L352
1016:.\Protocolo.c **** 							}
1017:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 5372              		.loc 1 1017 0 is_stmt 1
 5373 1060 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1018:.\Protocolo.c ****     						return 3;                            
 5374              		.loc 1 1018 0
 5375 1064 0323     		movs	r3, #3
 5376 1066 0CE0     		b	.L165
 5377              	.L332:
1019:.\Protocolo.c **** 						}
1020:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 5378              		.loc 1 1020 0
 5379 1068 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1021:.\Protocolo.c **** 						return 1;			
 5380              		.loc 1 1021 0
 5381 106c 0123     		movs	r3, #1
 5382 106e 08E0     		b	.L165
 5383              	.L306:
1022:.\Protocolo.c **** 					}
1023:.\Protocolo.c **** 					else{
1024:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 5384              		.loc 1 1024 0
 5385 1070 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1025:.\Protocolo.c **** 						return 0;		
 5386              		.loc 1 1025 0
 5387 1074 0023     		movs	r3, #0
 5388 1076 04E0     		b	.L165
 5389              	.L305:
1026:.\Protocolo.c **** 					}
1027:.\Protocolo.c **** 				}
1028:.\Protocolo.c **** 				else{
1029:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 5390              		.loc 1 1029 0
 5391 1078 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 117


1030:.\Protocolo.c **** 					return 0;		
 5392              		.loc 1 1030 0
 5393 107c 0023     		movs	r3, #0
 5394 107e 00E0     		b	.L165
 5395              	.L152:
1031:.\Protocolo.c **** 				}				
1032:.\Protocolo.c **** 			}		
1033:.\Protocolo.c **** 		}
1034:.\Protocolo.c **** 	}
1035:.\Protocolo.c **** 	else{
1036:.\Protocolo.c **** 		return 0;
 5396              		.loc 1 1036 0
 5397 1080 0023     		movs	r3, #0
 5398              	.L165:
1037:.\Protocolo.c **** 	}
1038:.\Protocolo.c **** }
 5399              		.loc 1 1038 0
 5400 1082 1846     		mov	r0, r3
 5401 1084 1037     		adds	r7, r7, #16
 5402              		.cfi_def_cfa_offset 8
 5403 1086 BD46     		mov	sp, r7
 5404              		.cfi_def_cfa_register 13
 5405              		@ sp needed
 5406 1088 80BD     		pop	{r7, pc}
 5407              	.L364:
 5408 108a 00BF     		.align	2
 5409              	.L363:
 5410 108c 00000000 		.word	Surtidor_rxBuffer
 5411 1090 00000000 		.word	lado2
 5412              		.cfi_endproc
 5413              	.LFE71:
 5414              		.size	totales, .-totales
 5415              		.text
 5416              	.Letext0:
 5417              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5418              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5419              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 5420              		.file 5 ".\\VariablesG.h"
 5421              		.file 6 "Generated_Source\\PSoC5/Surtidor.h"
 5422              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 5423              		.section	.debug_info,"",%progbits
 5424              	.Ldebug_info0:
 5425 0000 EF0A0000 		.4byte	0xaef
 5426 0004 0400     		.2byte	0x4
 5427 0006 00000000 		.4byte	.Ldebug_abbrev0
 5428 000a 04       		.byte	0x4
 5429 000b 01       		.uleb128 0x1
 5430 000c B3020000 		.4byte	.LASF117
 5431 0010 01       		.byte	0x1
 5432 0011 31010000 		.4byte	.LASF118
 5433 0015 F4030000 		.4byte	.LASF119
 5434 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5435 001d 00000000 		.4byte	0
 5436 0021 00000000 		.4byte	.Ldebug_line0
 5437 0025 02       		.uleb128 0x2
 5438 0026 01       		.byte	0x1
 5439 0027 06       		.byte	0x6
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 118


 5440 0028 E7040000 		.4byte	.LASF0
 5441 002c 02       		.uleb128 0x2
 5442 002d 01       		.byte	0x1
 5443 002e 08       		.byte	0x8
 5444 002f A1040000 		.4byte	.LASF1
 5445 0033 02       		.uleb128 0x2
 5446 0034 02       		.byte	0x2
 5447 0035 05       		.byte	0x5
 5448 0036 B8030000 		.4byte	.LASF2
 5449 003a 02       		.uleb128 0x2
 5450 003b 02       		.byte	0x2
 5451 003c 07       		.byte	0x7
 5452 003d 09050000 		.4byte	.LASF3
 5453 0041 03       		.uleb128 0x3
 5454 0042 6C000000 		.4byte	.LASF9
 5455 0046 02       		.byte	0x2
 5456 0047 3F       		.byte	0x3f
 5457 0048 4C000000 		.4byte	0x4c
 5458 004c 02       		.uleb128 0x2
 5459 004d 04       		.byte	0x4
 5460 004e 05       		.byte	0x5
 5461 004f C2030000 		.4byte	.LASF4
 5462 0053 02       		.uleb128 0x2
 5463 0054 04       		.byte	0x4
 5464 0055 07       		.byte	0x7
 5465 0056 7C040000 		.4byte	.LASF5
 5466 005a 02       		.uleb128 0x2
 5467 005b 08       		.byte	0x8
 5468 005c 05       		.byte	0x5
 5469 005d 86020000 		.4byte	.LASF6
 5470 0061 02       		.uleb128 0x2
 5471 0062 08       		.byte	0x8
 5472 0063 07       		.byte	0x7
 5473 0064 1A010000 		.4byte	.LASF7
 5474 0068 04       		.uleb128 0x4
 5475 0069 04       		.byte	0x4
 5476 006a 05       		.byte	0x5
 5477 006b 696E7400 		.ascii	"int\000"
 5478 006f 02       		.uleb128 0x2
 5479 0070 04       		.byte	0x4
 5480 0071 07       		.byte	0x7
 5481 0072 57000000 		.4byte	.LASF8
 5482 0076 03       		.uleb128 0x3
 5483 0077 8E040000 		.4byte	.LASF10
 5484 007b 03       		.byte	0x3
 5485 007c 2C       		.byte	0x2c
 5486 007d 41000000 		.4byte	0x41
 5487 0081 03       		.uleb128 0x3
 5488 0082 1C050000 		.4byte	.LASF11
 5489 0086 04       		.byte	0x4
 5490 0087 B4       		.byte	0xb4
 5491 0088 2C000000 		.4byte	0x2c
 5492 008c 03       		.uleb128 0x3
 5493 008d 23020000 		.4byte	.LASF12
 5494 0091 04       		.byte	0x4
 5495 0092 B5       		.byte	0xb5
 5496 0093 3A000000 		.4byte	0x3a
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 119


 5497 0097 02       		.uleb128 0x2
 5498 0098 04       		.byte	0x4
 5499 0099 04       		.byte	0x4
 5500 009a DC000000 		.4byte	.LASF13
 5501 009e 02       		.uleb128 0x2
 5502 009f 08       		.byte	0x8
 5503 00a0 04       		.byte	0x4
 5504 00a1 22050000 		.4byte	.LASF14
 5505 00a5 02       		.uleb128 0x2
 5506 00a6 01       		.byte	0x1
 5507 00a7 08       		.byte	0x8
 5508 00a8 08020000 		.4byte	.LASF15
 5509 00ac 05       		.uleb128 0x5
 5510 00ad 81000000 		.4byte	0x81
 5511 00b1 05       		.uleb128 0x5
 5512 00b2 8C000000 		.4byte	0x8c
 5513 00b6 02       		.uleb128 0x2
 5514 00b7 04       		.byte	0x4
 5515 00b8 07       		.byte	0x7
 5516 00b9 73040000 		.4byte	.LASF16
 5517 00bd 06       		.uleb128 0x6
 5518 00be 81000000 		.4byte	0x81
 5519 00c2 CD000000 		.4byte	0xcd
 5520 00c6 07       		.uleb128 0x7
 5521 00c7 B6000000 		.4byte	0xb6
 5522 00cb 03       		.byte	0x3
 5523 00cc 00       		.byte	0
 5524 00cd 08       		.uleb128 0x8
 5525 00ce D8030000 		.4byte	.LASF21
 5526 00d2 5D       		.byte	0x5d
 5527 00d3 05       		.byte	0x5
 5528 00d4 4B       		.byte	0x4b
 5529 00d5 22010000 		.4byte	0x122
 5530 00d9 09       		.uleb128 0x9
 5531 00da 64697200 		.ascii	"dir\000"
 5532 00de 05       		.byte	0x5
 5533 00df 4C       		.byte	0x4c
 5534 00e0 AC000000 		.4byte	0xac
 5535 00e4 00       		.byte	0
 5536 00e5 0A       		.uleb128 0xa
 5537 00e6 77030000 		.4byte	.LASF17
 5538 00ea 05       		.byte	0x5
 5539 00eb 4D       		.byte	0x4d
 5540 00ec AC000000 		.4byte	0xac
 5541 00f0 01       		.byte	0x1
 5542 00f1 0A       		.uleb128 0xa
 5543 00f2 49020000 		.4byte	.LASF18
 5544 00f6 05       		.byte	0x5
 5545 00f7 4E       		.byte	0x4e
 5546 00f8 38010000 		.4byte	0x138
 5547 00fc 02       		.byte	0x2
 5548 00fd 09       		.uleb128 0x9
 5549 00fe 70707500 		.ascii	"ppu\000"
 5550 0102 05       		.byte	0x5
 5551 0103 4F       		.byte	0x4f
 5552 0104 53010000 		.4byte	0x153
 5553 0108 4A       		.byte	0x4a
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 120


 5554 0109 0A       		.uleb128 0xa
 5555 010a 48050000 		.4byte	.LASF19
 5556 010e 05       		.byte	0x5
 5557 010f 50       		.byte	0x50
 5558 0110 6E010000 		.4byte	0x16e
 5559 0114 59       		.byte	0x59
 5560 0115 0A       		.uleb128 0xa
 5561 0116 19020000 		.4byte	.LASF20
 5562 011a 05       		.byte	0x5
 5563 011b 51       		.byte	0x51
 5564 011c AC000000 		.4byte	0xac
 5565 0120 5C       		.byte	0x5c
 5566 0121 00       		.byte	0
 5567 0122 06       		.uleb128 0x6
 5568 0123 81000000 		.4byte	0x81
 5569 0127 38010000 		.4byte	0x138
 5570 012b 07       		.uleb128 0x7
 5571 012c B6000000 		.4byte	0xb6
 5572 0130 02       		.byte	0x2
 5573 0131 07       		.uleb128 0x7
 5574 0132 B6000000 		.4byte	0xb6
 5575 0136 17       		.byte	0x17
 5576 0137 00       		.byte	0
 5577 0138 05       		.uleb128 0x5
 5578 0139 22010000 		.4byte	0x122
 5579 013d 06       		.uleb128 0x6
 5580 013e 81000000 		.4byte	0x81
 5581 0142 53010000 		.4byte	0x153
 5582 0146 07       		.uleb128 0x7
 5583 0147 B6000000 		.4byte	0xb6
 5584 014b 02       		.byte	0x2
 5585 014c 07       		.uleb128 0x7
 5586 014d B6000000 		.4byte	0xb6
 5587 0151 04       		.byte	0x4
 5588 0152 00       		.byte	0
 5589 0153 05       		.uleb128 0x5
 5590 0154 3D010000 		.4byte	0x13d
 5591 0158 06       		.uleb128 0x6
 5592 0159 81000000 		.4byte	0x81
 5593 015d 6E010000 		.4byte	0x16e
 5594 0161 07       		.uleb128 0x7
 5595 0162 B6000000 		.4byte	0xb6
 5596 0166 02       		.byte	0x2
 5597 0167 07       		.uleb128 0x7
 5598 0168 B6000000 		.4byte	0xb6
 5599 016c 00       		.byte	0
 5600 016d 00       		.byte	0
 5601 016e 05       		.uleb128 0x5
 5602 016f 58010000 		.4byte	0x158
 5603 0173 08       		.uleb128 0x8
 5604 0174 5D030000 		.4byte	.LASF22
 5605 0178 66       		.byte	0x66
 5606 0179 05       		.byte	0x5
 5607 017a 62       		.byte	0x62
 5608 017b 56020000 		.4byte	0x256
 5609 017f 0A       		.uleb128 0xa
 5610 0180 A8000000 		.4byte	.LASF23
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 121


 5611 0184 05       		.byte	0x5
 5612 0185 63       		.byte	0x63
 5613 0186 81000000 		.4byte	0x81
 5614 018a 00       		.byte	0
 5615 018b 0A       		.uleb128 0xa
 5616 018c 48050000 		.4byte	.LASF19
 5617 0190 05       		.byte	0x5
 5618 0191 64       		.byte	0x64
 5619 0192 81000000 		.4byte	0x81
 5620 0196 01       		.byte	0x1
 5621 0197 09       		.uleb128 0x9
 5622 0198 70707500 		.ascii	"ppu\000"
 5623 019c 05       		.byte	0x5
 5624 019d 65       		.byte	0x65
 5625 019e 56020000 		.4byte	0x256
 5626 01a2 02       		.byte	0x2
 5627 01a3 0A       		.uleb128 0xa
 5628 01a4 64030000 		.4byte	.LASF24
 5629 01a8 05       		.byte	0x5
 5630 01a9 66       		.byte	0x66
 5631 01aa 66020000 		.4byte	0x266
 5632 01ae 07       		.byte	0x7
 5633 01af 0A       		.uleb128 0xa
 5634 01b0 8C010000 		.4byte	.LASF25
 5635 01b4 05       		.byte	0x5
 5636 01b5 67       		.byte	0x67
 5637 01b6 66020000 		.4byte	0x266
 5638 01ba 10       		.byte	0x10
 5639 01bb 0A       		.uleb128 0xa
 5640 01bc 94020000 		.4byte	.LASF26
 5641 01c0 05       		.byte	0x5
 5642 01c1 68       		.byte	0x68
 5643 01c2 81000000 		.4byte	0x81
 5644 01c6 19       		.byte	0x19
 5645 01c7 0A       		.uleb128 0xa
 5646 01c8 3F050000 		.4byte	.LASF27
 5647 01cc 05       		.byte	0x5
 5648 01cd 69       		.byte	0x69
 5649 01ce 81000000 		.4byte	0x81
 5650 01d2 1A       		.byte	0x1a
 5651 01d3 0A       		.uleb128 0xa
 5652 01d4 D5000000 		.4byte	.LASF28
 5653 01d8 05       		.byte	0x5
 5654 01d9 6A       		.byte	0x6a
 5655 01da 76020000 		.4byte	0x276
 5656 01de 1B       		.byte	0x1b
 5657 01df 09       		.uleb128 0x9
 5658 01e0 696400   		.ascii	"id\000"
 5659 01e3 05       		.byte	0x5
 5660 01e4 6B       		.byte	0x6b
 5661 01e5 86020000 		.4byte	0x286
 5662 01e9 23       		.byte	0x23
 5663 01ea 09       		.uleb128 0x9
 5664 01eb 6B6D00   		.ascii	"km\000"
 5665 01ee 05       		.byte	0x5
 5666 01ef 6C       		.byte	0x6c
 5667 01f0 96020000 		.4byte	0x296
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 122


 5668 01f4 33       		.byte	0x33
 5669 01f5 0A       		.uleb128 0xa
 5670 01f6 7E010000 		.4byte	.LASF29
 5671 01fa 05       		.byte	0x5
 5672 01fb 6D       		.byte	0x6d
 5673 01fc 66020000 		.4byte	0x266
 5674 0200 3E       		.byte	0x3e
 5675 0201 0A       		.uleb128 0xa
 5676 0202 11010000 		.4byte	.LASF30
 5677 0206 05       		.byte	0x5
 5678 0207 6E       		.byte	0x6e
 5679 0208 81000000 		.4byte	0x81
 5680 020c 47       		.byte	0x47
 5681 020d 0A       		.uleb128 0xa
 5682 020e 38020000 		.4byte	.LASF31
 5683 0212 05       		.byte	0x5
 5684 0213 6F       		.byte	0x6f
 5685 0214 81000000 		.4byte	0x81
 5686 0218 48       		.byte	0x48
 5687 0219 0A       		.uleb128 0xa
 5688 021a AC020000 		.4byte	.LASF32
 5689 021e 05       		.byte	0x5
 5690 021f 70       		.byte	0x70
 5691 0220 96020000 		.4byte	0x296
 5692 0224 49       		.byte	0x49
 5693 0225 0A       		.uleb128 0xa
 5694 0226 00000000 		.4byte	.LASF33
 5695 022a 05       		.byte	0x5
 5696 022b 71       		.byte	0x71
 5697 022c 96020000 		.4byte	0x296
 5698 0230 54       		.byte	0x54
 5699 0231 0A       		.uleb128 0xa
 5700 0232 43020000 		.4byte	.LASF34
 5701 0236 05       		.byte	0x5
 5702 0237 72       		.byte	0x72
 5703 0238 81000000 		.4byte	0x81
 5704 023c 5F       		.byte	0x5f
 5705 023d 0A       		.uleb128 0xa
 5706 023e 96040000 		.4byte	.LASF35
 5707 0242 05       		.byte	0x5
 5708 0243 73       		.byte	0x73
 5709 0244 81000000 		.4byte	0x81
 5710 0248 60       		.byte	0x60
 5711 0249 0A       		.uleb128 0xa
 5712 024a 7E030000 		.4byte	.LASF36
 5713 024e 05       		.byte	0x5
 5714 024f 74       		.byte	0x74
 5715 0250 56020000 		.4byte	0x256
 5716 0254 61       		.byte	0x61
 5717 0255 00       		.byte	0
 5718 0256 06       		.uleb128 0x6
 5719 0257 81000000 		.4byte	0x81
 5720 025b 66020000 		.4byte	0x266
 5721 025f 07       		.uleb128 0x7
 5722 0260 B6000000 		.4byte	0xb6
 5723 0264 04       		.byte	0x4
 5724 0265 00       		.byte	0
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 123


 5725 0266 06       		.uleb128 0x6
 5726 0267 81000000 		.4byte	0x81
 5727 026b 76020000 		.4byte	0x276
 5728 026f 07       		.uleb128 0x7
 5729 0270 B6000000 		.4byte	0xb6
 5730 0274 08       		.byte	0x8
 5731 0275 00       		.byte	0
 5732 0276 06       		.uleb128 0x6
 5733 0277 81000000 		.4byte	0x81
 5734 027b 86020000 		.4byte	0x286
 5735 027f 07       		.uleb128 0x7
 5736 0280 B6000000 		.4byte	0xb6
 5737 0284 07       		.byte	0x7
 5738 0285 00       		.byte	0
 5739 0286 06       		.uleb128 0x6
 5740 0287 81000000 		.4byte	0x81
 5741 028b 96020000 		.4byte	0x296
 5742 028f 07       		.uleb128 0x7
 5743 0290 B6000000 		.4byte	0xb6
 5744 0294 0F       		.byte	0xf
 5745 0295 00       		.byte	0
 5746 0296 06       		.uleb128 0x6
 5747 0297 81000000 		.4byte	0x81
 5748 029b A6020000 		.4byte	0x2a6
 5749 029f 07       		.uleb128 0x7
 5750 02a0 B6000000 		.4byte	0xb6
 5751 02a4 0A       		.byte	0xa
 5752 02a5 00       		.byte	0
 5753 02a6 0B       		.uleb128 0xb
 5754 02a7 4E050000 		.4byte	.LASF120
 5755 02ab 01       		.byte	0x1
 5756 02ac 23       		.byte	0x23
 5757 02ad 00000000 		.4byte	.LFB63
 5758 02b1 14000000 		.4byte	.LFE63-.LFB63
 5759 02b5 01       		.uleb128 0x1
 5760 02b6 9C       		.byte	0x9c
 5761 02b7 0C       		.uleb128 0xc
 5762 02b8 AF040000 		.4byte	.LASF37
 5763 02bc 01       		.byte	0x1
 5764 02bd 30       		.byte	0x30
 5765 02be 81000000 		.4byte	0x81
 5766 02c2 00000000 		.4byte	.LFB64
 5767 02c6 98000000 		.4byte	.LFE64-.LFB64
 5768 02ca 01       		.uleb128 0x1
 5769 02cb 9C       		.byte	0x9c
 5770 02cc ED020000 		.4byte	0x2ed
 5771 02d0 0D       		.uleb128 0xd
 5772 02d1 64697200 		.ascii	"dir\000"
 5773 02d5 01       		.byte	0x1
 5774 02d6 30       		.byte	0x30
 5775 02d7 81000000 		.4byte	0x81
 5776 02db 02       		.uleb128 0x2
 5777 02dc 91       		.byte	0x91
 5778 02dd 6F       		.sleb128 -17
 5779 02de 0E       		.uleb128 0xe
 5780 02df 77030000 		.4byte	.LASF17
 5781 02e3 01       		.byte	0x1
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 124


 5782 02e4 31       		.byte	0x31
 5783 02e5 81000000 		.4byte	0x81
 5784 02e9 02       		.uleb128 0x2
 5785 02ea 91       		.byte	0x91
 5786 02eb 77       		.sleb128 -9
 5787 02ec 00       		.byte	0
 5788 02ed 0C       		.uleb128 0xc
 5789 02ee 84010000 		.4byte	.LASF38
 5790 02f2 01       		.byte	0x1
 5791 02f3 56       		.byte	0x56
 5792 02f4 81000000 		.4byte	0x81
 5793 02f8 00000000 		.4byte	.LFB65
 5794 02fc A0000000 		.4byte	.LFE65-.LFB65
 5795 0300 01       		.uleb128 0x1
 5796 0301 9C       		.byte	0x9c
 5797 0302 13030000 		.4byte	0x313
 5798 0306 0F       		.uleb128 0xf
 5799 0307 7800     		.ascii	"x\000"
 5800 0309 01       		.byte	0x1
 5801 030a 57       		.byte	0x57
 5802 030b 81000000 		.4byte	0x81
 5803 030f 02       		.uleb128 0x2
 5804 0310 91       		.byte	0x91
 5805 0311 77       		.sleb128 -9
 5806 0312 00       		.byte	0
 5807 0313 0C       		.uleb128 0xc
 5808 0314 5F040000 		.4byte	.LASF39
 5809 0318 01       		.byte	0x1
 5810 0319 7A       		.byte	0x7a
 5811 031a 81000000 		.4byte	0x81
 5812 031e 00000000 		.4byte	.LFB66
 5813 0322 7C010000 		.4byte	.LFE66-.LFB66
 5814 0326 01       		.uleb128 0x1
 5815 0327 9C       		.byte	0x9c
 5816 0328 63030000 		.4byte	0x363
 5817 032c 0D       		.uleb128 0xd
 5818 032d 76616C00 		.ascii	"val\000"
 5819 0331 01       		.byte	0x1
 5820 0332 7A       		.byte	0x7a
 5821 0333 81000000 		.4byte	0x81
 5822 0337 02       		.uleb128 0x2
 5823 0338 91       		.byte	0x91
 5824 0339 4F       		.sleb128 -49
 5825 033a 0E       		.uleb128 0xe
 5826 033b 29050000 		.4byte	.LASF40
 5827 033f 01       		.byte	0x1
 5828 0340 7B       		.byte	0x7b
 5829 0341 63030000 		.4byte	0x363
 5830 0345 02       		.uleb128 0x2
 5831 0346 91       		.byte	0x91
 5832 0347 5C       		.sleb128 -36
 5833 0348 0F       		.uleb128 0xf
 5834 0349 7800     		.ascii	"x\000"
 5835 034b 01       		.byte	0x1
 5836 034c 7B       		.byte	0x7b
 5837 034d 81000000 		.4byte	0x81
 5838 0351 02       		.uleb128 0x2
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 125


 5839 0352 91       		.byte	0x91
 5840 0353 6F       		.sleb128 -17
 5841 0354 0E       		.uleb128 0xe
 5842 0355 EF010000 		.4byte	.LASF41
 5843 0359 01       		.byte	0x1
 5844 035a 7B       		.byte	0x7b
 5845 035b 66020000 		.4byte	0x266
 5846 035f 02       		.uleb128 0x2
 5847 0360 91       		.byte	0x91
 5848 0361 50       		.sleb128 -48
 5849 0362 00       		.byte	0
 5850 0363 06       		.uleb128 0x6
 5851 0364 81000000 		.4byte	0x81
 5852 0368 73030000 		.4byte	0x373
 5853 036c 07       		.uleb128 0x7
 5854 036d B6000000 		.4byte	0xb6
 5855 0371 12       		.byte	0x12
 5856 0372 00       		.byte	0
 5857 0373 10       		.uleb128 0x10
 5858 0374 E7010000 		.4byte	.LASF121
 5859 0378 01       		.byte	0x1
 5860 0379 C1       		.byte	0xc1
 5861 037a 00000000 		.4byte	.LFB67
 5862 037e 24000000 		.4byte	.LFE67-.LFB67
 5863 0382 01       		.uleb128 0x1
 5864 0383 9C       		.byte	0x9c
 5865 0384 97030000 		.4byte	0x397
 5866 0388 0D       		.uleb128 0xd
 5867 0389 76616C00 		.ascii	"val\000"
 5868 038d 01       		.byte	0x1
 5869 038e C1       		.byte	0xc1
 5870 038f 81000000 		.4byte	0x81
 5871 0393 02       		.uleb128 0x2
 5872 0394 91       		.byte	0x91
 5873 0395 77       		.sleb128 -9
 5874 0396 00       		.byte	0
 5875 0397 0C       		.uleb128 0xc
 5876 0398 94010000 		.4byte	.LASF42
 5877 039c 01       		.byte	0x1
 5878 039d CF       		.byte	0xcf
 5879 039e 81000000 		.4byte	0x81
 5880 03a2 00000000 		.4byte	.LFB68
 5881 03a6 54030000 		.4byte	.LFE68-.LFB68
 5882 03aa 01       		.uleb128 0x1
 5883 03ab 9C       		.byte	0x9c
 5884 03ac CB030000 		.4byte	0x3cb
 5885 03b0 0D       		.uleb128 0xd
 5886 03b1 64697200 		.ascii	"dir\000"
 5887 03b5 01       		.byte	0x1
 5888 03b6 CF       		.byte	0xcf
 5889 03b7 81000000 		.4byte	0x81
 5890 03bb 02       		.uleb128 0x2
 5891 03bc 91       		.byte	0x91
 5892 03bd 6F       		.sleb128 -17
 5893 03be 0F       		.uleb128 0xf
 5894 03bf 7800     		.ascii	"x\000"
 5895 03c1 01       		.byte	0x1
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 126


 5896 03c2 D0       		.byte	0xd0
 5897 03c3 81000000 		.4byte	0x81
 5898 03c7 02       		.uleb128 0x2
 5899 03c8 91       		.byte	0x91
 5900 03c9 77       		.sleb128 -9
 5901 03ca 00       		.byte	0
 5902 03cb 11       		.uleb128 0x11
 5903 03cc 69040000 		.4byte	.LASF43
 5904 03d0 01       		.byte	0x1
 5905 03d1 2101     		.2byte	0x121
 5906 03d3 81000000 		.4byte	0x81
 5907 03d7 00000000 		.4byte	.LFB69
 5908 03db 80080000 		.4byte	.LFE69-.LFB69
 5909 03df 01       		.uleb128 0x1
 5910 03e0 9C       		.byte	0x9c
 5911 03e1 6B040000 		.4byte	0x46b
 5912 03e5 12       		.uleb128 0x12
 5913 03e6 64697200 		.ascii	"dir\000"
 5914 03ea 01       		.byte	0x1
 5915 03eb 2101     		.2byte	0x121
 5916 03ed 81000000 		.4byte	0x81
 5917 03f1 02       		.uleb128 0x2
 5918 03f2 91       		.byte	0x91
 5919 03f3 5F       		.sleb128 -33
 5920 03f4 13       		.uleb128 0x13
 5921 03f5 48050000 		.4byte	.LASF19
 5922 03f9 01       		.byte	0x1
 5923 03fa 2101     		.2byte	0x121
 5924 03fc 81000000 		.4byte	0x81
 5925 0400 02       		.uleb128 0x2
 5926 0401 91       		.byte	0x91
 5927 0402 5E       		.sleb128 -34
 5928 0403 13       		.uleb128 0x13
 5929 0404 F3040000 		.4byte	.LASF44
 5930 0408 01       		.byte	0x1
 5931 0409 2101     		.2byte	0x121
 5932 040b 6B040000 		.4byte	0x46b
 5933 040f 02       		.uleb128 0x2
 5934 0410 91       		.byte	0x91
 5935 0411 58       		.sleb128 -40
 5936 0412 13       		.uleb128 0x13
 5937 0413 D5000000 		.4byte	.LASF28
 5938 0417 01       		.byte	0x1
 5939 0418 2101     		.2byte	0x121
 5940 041a 81000000 		.4byte	0x81
 5941 041e 02       		.uleb128 0x2
 5942 041f 91       		.byte	0x91
 5943 0420 5D       		.sleb128 -35
 5944 0421 14       		.uleb128 0x14
 5945 0422 50000000 		.4byte	.LASF45
 5946 0426 01       		.byte	0x1
 5947 0427 2201     		.2byte	0x122
 5948 0429 71040000 		.4byte	0x471
 5949 042d 02       		.uleb128 0x2
 5950 042e 91       		.byte	0x91
 5951 042f 60       		.sleb128 -32
 5952 0430 14       		.uleb128 0x14
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 127


 5953 0431 58030000 		.4byte	.LASF46
 5954 0435 01       		.byte	0x1
 5955 0436 2201     		.2byte	0x122
 5956 0438 81000000 		.4byte	0x81
 5957 043c 02       		.uleb128 0x2
 5958 043d 91       		.byte	0x91
 5959 043e 77       		.sleb128 -9
 5960 043f 14       		.uleb128 0x14
 5961 0440 EF030000 		.4byte	.LASF47
 5962 0444 01       		.byte	0x1
 5963 0445 2201     		.2byte	0x122
 5964 0447 81000000 		.4byte	0x81
 5965 044b 02       		.uleb128 0x2
 5966 044c 91       		.byte	0x91
 5967 044d 76       		.sleb128 -10
 5968 044e 15       		.uleb128 0x15
 5969 044f 6900     		.ascii	"i\000"
 5970 0451 01       		.byte	0x1
 5971 0452 2201     		.2byte	0x122
 5972 0454 81000000 		.4byte	0x81
 5973 0458 02       		.uleb128 0x2
 5974 0459 91       		.byte	0x91
 5975 045a 75       		.sleb128 -11
 5976 045b 14       		.uleb128 0x14
 5977 045c 8B000000 		.4byte	.LASF48
 5978 0460 01       		.byte	0x1
 5979 0461 2201     		.2byte	0x122
 5980 0463 81000000 		.4byte	0x81
 5981 0467 02       		.uleb128 0x2
 5982 0468 91       		.byte	0x91
 5983 0469 74       		.sleb128 -12
 5984 046a 00       		.byte	0
 5985 046b 16       		.uleb128 0x16
 5986 046c 04       		.byte	0x4
 5987 046d 81000000 		.4byte	0x81
 5988 0471 06       		.uleb128 0x6
 5989 0472 81000000 		.4byte	0x81
 5990 0476 81040000 		.4byte	0x481
 5991 047a 07       		.uleb128 0x7
 5992 047b B6000000 		.4byte	0xb6
 5993 047f 11       		.byte	0x11
 5994 0480 00       		.byte	0
 5995 0481 11       		.uleb128 0x11
 5996 0482 9D020000 		.4byte	.LASF49
 5997 0486 01       		.byte	0x1
 5998 0487 1E02     		.2byte	0x21e
 5999 0489 81000000 		.4byte	0x81
 6000 048d 00000000 		.4byte	.LFB70
 6001 0491 7C020000 		.4byte	.LFE70-.LFB70
 6002 0495 01       		.uleb128 0x1
 6003 0496 9C       		.byte	0x9c
 6004 0497 F4040000 		.4byte	0x4f4
 6005 049b 12       		.uleb128 0x12
 6006 049c 64697200 		.ascii	"dir\000"
 6007 04a0 01       		.byte	0x1
 6008 04a1 1E02     		.2byte	0x21e
 6009 04a3 81000000 		.4byte	0x81
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 128


 6010 04a7 02       		.uleb128 0x2
 6011 04a8 91       		.byte	0x91
 6012 04a9 5F       		.sleb128 -33
 6013 04aa 13       		.uleb128 0x13
 6014 04ab 76000000 		.4byte	.LASF50
 6015 04af 01       		.byte	0x1
 6016 04b0 1E02     		.2byte	0x21e
 6017 04b2 6B040000 		.4byte	0x46b
 6018 04b6 02       		.uleb128 0x2
 6019 04b7 91       		.byte	0x91
 6020 04b8 58       		.sleb128 -40
 6021 04b9 13       		.uleb128 0x13
 6022 04ba 83000000 		.4byte	.LASF51
 6023 04be 01       		.byte	0x1
 6024 04bf 1E02     		.2byte	0x21e
 6025 04c1 81000000 		.4byte	0x81
 6026 04c5 02       		.uleb128 0x2
 6027 04c6 91       		.byte	0x91
 6028 04c7 5E       		.sleb128 -34
 6029 04c8 14       		.uleb128 0x14
 6030 04c9 50000000 		.4byte	.LASF45
 6031 04cd 01       		.byte	0x1
 6032 04ce 1F02     		.2byte	0x21f
 6033 04d0 F4040000 		.4byte	0x4f4
 6034 04d4 02       		.uleb128 0x2
 6035 04d5 91       		.byte	0x91
 6036 04d6 64       		.sleb128 -28
 6037 04d7 14       		.uleb128 0x14
 6038 04d8 58030000 		.4byte	.LASF46
 6039 04dc 01       		.byte	0x1
 6040 04dd 1F02     		.2byte	0x21f
 6041 04df 81000000 		.4byte	0x81
 6042 04e3 02       		.uleb128 0x2
 6043 04e4 91       		.byte	0x91
 6044 04e5 77       		.sleb128 -9
 6045 04e6 15       		.uleb128 0x15
 6046 04e7 7800     		.ascii	"x\000"
 6047 04e9 01       		.byte	0x1
 6048 04ea 1F02     		.2byte	0x21f
 6049 04ec 81000000 		.4byte	0x81
 6050 04f0 02       		.uleb128 0x2
 6051 04f1 91       		.byte	0x91
 6052 04f2 76       		.sleb128 -10
 6053 04f3 00       		.byte	0
 6054 04f4 06       		.uleb128 0x6
 6055 04f5 81000000 		.4byte	0x81
 6056 04f9 04050000 		.4byte	0x504
 6057 04fd 07       		.uleb128 0x7
 6058 04fe B6000000 		.4byte	0xb6
 6059 0502 0E       		.byte	0xe
 6060 0503 00       		.byte	0
 6061 0504 11       		.uleb128 0x11
 6062 0505 49020000 		.4byte	.LASF18
 6063 0509 01       		.byte	0x1
 6064 050a 7002     		.2byte	0x270
 6065 050c 81000000 		.4byte	0x81
 6066 0510 00000000 		.4byte	.LFB71
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 129


 6067 0514 94100000 		.4byte	.LFE71-.LFB71
 6068 0518 01       		.uleb128 0x1
 6069 0519 9C       		.byte	0x9c
 6070 051a 57050000 		.4byte	0x557
 6071 051e 12       		.uleb128 0x12
 6072 051f 64697200 		.ascii	"dir\000"
 6073 0523 01       		.byte	0x1
 6074 0524 7002     		.2byte	0x270
 6075 0526 81000000 		.4byte	0x81
 6076 052a 02       		.uleb128 0x2
 6077 052b 91       		.byte	0x91
 6078 052c 6F       		.sleb128 -17
 6079 052d 13       		.uleb128 0x13
 6080 052e A5030000 		.4byte	.LASF52
 6081 0532 01       		.byte	0x1
 6082 0533 7002     		.2byte	0x270
 6083 0535 81000000 		.4byte	0x81
 6084 0539 02       		.uleb128 0x2
 6085 053a 91       		.byte	0x91
 6086 053b 6E       		.sleb128 -18
 6087 053c 15       		.uleb128 0x15
 6088 053d 7800     		.ascii	"x\000"
 6089 053f 01       		.byte	0x1
 6090 0540 7102     		.2byte	0x271
 6091 0542 81000000 		.4byte	0x81
 6092 0546 02       		.uleb128 0x2
 6093 0547 91       		.byte	0x91
 6094 0548 77       		.sleb128 -9
 6095 0549 15       		.uleb128 0x15
 6096 054a 7900     		.ascii	"y\000"
 6097 054c 01       		.byte	0x1
 6098 054d 7102     		.2byte	0x271
 6099 054f 81000000 		.4byte	0x81
 6100 0553 02       		.uleb128 0x2
 6101 0554 91       		.byte	0x91
 6102 0555 76       		.sleb128 -10
 6103 0556 00       		.byte	0
 6104 0557 06       		.uleb128 0x6
 6105 0558 81000000 		.4byte	0x81
 6106 055c 67050000 		.4byte	0x567
 6107 0560 07       		.uleb128 0x7
 6108 0561 B6000000 		.4byte	0xb6
 6109 0565 FF       		.byte	0xff
 6110 0566 00       		.byte	0
 6111 0567 17       		.uleb128 0x17
 6112 0568 6C010000 		.4byte	.LASF53
 6113 056c 06       		.byte	0x6
 6114 056d 3E01     		.2byte	0x13e
 6115 056f 73050000 		.4byte	0x573
 6116 0573 05       		.uleb128 0x5
 6117 0574 57050000 		.4byte	0x557
 6118 0578 17       		.uleb128 0x17
 6119 0579 CB030000 		.4byte	.LASF54
 6120 057d 07       		.byte	0x7
 6121 057e 2A06     		.2byte	0x62a
 6122 0580 84050000 		.4byte	0x584
 6123 0584 05       		.uleb128 0x5
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 130


 6124 0585 76000000 		.4byte	0x76
 6125 0589 18       		.uleb128 0x18
 6126 058a 5E020000 		.4byte	.LASF55
 6127 058e 05       		.byte	0x5
 6128 058f 35       		.byte	0x35
 6129 0590 AC000000 		.4byte	0xac
 6130 0594 05       		.uleb128 0x5
 6131 0595 03       		.byte	0x3
 6132 0596 00000000 		.4byte	count_teclas1
 6133 059a 18       		.uleb128 0x18
 6134 059b E1030000 		.4byte	.LASF56
 6135 059f 05       		.byte	0x5
 6136 05a0 35       		.byte	0x35
 6137 05a1 AC000000 		.4byte	0xac
 6138 05a5 05       		.uleb128 0x5
 6139 05a6 03       		.byte	0x3
 6140 05a7 00000000 		.4byte	comas1
 6141 05ab 18       		.uleb128 0x18
 6142 05ac E8030000 		.4byte	.LASF57
 6143 05b0 05       		.byte	0x5
 6144 05b1 35       		.byte	0x35
 6145 05b2 AC000000 		.4byte	0xac
 6146 05b6 05       		.uleb128 0x5
 6147 05b7 03       		.byte	0x3
 6148 05b8 00000000 		.4byte	comas2
 6149 05bc 18       		.uleb128 0x18
 6150 05bd 3E000000 		.4byte	.LASF58
 6151 05c1 05       		.byte	0x5
 6152 05c2 35       		.byte	0x35
 6153 05c3 AC000000 		.4byte	0xac
 6154 05c7 05       		.uleb128 0x5
 6155 05c8 03       		.byte	0x3
 6156 05c9 00000000 		.4byte	id_coma1
 6157 05cd 18       		.uleb128 0x18
 6158 05ce A3010000 		.4byte	.LASF59
 6159 05d2 05       		.byte	0x5
 6160 05d3 35       		.byte	0x35
 6161 05d4 AC000000 		.4byte	0xac
 6162 05d8 05       		.uleb128 0x5
 6163 05d9 03       		.byte	0x3
 6164 05da 00000000 		.4byte	id_teclado1
 6165 05de 18       		.uleb128 0x18
 6166 05df 6C020000 		.4byte	.LASF60
 6167 05e3 05       		.byte	0x5
 6168 05e4 35       		.byte	0x35
 6169 05e5 AC000000 		.4byte	0xac
 6170 05e9 05       		.uleb128 0x5
 6171 05ea 03       		.byte	0x3
 6172 05eb 00000000 		.4byte	count_teclas2
 6173 05ef 18       		.uleb128 0x18
 6174 05f0 47000000 		.4byte	.LASF61
 6175 05f4 05       		.byte	0x5
 6176 05f5 35       		.byte	0x35
 6177 05f6 AC000000 		.4byte	0xac
 6178 05fa 05       		.uleb128 0x5
 6179 05fb 03       		.byte	0x3
 6180 05fc 00000000 		.4byte	id_coma2
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 131


 6181 0600 18       		.uleb128 0x18
 6182 0601 AF010000 		.4byte	.LASF62
 6183 0605 05       		.byte	0x5
 6184 0606 35       		.byte	0x35
 6185 0607 AC000000 		.4byte	0xac
 6186 060b 05       		.uleb128 0x5
 6187 060c 03       		.byte	0x3
 6188 060d 00000000 		.4byte	id_teclado2
 6189 0611 18       		.uleb128 0x18
 6190 0612 7A020000 		.4byte	.LASF63
 6191 0616 05       		.byte	0x5
 6192 0617 36       		.byte	0x36
 6193 0618 B1000000 		.4byte	0xb1
 6194 061c 05       		.uleb128 0x5
 6195 061d 03       		.byte	0x3
 6196 061e 00000000 		.4byte	posx1
 6197 0622 18       		.uleb128 0x18
 6198 0623 4C030000 		.4byte	.LASF64
 6199 0627 05       		.byte	0x5
 6200 0628 36       		.byte	0x36
 6201 0629 B1000000 		.4byte	0xb1
 6202 062d 05       		.uleb128 0x5
 6203 062e 03       		.byte	0x3
 6204 062f 00000000 		.4byte	posy1
 6205 0633 18       		.uleb128 0x18
 6206 0634 5A050000 		.4byte	.LASF65
 6207 0638 05       		.byte	0x5
 6208 0639 36       		.byte	0x36
 6209 063a B1000000 		.4byte	0xb1
 6210 063e 05       		.uleb128 0x5
 6211 063f 03       		.byte	0x3
 6212 0640 00000000 		.4byte	sizeletra1
 6213 0644 18       		.uleb128 0x18
 6214 0645 80020000 		.4byte	.LASF66
 6215 0649 05       		.byte	0x5
 6216 064a 36       		.byte	0x36
 6217 064b B1000000 		.4byte	0xb1
 6218 064f 05       		.uleb128 0x5
 6219 0650 03       		.byte	0x3
 6220 0651 00000000 		.4byte	posx2
 6221 0655 18       		.uleb128 0x18
 6222 0656 52030000 		.4byte	.LASF67
 6223 065a 05       		.byte	0x5
 6224 065b 36       		.byte	0x36
 6225 065c B1000000 		.4byte	0xb1
 6226 0660 05       		.uleb128 0x5
 6227 0661 03       		.byte	0x3
 6228 0662 00000000 		.4byte	posy2
 6229 0666 18       		.uleb128 0x18
 6230 0667 65050000 		.4byte	.LASF68
 6231 066b 05       		.byte	0x5
 6232 066c 36       		.byte	0x36
 6233 066d B1000000 		.4byte	0xb1
 6234 0671 05       		.uleb128 0x5
 6235 0672 03       		.byte	0x3
 6236 0673 00000000 		.4byte	sizeletra2
 6237 0677 18       		.uleb128 0x18
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 132


 6238 0678 98000000 		.4byte	.LASF69
 6239 067c 05       		.byte	0x5
 6240 067d 37       		.byte	0x37
 6241 067e AC000000 		.4byte	0xac
 6242 0682 05       		.uleb128 0x5
 6243 0683 03       		.byte	0x3
 6244 0684 00000000 		.4byte	teclas1
 6245 0688 18       		.uleb128 0x18
 6246 0689 A0000000 		.4byte	.LASF70
 6247 068d 05       		.byte	0x5
 6248 068e 37       		.byte	0x37
 6249 068f AC000000 		.4byte	0xac
 6250 0693 05       		.uleb128 0x5
 6251 0694 03       		.byte	0x3
 6252 0695 00000000 		.4byte	teclas2
 6253 0699 18       		.uleb128 0x18
 6254 069a 09000000 		.4byte	.LASF71
 6255 069e 05       		.byte	0x5
 6256 069f 38       		.byte	0x38
 6257 06a0 AC000000 		.4byte	0xac
 6258 06a4 05       		.uleb128 0x5
 6259 06a5 03       		.byte	0x3
 6260 06a6 00000000 		.4byte	flujo_LCD1
 6261 06aa 18       		.uleb128 0x18
 6262 06ab 14000000 		.4byte	.LASF72
 6263 06af 05       		.byte	0x5
 6264 06b0 38       		.byte	0x38
 6265 06b1 AC000000 		.4byte	0xac
 6266 06b5 05       		.uleb128 0x5
 6267 06b6 03       		.byte	0x3
 6268 06b7 00000000 		.4byte	flujo_LCD2
 6269 06bb 06       		.uleb128 0x6
 6270 06bc 81000000 		.4byte	0x81
 6271 06c0 CB060000 		.4byte	0x6cb
 6272 06c4 07       		.uleb128 0x7
 6273 06c5 B6000000 		.4byte	0xb6
 6274 06c9 1D       		.byte	0x1d
 6275 06ca 00       		.byte	0
 6276 06cb 18       		.uleb128 0x18
 6277 06cc 6B030000 		.4byte	.LASF73
 6278 06d0 05       		.byte	0x5
 6279 06d1 39       		.byte	0x39
 6280 06d2 DC060000 		.4byte	0x6dc
 6281 06d6 05       		.uleb128 0x5
 6282 06d7 03       		.byte	0x3
 6283 06d8 00000000 		.4byte	Buffer_LCD1
 6284 06dc 05       		.uleb128 0x5
 6285 06dd BB060000 		.4byte	0x6bb
 6286 06e1 18       		.uleb128 0x18
 6287 06e2 FC010000 		.4byte	.LASF74
 6288 06e6 05       		.byte	0x5
 6289 06e7 3A       		.byte	0x3a
 6290 06e8 F2060000 		.4byte	0x6f2
 6291 06ec 05       		.uleb128 0x5
 6292 06ed 03       		.byte	0x3
 6293 06ee 00000000 		.4byte	Buffer_LCD2
 6294 06f2 05       		.uleb128 0x5
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 133


 6295 06f3 BB060000 		.4byte	0x6bb
 6296 06f7 18       		.uleb128 0x18
 6297 06f8 F9040000 		.4byte	.LASF75
 6298 06fc 05       		.byte	0x5
 6299 06fd 3B       		.byte	0x3b
 6300 06fe AC000000 		.4byte	0xac
 6301 0702 05       		.uleb128 0x5
 6302 0703 03       		.byte	0x3
 6303 0704 00000000 		.4byte	count_protector
 6304 0708 18       		.uleb128 0x18
 6305 0709 1F000000 		.4byte	.LASF76
 6306 070d 05       		.byte	0x5
 6307 070e 3B       		.byte	0x3b
 6308 070f AC000000 		.4byte	0xac
 6309 0713 05       		.uleb128 0x5
 6310 0714 03       		.byte	0x3
 6311 0715 00000000 		.4byte	count_protector2
 6312 0719 18       		.uleb128 0x18
 6313 071a BA040000 		.4byte	.LASF77
 6314 071e 05       		.byte	0x5
 6315 071f 3C       		.byte	0x3c
 6316 0720 AC000000 		.4byte	0xac
 6317 0724 05       		.uleb128 0x5
 6318 0725 03       		.byte	0x3
 6319 0726 00000000 		.4byte	count_esperaBBB
 6320 072a 18       		.uleb128 0x18
 6321 072b C4010000 		.4byte	.LASF78
 6322 072f 05       		.byte	0x5
 6323 0730 3C       		.byte	0x3c
 6324 0731 AC000000 		.4byte	0xac
 6325 0735 05       		.uleb128 0x5
 6326 0736 03       		.byte	0x3
 6327 0737 00000000 		.4byte	count_esperaBBB2
 6328 073b 18       		.uleb128 0x18
 6329 073c 51020000 		.4byte	.LASF79
 6330 0740 05       		.byte	0x5
 6331 0741 3D       		.byte	0x3d
 6332 0742 4C070000 		.4byte	0x74c
 6333 0746 05       		.uleb128 0x5
 6334 0747 03       		.byte	0x3
 6335 0748 00000000 		.4byte	password_lcd
 6336 074c 05       		.uleb128 0x5
 6337 074d 66020000 		.4byte	0x266
 6338 0751 18       		.uleb128 0x18
 6339 0752 04010000 		.4byte	.LASF80
 6340 0756 05       		.byte	0x5
 6341 0757 3E       		.byte	0x3e
 6342 0758 B1000000 		.4byte	0xb1
 6343 075c 05       		.uleb128 0x5
 6344 075d 03       		.byte	0x3
 6345 075e 00000000 		.4byte	imagen_grado
 6346 0762 06       		.uleb128 0x6
 6347 0763 8C000000 		.4byte	0x8c
 6348 0767 78070000 		.4byte	0x778
 6349 076b 07       		.uleb128 0x7
 6350 076c B6000000 		.4byte	0xb6
 6351 0770 01       		.byte	0x1
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 134


 6352 0771 07       		.uleb128 0x7
 6353 0772 B6000000 		.4byte	0xb6
 6354 0776 01       		.byte	0x1
 6355 0777 00       		.byte	0
 6356 0778 18       		.uleb128 0x18
 6357 0779 CB000000 		.4byte	.LASF81
 6358 077d 05       		.byte	0x5
 6359 077e 3F       		.byte	0x3f
 6360 077f 89070000 		.4byte	0x789
 6361 0783 05       		.uleb128 0x5
 6362 0784 03       		.byte	0x3
 6363 0785 00000000 		.4byte	prox_caso
 6364 0789 05       		.uleb128 0x5
 6365 078a 62070000 		.4byte	0x762
 6366 078e 06       		.uleb128 0x6
 6367 078f 81000000 		.4byte	0x81
 6368 0793 9E070000 		.4byte	0x79e
 6369 0797 07       		.uleb128 0x7
 6370 0798 B6000000 		.4byte	0xb6
 6371 079c 02       		.byte	0x2
 6372 079d 00       		.byte	0
 6373 079e 18       		.uleb128 0x18
 6374 079f 0D020000 		.4byte	.LASF82
 6375 07a3 05       		.byte	0x5
 6376 07a4 40       		.byte	0x40
 6377 07a5 AF070000 		.4byte	0x7af
 6378 07a9 05       		.uleb128 0x5
 6379 07aa 03       		.byte	0x3
 6380 07ab 00000000 		.4byte	bloqueo_LCD
 6381 07af 05       		.uleb128 0x5
 6382 07b0 8E070000 		.4byte	0x78e
 6383 07b4 18       		.uleb128 0x18
 6384 07b5 33050000 		.4byte	.LASF83
 6385 07b9 05       		.byte	0x5
 6386 07ba 41       		.byte	0x41
 6387 07bb C5070000 		.4byte	0x7c5
 6388 07bf 05       		.uleb128 0x5
 6389 07c0 03       		.byte	0x3
 6390 07c1 00000000 		.4byte	id_estacion
 6391 07c5 05       		.uleb128 0x5
 6392 07c6 56020000 		.4byte	0x256
 6393 07ca 18       		.uleb128 0x18
 6394 07cb BB010000 		.4byte	.LASF84
 6395 07cf 05       		.byte	0x5
 6396 07d0 42       		.byte	0x42
 6397 07d1 DB070000 		.4byte	0x7db
 6398 07d5 05       		.uleb128 0x5
 6399 07d6 03       		.byte	0x3
 6400 07d7 00000000 		.4byte	id_venta
 6401 07db 05       		.uleb128 0x5
 6402 07dc 76020000 		.4byte	0x276
 6403 07e0 06       		.uleb128 0x6
 6404 07e1 81000000 		.4byte	0x81
 6405 07e5 F0070000 		.4byte	0x7f0
 6406 07e9 07       		.uleb128 0x7
 6407 07ea B6000000 		.4byte	0xb6
 6408 07ee C7       		.byte	0xc7
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 135


 6409 07ef 00       		.byte	0
 6410 07f0 18       		.uleb128 0x18
 6411 07f1 30000000 		.4byte	.LASF85
 6412 07f5 05       		.byte	0x5
 6413 07f6 43       		.byte	0x43
 6414 07f7 01080000 		.4byte	0x801
 6415 07fb 05       		.uleb128 0x5
 6416 07fc 03       		.byte	0x3
 6417 07fd 00000000 		.4byte	trama_totales
 6418 0801 05       		.uleb128 0x5
 6419 0802 E0070000 		.4byte	0x7e0
 6420 0806 18       		.uleb128 0x18
 6421 0807 8D030000 		.4byte	.LASF86
 6422 080b 05       		.byte	0x5
 6423 080c 47       		.byte	0x47
 6424 080d AC000000 		.4byte	0xac
 6425 0811 05       		.uleb128 0x5
 6426 0812 03       		.byte	0x3
 6427 0813 00000000 		.4byte	ppux10
 6428 0817 06       		.uleb128 0x6
 6429 0818 81000000 		.4byte	0x81
 6430 081c 27080000 		.4byte	0x827
 6431 0820 07       		.uleb128 0x7
 6432 0821 B6000000 		.4byte	0xb6
 6433 0825 10       		.byte	0x10
 6434 0826 00       		.byte	0
 6435 0827 18       		.uleb128 0x18
 6436 0828 47040000 		.4byte	.LASF87
 6437 082c 05       		.byte	0x5
 6438 082d 48       		.byte	0x48
 6439 082e 38080000 		.4byte	0x838
 6440 0832 05       		.uleb128 0x5
 6441 0833 03       		.byte	0x3
 6442 0834 00000000 		.4byte	nombre_pro1
 6443 0838 05       		.uleb128 0x5
 6444 0839 17080000 		.4byte	0x817
 6445 083d 18       		.uleb128 0x18
 6446 083e DB040000 		.4byte	.LASF88
 6447 0842 05       		.byte	0x5
 6448 0843 48       		.byte	0x48
 6449 0844 4E080000 		.4byte	0x84e
 6450 0848 05       		.uleb128 0x5
 6451 0849 03       		.byte	0x3
 6452 084a 00000000 		.4byte	nombre_pro2
 6453 084e 05       		.uleb128 0x5
 6454 084f 17080000 		.4byte	0x817
 6455 0853 18       		.uleb128 0x18
 6456 0854 53040000 		.4byte	.LASF89
 6457 0858 05       		.byte	0x5
 6458 0859 48       		.byte	0x48
 6459 085a 64080000 		.4byte	0x864
 6460 085e 05       		.uleb128 0x5
 6461 085f 03       		.byte	0x3
 6462 0860 00000000 		.4byte	nombre_pro3
 6463 0864 05       		.uleb128 0x5
 6464 0865 17080000 		.4byte	0x817
 6465 0869 18       		.uleb128 0x18
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 136


 6466 086a 64000000 		.4byte	.LASF90
 6467 086e 05       		.byte	0x5
 6468 086f 49       		.byte	0x49
 6469 0870 7A080000 		.4byte	0x87a
 6470 0874 05       		.uleb128 0x5
 6471 0875 03       		.byte	0x3
 6472 0876 00000000 		.4byte	version
 6473 087a 05       		.uleb128 0x5
 6474 087b BD000000 		.4byte	0xbd
 6475 087f 18       		.uleb128 0x18
 6476 0880 3F010000 		.4byte	.LASF91
 6477 0884 05       		.byte	0x5
 6478 0885 53       		.byte	0x53
 6479 0886 CD000000 		.4byte	0xcd
 6480 088a 05       		.uleb128 0x5
 6481 088b 03       		.byte	0x3
 6482 088c 00000000 		.4byte	lado1
 6483 0890 18       		.uleb128 0x18
 6484 0891 45010000 		.4byte	.LASF92
 6485 0895 05       		.byte	0x5
 6486 0896 54       		.byte	0x54
 6487 0897 CD000000 		.4byte	0xcd
 6488 089b 05       		.uleb128 0x5
 6489 089c 03       		.byte	0x3
 6490 089d 00000000 		.4byte	lado2
 6491 08a1 06       		.uleb128 0x6
 6492 08a2 81000000 		.4byte	0x81
 6493 08a6 B1080000 		.4byte	0x8b1
 6494 08aa 07       		.uleb128 0x7
 6495 08ab B6000000 		.4byte	0xb6
 6496 08af 20       		.byte	0x20
 6497 08b0 00       		.byte	0
 6498 08b1 18       		.uleb128 0x18
 6499 08b2 94030000 		.4byte	.LASF93
 6500 08b6 05       		.byte	0x5
 6501 08b7 58       		.byte	0x58
 6502 08b8 C2080000 		.4byte	0x8c2
 6503 08bc 05       		.uleb128 0x5
 6504 08bd 03       		.byte	0x3
 6505 08be 00000000 		.4byte	nombre
 6506 08c2 05       		.uleb128 0x5
 6507 08c3 A1080000 		.4byte	0x8a1
 6508 08c7 19       		.uleb128 0x19
 6509 08c8 6E697400 		.ascii	"nit\000"
 6510 08cc 05       		.byte	0x5
 6511 08cd 59       		.byte	0x59
 6512 08ce D8080000 		.4byte	0x8d8
 6513 08d2 05       		.uleb128 0x5
 6514 08d3 03       		.byte	0x3
 6515 08d4 00000000 		.4byte	nit
 6516 08d8 05       		.uleb128 0x5
 6517 08d9 F4040000 		.4byte	0x4f4
 6518 08dd 06       		.uleb128 0x6
 6519 08de 81000000 		.4byte	0x81
 6520 08e2 ED080000 		.4byte	0x8ed
 6521 08e6 07       		.uleb128 0x7
 6522 08e7 B6000000 		.4byte	0xb6
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 137


 6523 08eb 13       		.byte	0x13
 6524 08ec 00       		.byte	0
 6525 08ed 18       		.uleb128 0x18
 6526 08ee 9A010000 		.4byte	.LASF94
 6527 08f2 05       		.byte	0x5
 6528 08f3 5A       		.byte	0x5a
 6529 08f4 FE080000 		.4byte	0x8fe
 6530 08f8 05       		.uleb128 0x5
 6531 08f9 03       		.byte	0x3
 6532 08fa 00000000 		.4byte	telefono
 6533 08fe 05       		.uleb128 0x5
 6534 08ff DD080000 		.4byte	0x8dd
 6535 0903 18       		.uleb128 0x18
 6536 0904 C1000000 		.4byte	.LASF95
 6537 0908 05       		.byte	0x5
 6538 0909 5B       		.byte	0x5b
 6539 090a 14090000 		.4byte	0x914
 6540 090e 05       		.uleb128 0x5
 6541 090f 03       		.byte	0x3
 6542 0910 00000000 		.4byte	direccion
 6543 0914 05       		.uleb128 0x5
 6544 0915 A1080000 		.4byte	0x8a1
 6545 0919 06       		.uleb128 0x6
 6546 091a 81000000 		.4byte	0x81
 6547 091e 29090000 		.4byte	0x929
 6548 0922 07       		.uleb128 0x7
 6549 0923 B6000000 		.4byte	0xb6
 6550 0927 1F       		.byte	0x1f
 6551 0928 00       		.byte	0
 6552 0929 18       		.uleb128 0x18
 6553 092a F8000000 		.4byte	.LASF96
 6554 092e 05       		.byte	0x5
 6555 092f 5C       		.byte	0x5c
 6556 0930 3A090000 		.4byte	0x93a
 6557 0934 05       		.uleb128 0x5
 6558 0935 03       		.byte	0x3
 6559 0936 00000000 		.4byte	lema1
 6560 093a 05       		.uleb128 0x5
 6561 093b 19090000 		.4byte	0x919
 6562 093f 18       		.uleb128 0x18
 6563 0940 FE000000 		.4byte	.LASF97
 6564 0944 05       		.byte	0x5
 6565 0945 5D       		.byte	0x5d
 6566 0946 50090000 		.4byte	0x950
 6567 094a 05       		.uleb128 0x5
 6568 094b 03       		.byte	0x3
 6569 094c 00000000 		.4byte	lema2
 6570 0950 05       		.uleb128 0x5
 6571 0951 19090000 		.4byte	0x919
 6572 0955 06       		.uleb128 0x6
 6573 0956 81000000 		.4byte	0x81
 6574 095a 65090000 		.4byte	0x965
 6575 095e 07       		.uleb128 0x7
 6576 095f B6000000 		.4byte	0xb6
 6577 0963 01       		.byte	0x1
 6578 0964 00       		.byte	0
 6579 0965 18       		.uleb128 0x18
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 138


 6580 0966 B0030000 		.4byte	.LASF98
 6581 096a 05       		.byte	0x5
 6582 096b 5E       		.byte	0x5e
 6583 096c 76090000 		.4byte	0x976
 6584 0970 05       		.uleb128 0x5
 6585 0971 03       		.byte	0x3
 6586 0972 00000000 		.4byte	id_logo
 6587 0976 05       		.uleb128 0x5
 6588 0977 55090000 		.4byte	0x955
 6589 097b 19       		.uleb128 0x19
 6590 097c 6B6D00   		.ascii	"km\000"
 6591 097f 05       		.byte	0x5
 6592 0980 5F       		.byte	0x5f
 6593 0981 8B090000 		.4byte	0x98b
 6594 0985 05       		.uleb128 0x5
 6595 0986 03       		.byte	0x3
 6596 0987 00000000 		.4byte	km
 6597 098b 05       		.uleb128 0x5
 6598 098c 55090000 		.4byte	0x955
 6599 0990 18       		.uleb128 0x18
 6600 0991 CA040000 		.4byte	.LASF99
 6601 0995 05       		.byte	0x5
 6602 0996 60       		.byte	0x60
 6603 0997 8E070000 		.4byte	0x78e
 6604 099b 05       		.uleb128 0x5
 6605 099c 03       		.byte	0x3
 6606 099d 00000000 		.4byte	fecha
 6607 09a1 18       		.uleb128 0x18
 6608 09a2 93000000 		.4byte	.LASF100
 6609 09a6 05       		.byte	0x5
 6610 09a7 61       		.byte	0x61
 6611 09a8 55090000 		.4byte	0x955
 6612 09ac 05       		.uleb128 0x5
 6613 09ad 03       		.byte	0x3
 6614 09ae 00000000 		.4byte	hora
 6615 09b2 18       		.uleb128 0x18
 6616 09b3 B1000000 		.4byte	.LASF101
 6617 09b7 05       		.byte	0x5
 6618 09b8 76       		.byte	0x76
 6619 09b9 73010000 		.4byte	0x173
 6620 09bd 05       		.uleb128 0x5
 6621 09be 03       		.byte	0x3
 6622 09bf 00000000 		.4byte	rventa1
 6623 09c3 18       		.uleb128 0x18
 6624 09c4 B9000000 		.4byte	.LASF102
 6625 09c8 05       		.byte	0x5
 6626 09c9 77       		.byte	0x77
 6627 09ca 73010000 		.4byte	0x173
 6628 09ce 05       		.uleb128 0x5
 6629 09cf 03       		.byte	0x3
 6630 09d0 00000000 		.4byte	rventa2
 6631 09d4 18       		.uleb128 0x18
 6632 09d5 7D000000 		.4byte	.LASF103
 6633 09d9 05       		.byte	0x5
 6634 09da 7C       		.byte	0x7c
 6635 09db 81000000 		.4byte	0x81
 6636 09df 05       		.uleb128 0x5
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 139


 6637 09e0 03       		.byte	0x3
 6638 09e1 00000000 		.4byte	ok_RF
 6639 09e5 18       		.uleb128 0x18
 6640 09e6 D0040000 		.4byte	.LASF104
 6641 09ea 05       		.byte	0x5
 6642 09eb 7D       		.byte	0x7d
 6643 09ec 81000000 		.4byte	0x81
 6644 09f0 05       		.uleb128 0x5
 6645 09f1 03       		.byte	0x3
 6646 09f2 00000000 		.4byte	ok_datosRF
 6647 09f6 18       		.uleb128 0x18
 6648 09f7 E0010000 		.4byte	.LASF105
 6649 09fb 05       		.byte	0x5
 6650 09fc 7E       		.byte	0x7e
 6651 09fd E0070000 		.4byte	0x7e0
 6652 0a01 05       		.uleb128 0x5
 6653 0a02 03       		.byte	0x3
 6654 0a03 00000000 		.4byte	rf_mod
 6655 0a07 06       		.uleb128 0x6
 6656 0a08 81000000 		.4byte	0x81
 6657 0a0c 170A0000 		.4byte	0xa17
 6658 0a10 07       		.uleb128 0x7
 6659 0a11 B6000000 		.4byte	0xb6
 6660 0a15 3F       		.byte	0x3f
 6661 0a16 00       		.byte	0
 6662 0a17 18       		.uleb128 0x18
 6663 0a18 ED000000 		.4byte	.LASF106
 6664 0a1c 05       		.byte	0x5
 6665 0a1d 83       		.byte	0x83
 6666 0a1e 070A0000 		.4byte	0xa07
 6667 0a22 05       		.uleb128 0x5
 6668 0a23 03       		.byte	0x3
 6669 0a24 00000000 		.4byte	buffer_i2c
 6670 0a28 18       		.uleb128 0x18
 6671 0a29 9B030000 		.4byte	.LASF107
 6672 0a2d 05       		.byte	0x5
 6673 0a2e 88       		.byte	0x88
 6674 0a2f 81000000 		.4byte	0x81
 6675 0a33 05       		.uleb128 0x5
 6676 0a34 03       		.byte	0x3
 6677 0a35 00000000 		.4byte	crc_total
 6678 0a39 18       		.uleb128 0x18
 6679 0a3a 2A020000 		.4byte	.LASF108
 6680 0a3e 05       		.byte	0x5
 6681 0a3f 8C       		.byte	0x8c
 6682 0a40 55090000 		.4byte	0x955
 6683 0a44 05       		.uleb128 0x5
 6684 0a45 03       		.byte	0x3
 6685 0a46 00000000 		.4byte	print1
 6686 0a4a 18       		.uleb128 0x18
 6687 0a4b 31020000 		.4byte	.LASF109
 6688 0a4f 05       		.byte	0x5
 6689 0a50 8D       		.byte	0x8d
 6690 0a51 55090000 		.4byte	0x955
 6691 0a55 05       		.uleb128 0x5
 6692 0a56 03       		.byte	0x3
 6693 0a57 00000000 		.4byte	print2
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 140


 6694 0a5b 18       		.uleb128 0x18
 6695 0a5c 41030000 		.4byte	.LASF110
 6696 0a60 01       		.byte	0x1
 6697 0a61 18       		.byte	0x18
 6698 0a62 81000000 		.4byte	0x81
 6699 0a66 05       		.uleb128 0x5
 6700 0a67 03       		.byte	0x3
 6701 0a68 00000000 		.4byte	rx_timeout
 6702 0a6c 18       		.uleb128 0x18
 6703 0a6d 57010000 		.4byte	.LASF111
 6704 0a71 01       		.byte	0x1
 6705 0a72 19       		.byte	0x19
 6706 0a73 17080000 		.4byte	0x817
 6707 0a77 05       		.uleb128 0x5
 6708 0a78 03       		.byte	0x3
 6709 0a79 00000000 		.4byte	msn_tc
 6710 0a7d 06       		.uleb128 0x6
 6711 0a7e 81000000 		.4byte	0x81
 6712 0a82 8D0A0000 		.4byte	0xa8d
 6713 0a86 07       		.uleb128 0x7
 6714 0a87 B6000000 		.4byte	0xb6
 6715 0a8b 0C       		.byte	0xc
 6716 0a8c 00       		.byte	0
 6717 0a8d 18       		.uleb128 0x18
 6718 0a8e 65010000 		.4byte	.LASF112
 6719 0a92 01       		.byte	0x1
 6720 0a93 1A       		.byte	0x1a
 6721 0a94 7D0A0000 		.4byte	0xa7d
 6722 0a98 05       		.uleb128 0x5
 6723 0a99 03       		.byte	0x3
 6724 0a9a 00000000 		.4byte	msn_te
 6725 0a9e 06       		.uleb128 0x6
 6726 0a9f 81000000 		.4byte	0x81
 6727 0aa3 AE0A0000 		.4byte	0xaae
 6728 0aa7 07       		.uleb128 0x7
 6729 0aa8 B6000000 		.4byte	0xb6
 6730 0aac 0D       		.byte	0xd
 6731 0aad 00       		.byte	0
 6732 0aae 18       		.uleb128 0x18
 6733 0aaf 5E010000 		.4byte	.LASF113
 6734 0ab3 01       		.byte	0x1
 6735 0ab4 1B       		.byte	0x1b
 6736 0ab5 9E0A0000 		.4byte	0xa9e
 6737 0ab9 05       		.uleb128 0x5
 6738 0aba 03       		.byte	0x3
 6739 0abb 00000000 		.4byte	msn_td
 6740 0abf 18       		.uleb128 0x18
 6741 0ac0 D5010000 		.4byte	.LASF114
 6742 0ac4 01       		.byte	0x1
 6743 0ac5 1C       		.byte	0x1c
 6744 0ac6 F4040000 		.4byte	0x4f4
 6745 0aca 05       		.uleb128 0x5
 6746 0acb 03       		.byte	0x3
 6747 0acc 00000000 		.4byte	msn_lecact
 6748 0ad0 18       		.uleb128 0x18
 6749 0ad1 E2000000 		.4byte	.LASF115
 6750 0ad5 01       		.byte	0x1
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 141


 6751 0ad6 1D       		.byte	0x1d
 6752 0ad7 17080000 		.4byte	0x817
 6753 0adb 05       		.uleb128 0x5
 6754 0adc 03       		.byte	0x3
 6755 0add 00000000 		.4byte	msn_lecaan
 6756 0ae1 18       		.uleb128 0x18
 6757 0ae2 4B010000 		.4byte	.LASF116
 6758 0ae6 01       		.byte	0x1
 6759 0ae7 1E       		.byte	0x1e
 6760 0ae8 71040000 		.4byte	0x471
 6761 0aec 05       		.uleb128 0x5
 6762 0aed 03       		.byte	0x3
 6763 0aee 00000000 		.4byte	msn_tventas
 6764 0af2 00       		.byte	0
 6765              		.section	.debug_abbrev,"",%progbits
 6766              	.Ldebug_abbrev0:
 6767 0000 01       		.uleb128 0x1
 6768 0001 11       		.uleb128 0x11
 6769 0002 01       		.byte	0x1
 6770 0003 25       		.uleb128 0x25
 6771 0004 0E       		.uleb128 0xe
 6772 0005 13       		.uleb128 0x13
 6773 0006 0B       		.uleb128 0xb
 6774 0007 03       		.uleb128 0x3
 6775 0008 0E       		.uleb128 0xe
 6776 0009 1B       		.uleb128 0x1b
 6777 000a 0E       		.uleb128 0xe
 6778 000b 55       		.uleb128 0x55
 6779 000c 17       		.uleb128 0x17
 6780 000d 11       		.uleb128 0x11
 6781 000e 01       		.uleb128 0x1
 6782 000f 10       		.uleb128 0x10
 6783 0010 17       		.uleb128 0x17
 6784 0011 00       		.byte	0
 6785 0012 00       		.byte	0
 6786 0013 02       		.uleb128 0x2
 6787 0014 24       		.uleb128 0x24
 6788 0015 00       		.byte	0
 6789 0016 0B       		.uleb128 0xb
 6790 0017 0B       		.uleb128 0xb
 6791 0018 3E       		.uleb128 0x3e
 6792 0019 0B       		.uleb128 0xb
 6793 001a 03       		.uleb128 0x3
 6794 001b 0E       		.uleb128 0xe
 6795 001c 00       		.byte	0
 6796 001d 00       		.byte	0
 6797 001e 03       		.uleb128 0x3
 6798 001f 16       		.uleb128 0x16
 6799 0020 00       		.byte	0
 6800 0021 03       		.uleb128 0x3
 6801 0022 0E       		.uleb128 0xe
 6802 0023 3A       		.uleb128 0x3a
 6803 0024 0B       		.uleb128 0xb
 6804 0025 3B       		.uleb128 0x3b
 6805 0026 0B       		.uleb128 0xb
 6806 0027 49       		.uleb128 0x49
 6807 0028 13       		.uleb128 0x13
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 142


 6808 0029 00       		.byte	0
 6809 002a 00       		.byte	0
 6810 002b 04       		.uleb128 0x4
 6811 002c 24       		.uleb128 0x24
 6812 002d 00       		.byte	0
 6813 002e 0B       		.uleb128 0xb
 6814 002f 0B       		.uleb128 0xb
 6815 0030 3E       		.uleb128 0x3e
 6816 0031 0B       		.uleb128 0xb
 6817 0032 03       		.uleb128 0x3
 6818 0033 08       		.uleb128 0x8
 6819 0034 00       		.byte	0
 6820 0035 00       		.byte	0
 6821 0036 05       		.uleb128 0x5
 6822 0037 35       		.uleb128 0x35
 6823 0038 00       		.byte	0
 6824 0039 49       		.uleb128 0x49
 6825 003a 13       		.uleb128 0x13
 6826 003b 00       		.byte	0
 6827 003c 00       		.byte	0
 6828 003d 06       		.uleb128 0x6
 6829 003e 01       		.uleb128 0x1
 6830 003f 01       		.byte	0x1
 6831 0040 49       		.uleb128 0x49
 6832 0041 13       		.uleb128 0x13
 6833 0042 01       		.uleb128 0x1
 6834 0043 13       		.uleb128 0x13
 6835 0044 00       		.byte	0
 6836 0045 00       		.byte	0
 6837 0046 07       		.uleb128 0x7
 6838 0047 21       		.uleb128 0x21
 6839 0048 00       		.byte	0
 6840 0049 49       		.uleb128 0x49
 6841 004a 13       		.uleb128 0x13
 6842 004b 2F       		.uleb128 0x2f
 6843 004c 0B       		.uleb128 0xb
 6844 004d 00       		.byte	0
 6845 004e 00       		.byte	0
 6846 004f 08       		.uleb128 0x8
 6847 0050 13       		.uleb128 0x13
 6848 0051 01       		.byte	0x1
 6849 0052 03       		.uleb128 0x3
 6850 0053 0E       		.uleb128 0xe
 6851 0054 0B       		.uleb128 0xb
 6852 0055 0B       		.uleb128 0xb
 6853 0056 3A       		.uleb128 0x3a
 6854 0057 0B       		.uleb128 0xb
 6855 0058 3B       		.uleb128 0x3b
 6856 0059 0B       		.uleb128 0xb
 6857 005a 01       		.uleb128 0x1
 6858 005b 13       		.uleb128 0x13
 6859 005c 00       		.byte	0
 6860 005d 00       		.byte	0
 6861 005e 09       		.uleb128 0x9
 6862 005f 0D       		.uleb128 0xd
 6863 0060 00       		.byte	0
 6864 0061 03       		.uleb128 0x3
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 143


 6865 0062 08       		.uleb128 0x8
 6866 0063 3A       		.uleb128 0x3a
 6867 0064 0B       		.uleb128 0xb
 6868 0065 3B       		.uleb128 0x3b
 6869 0066 0B       		.uleb128 0xb
 6870 0067 49       		.uleb128 0x49
 6871 0068 13       		.uleb128 0x13
 6872 0069 38       		.uleb128 0x38
 6873 006a 0B       		.uleb128 0xb
 6874 006b 00       		.byte	0
 6875 006c 00       		.byte	0
 6876 006d 0A       		.uleb128 0xa
 6877 006e 0D       		.uleb128 0xd
 6878 006f 00       		.byte	0
 6879 0070 03       		.uleb128 0x3
 6880 0071 0E       		.uleb128 0xe
 6881 0072 3A       		.uleb128 0x3a
 6882 0073 0B       		.uleb128 0xb
 6883 0074 3B       		.uleb128 0x3b
 6884 0075 0B       		.uleb128 0xb
 6885 0076 49       		.uleb128 0x49
 6886 0077 13       		.uleb128 0x13
 6887 0078 38       		.uleb128 0x38
 6888 0079 0B       		.uleb128 0xb
 6889 007a 00       		.byte	0
 6890 007b 00       		.byte	0
 6891 007c 0B       		.uleb128 0xb
 6892 007d 2E       		.uleb128 0x2e
 6893 007e 00       		.byte	0
 6894 007f 3F       		.uleb128 0x3f
 6895 0080 19       		.uleb128 0x19
 6896 0081 03       		.uleb128 0x3
 6897 0082 0E       		.uleb128 0xe
 6898 0083 3A       		.uleb128 0x3a
 6899 0084 0B       		.uleb128 0xb
 6900 0085 3B       		.uleb128 0x3b
 6901 0086 0B       		.uleb128 0xb
 6902 0087 27       		.uleb128 0x27
 6903 0088 19       		.uleb128 0x19
 6904 0089 11       		.uleb128 0x11
 6905 008a 01       		.uleb128 0x1
 6906 008b 12       		.uleb128 0x12
 6907 008c 06       		.uleb128 0x6
 6908 008d 40       		.uleb128 0x40
 6909 008e 18       		.uleb128 0x18
 6910 008f 9642     		.uleb128 0x2116
 6911 0091 19       		.uleb128 0x19
 6912 0092 00       		.byte	0
 6913 0093 00       		.byte	0
 6914 0094 0C       		.uleb128 0xc
 6915 0095 2E       		.uleb128 0x2e
 6916 0096 01       		.byte	0x1
 6917 0097 3F       		.uleb128 0x3f
 6918 0098 19       		.uleb128 0x19
 6919 0099 03       		.uleb128 0x3
 6920 009a 0E       		.uleb128 0xe
 6921 009b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 144


 6922 009c 0B       		.uleb128 0xb
 6923 009d 3B       		.uleb128 0x3b
 6924 009e 0B       		.uleb128 0xb
 6925 009f 27       		.uleb128 0x27
 6926 00a0 19       		.uleb128 0x19
 6927 00a1 49       		.uleb128 0x49
 6928 00a2 13       		.uleb128 0x13
 6929 00a3 11       		.uleb128 0x11
 6930 00a4 01       		.uleb128 0x1
 6931 00a5 12       		.uleb128 0x12
 6932 00a6 06       		.uleb128 0x6
 6933 00a7 40       		.uleb128 0x40
 6934 00a8 18       		.uleb128 0x18
 6935 00a9 9642     		.uleb128 0x2116
 6936 00ab 19       		.uleb128 0x19
 6937 00ac 01       		.uleb128 0x1
 6938 00ad 13       		.uleb128 0x13
 6939 00ae 00       		.byte	0
 6940 00af 00       		.byte	0
 6941 00b0 0D       		.uleb128 0xd
 6942 00b1 05       		.uleb128 0x5
 6943 00b2 00       		.byte	0
 6944 00b3 03       		.uleb128 0x3
 6945 00b4 08       		.uleb128 0x8
 6946 00b5 3A       		.uleb128 0x3a
 6947 00b6 0B       		.uleb128 0xb
 6948 00b7 3B       		.uleb128 0x3b
 6949 00b8 0B       		.uleb128 0xb
 6950 00b9 49       		.uleb128 0x49
 6951 00ba 13       		.uleb128 0x13
 6952 00bb 02       		.uleb128 0x2
 6953 00bc 18       		.uleb128 0x18
 6954 00bd 00       		.byte	0
 6955 00be 00       		.byte	0
 6956 00bf 0E       		.uleb128 0xe
 6957 00c0 34       		.uleb128 0x34
 6958 00c1 00       		.byte	0
 6959 00c2 03       		.uleb128 0x3
 6960 00c3 0E       		.uleb128 0xe
 6961 00c4 3A       		.uleb128 0x3a
 6962 00c5 0B       		.uleb128 0xb
 6963 00c6 3B       		.uleb128 0x3b
 6964 00c7 0B       		.uleb128 0xb
 6965 00c8 49       		.uleb128 0x49
 6966 00c9 13       		.uleb128 0x13
 6967 00ca 02       		.uleb128 0x2
 6968 00cb 18       		.uleb128 0x18
 6969 00cc 00       		.byte	0
 6970 00cd 00       		.byte	0
 6971 00ce 0F       		.uleb128 0xf
 6972 00cf 34       		.uleb128 0x34
 6973 00d0 00       		.byte	0
 6974 00d1 03       		.uleb128 0x3
 6975 00d2 08       		.uleb128 0x8
 6976 00d3 3A       		.uleb128 0x3a
 6977 00d4 0B       		.uleb128 0xb
 6978 00d5 3B       		.uleb128 0x3b
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 145


 6979 00d6 0B       		.uleb128 0xb
 6980 00d7 49       		.uleb128 0x49
 6981 00d8 13       		.uleb128 0x13
 6982 00d9 02       		.uleb128 0x2
 6983 00da 18       		.uleb128 0x18
 6984 00db 00       		.byte	0
 6985 00dc 00       		.byte	0
 6986 00dd 10       		.uleb128 0x10
 6987 00de 2E       		.uleb128 0x2e
 6988 00df 01       		.byte	0x1
 6989 00e0 3F       		.uleb128 0x3f
 6990 00e1 19       		.uleb128 0x19
 6991 00e2 03       		.uleb128 0x3
 6992 00e3 0E       		.uleb128 0xe
 6993 00e4 3A       		.uleb128 0x3a
 6994 00e5 0B       		.uleb128 0xb
 6995 00e6 3B       		.uleb128 0x3b
 6996 00e7 0B       		.uleb128 0xb
 6997 00e8 27       		.uleb128 0x27
 6998 00e9 19       		.uleb128 0x19
 6999 00ea 11       		.uleb128 0x11
 7000 00eb 01       		.uleb128 0x1
 7001 00ec 12       		.uleb128 0x12
 7002 00ed 06       		.uleb128 0x6
 7003 00ee 40       		.uleb128 0x40
 7004 00ef 18       		.uleb128 0x18
 7005 00f0 9642     		.uleb128 0x2116
 7006 00f2 19       		.uleb128 0x19
 7007 00f3 01       		.uleb128 0x1
 7008 00f4 13       		.uleb128 0x13
 7009 00f5 00       		.byte	0
 7010 00f6 00       		.byte	0
 7011 00f7 11       		.uleb128 0x11
 7012 00f8 2E       		.uleb128 0x2e
 7013 00f9 01       		.byte	0x1
 7014 00fa 3F       		.uleb128 0x3f
 7015 00fb 19       		.uleb128 0x19
 7016 00fc 03       		.uleb128 0x3
 7017 00fd 0E       		.uleb128 0xe
 7018 00fe 3A       		.uleb128 0x3a
 7019 00ff 0B       		.uleb128 0xb
 7020 0100 3B       		.uleb128 0x3b
 7021 0101 05       		.uleb128 0x5
 7022 0102 27       		.uleb128 0x27
 7023 0103 19       		.uleb128 0x19
 7024 0104 49       		.uleb128 0x49
 7025 0105 13       		.uleb128 0x13
 7026 0106 11       		.uleb128 0x11
 7027 0107 01       		.uleb128 0x1
 7028 0108 12       		.uleb128 0x12
 7029 0109 06       		.uleb128 0x6
 7030 010a 40       		.uleb128 0x40
 7031 010b 18       		.uleb128 0x18
 7032 010c 9642     		.uleb128 0x2116
 7033 010e 19       		.uleb128 0x19
 7034 010f 01       		.uleb128 0x1
 7035 0110 13       		.uleb128 0x13
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 146


 7036 0111 00       		.byte	0
 7037 0112 00       		.byte	0
 7038 0113 12       		.uleb128 0x12
 7039 0114 05       		.uleb128 0x5
 7040 0115 00       		.byte	0
 7041 0116 03       		.uleb128 0x3
 7042 0117 08       		.uleb128 0x8
 7043 0118 3A       		.uleb128 0x3a
 7044 0119 0B       		.uleb128 0xb
 7045 011a 3B       		.uleb128 0x3b
 7046 011b 05       		.uleb128 0x5
 7047 011c 49       		.uleb128 0x49
 7048 011d 13       		.uleb128 0x13
 7049 011e 02       		.uleb128 0x2
 7050 011f 18       		.uleb128 0x18
 7051 0120 00       		.byte	0
 7052 0121 00       		.byte	0
 7053 0122 13       		.uleb128 0x13
 7054 0123 05       		.uleb128 0x5
 7055 0124 00       		.byte	0
 7056 0125 03       		.uleb128 0x3
 7057 0126 0E       		.uleb128 0xe
 7058 0127 3A       		.uleb128 0x3a
 7059 0128 0B       		.uleb128 0xb
 7060 0129 3B       		.uleb128 0x3b
 7061 012a 05       		.uleb128 0x5
 7062 012b 49       		.uleb128 0x49
 7063 012c 13       		.uleb128 0x13
 7064 012d 02       		.uleb128 0x2
 7065 012e 18       		.uleb128 0x18
 7066 012f 00       		.byte	0
 7067 0130 00       		.byte	0
 7068 0131 14       		.uleb128 0x14
 7069 0132 34       		.uleb128 0x34
 7070 0133 00       		.byte	0
 7071 0134 03       		.uleb128 0x3
 7072 0135 0E       		.uleb128 0xe
 7073 0136 3A       		.uleb128 0x3a
 7074 0137 0B       		.uleb128 0xb
 7075 0138 3B       		.uleb128 0x3b
 7076 0139 05       		.uleb128 0x5
 7077 013a 49       		.uleb128 0x49
 7078 013b 13       		.uleb128 0x13
 7079 013c 02       		.uleb128 0x2
 7080 013d 18       		.uleb128 0x18
 7081 013e 00       		.byte	0
 7082 013f 00       		.byte	0
 7083 0140 15       		.uleb128 0x15
 7084 0141 34       		.uleb128 0x34
 7085 0142 00       		.byte	0
 7086 0143 03       		.uleb128 0x3
 7087 0144 08       		.uleb128 0x8
 7088 0145 3A       		.uleb128 0x3a
 7089 0146 0B       		.uleb128 0xb
 7090 0147 3B       		.uleb128 0x3b
 7091 0148 05       		.uleb128 0x5
 7092 0149 49       		.uleb128 0x49
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 147


 7093 014a 13       		.uleb128 0x13
 7094 014b 02       		.uleb128 0x2
 7095 014c 18       		.uleb128 0x18
 7096 014d 00       		.byte	0
 7097 014e 00       		.byte	0
 7098 014f 16       		.uleb128 0x16
 7099 0150 0F       		.uleb128 0xf
 7100 0151 00       		.byte	0
 7101 0152 0B       		.uleb128 0xb
 7102 0153 0B       		.uleb128 0xb
 7103 0154 49       		.uleb128 0x49
 7104 0155 13       		.uleb128 0x13
 7105 0156 00       		.byte	0
 7106 0157 00       		.byte	0
 7107 0158 17       		.uleb128 0x17
 7108 0159 34       		.uleb128 0x34
 7109 015a 00       		.byte	0
 7110 015b 03       		.uleb128 0x3
 7111 015c 0E       		.uleb128 0xe
 7112 015d 3A       		.uleb128 0x3a
 7113 015e 0B       		.uleb128 0xb
 7114 015f 3B       		.uleb128 0x3b
 7115 0160 05       		.uleb128 0x5
 7116 0161 49       		.uleb128 0x49
 7117 0162 13       		.uleb128 0x13
 7118 0163 3F       		.uleb128 0x3f
 7119 0164 19       		.uleb128 0x19
 7120 0165 3C       		.uleb128 0x3c
 7121 0166 19       		.uleb128 0x19
 7122 0167 00       		.byte	0
 7123 0168 00       		.byte	0
 7124 0169 18       		.uleb128 0x18
 7125 016a 34       		.uleb128 0x34
 7126 016b 00       		.byte	0
 7127 016c 03       		.uleb128 0x3
 7128 016d 0E       		.uleb128 0xe
 7129 016e 3A       		.uleb128 0x3a
 7130 016f 0B       		.uleb128 0xb
 7131 0170 3B       		.uleb128 0x3b
 7132 0171 0B       		.uleb128 0xb
 7133 0172 49       		.uleb128 0x49
 7134 0173 13       		.uleb128 0x13
 7135 0174 3F       		.uleb128 0x3f
 7136 0175 19       		.uleb128 0x19
 7137 0176 02       		.uleb128 0x2
 7138 0177 18       		.uleb128 0x18
 7139 0178 00       		.byte	0
 7140 0179 00       		.byte	0
 7141 017a 19       		.uleb128 0x19
 7142 017b 34       		.uleb128 0x34
 7143 017c 00       		.byte	0
 7144 017d 03       		.uleb128 0x3
 7145 017e 08       		.uleb128 0x8
 7146 017f 3A       		.uleb128 0x3a
 7147 0180 0B       		.uleb128 0xb
 7148 0181 3B       		.uleb128 0x3b
 7149 0182 0B       		.uleb128 0xb
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 148


 7150 0183 49       		.uleb128 0x49
 7151 0184 13       		.uleb128 0x13
 7152 0185 3F       		.uleb128 0x3f
 7153 0186 19       		.uleb128 0x19
 7154 0187 02       		.uleb128 0x2
 7155 0188 18       		.uleb128 0x18
 7156 0189 00       		.byte	0
 7157 018a 00       		.byte	0
 7158 018b 00       		.byte	0
 7159              		.section	.debug_aranges,"",%progbits
 7160 0000 5C000000 		.4byte	0x5c
 7161 0004 0200     		.2byte	0x2
 7162 0006 00000000 		.4byte	.Ldebug_info0
 7163 000a 04       		.byte	0x4
 7164 000b 00       		.byte	0
 7165 000c 0000     		.2byte	0
 7166 000e 0000     		.2byte	0
 7167 0010 00000000 		.4byte	.LFB63
 7168 0014 14000000 		.4byte	.LFE63-.LFB63
 7169 0018 00000000 		.4byte	.LFB64
 7170 001c 98000000 		.4byte	.LFE64-.LFB64
 7171 0020 00000000 		.4byte	.LFB65
 7172 0024 A0000000 		.4byte	.LFE65-.LFB65
 7173 0028 00000000 		.4byte	.LFB66
 7174 002c 7C010000 		.4byte	.LFE66-.LFB66
 7175 0030 00000000 		.4byte	.LFB67
 7176 0034 24000000 		.4byte	.LFE67-.LFB67
 7177 0038 00000000 		.4byte	.LFB68
 7178 003c 54030000 		.4byte	.LFE68-.LFB68
 7179 0040 00000000 		.4byte	.LFB69
 7180 0044 80080000 		.4byte	.LFE69-.LFB69
 7181 0048 00000000 		.4byte	.LFB70
 7182 004c 7C020000 		.4byte	.LFE70-.LFB70
 7183 0050 00000000 		.4byte	.LFB71
 7184 0054 94100000 		.4byte	.LFE71-.LFB71
 7185 0058 00000000 		.4byte	0
 7186 005c 00000000 		.4byte	0
 7187              		.section	.debug_ranges,"",%progbits
 7188              	.Ldebug_ranges0:
 7189 0000 00000000 		.4byte	.LFB63
 7190 0004 14000000 		.4byte	.LFE63
 7191 0008 00000000 		.4byte	.LFB64
 7192 000c 98000000 		.4byte	.LFE64
 7193 0010 00000000 		.4byte	.LFB65
 7194 0014 A0000000 		.4byte	.LFE65
 7195 0018 00000000 		.4byte	.LFB66
 7196 001c 7C010000 		.4byte	.LFE66
 7197 0020 00000000 		.4byte	.LFB67
 7198 0024 24000000 		.4byte	.LFE67
 7199 0028 00000000 		.4byte	.LFB68
 7200 002c 54030000 		.4byte	.LFE68
 7201 0030 00000000 		.4byte	.LFB69
 7202 0034 80080000 		.4byte	.LFE69
 7203 0038 00000000 		.4byte	.LFB70
 7204 003c 7C020000 		.4byte	.LFE70
 7205 0040 00000000 		.4byte	.LFB71
 7206 0044 94100000 		.4byte	.LFE71
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 149


 7207 0048 00000000 		.4byte	0
 7208 004c 00000000 		.4byte	0
 7209              		.section	.debug_line,"",%progbits
 7210              	.Ldebug_line0:
 7211 0000 EB0A0000 		.section	.debug_str,"MS",%progbits,1
 7211      02006E01 
 7211      00000201 
 7211      FB0E0D00 
 7211      01010101 
 7212              	.LASF33:
 7213 0000 70617373 		.ascii	"password\000"
 7213      776F7264 
 7213      00
 7214              	.LASF71:
 7215 0009 666C756A 		.ascii	"flujo_LCD1\000"
 7215      6F5F4C43 
 7215      443100
 7216              	.LASF72:
 7217 0014 666C756A 		.ascii	"flujo_LCD2\000"
 7217      6F5F4C43 
 7217      443200
 7218              	.LASF76:
 7219 001f 636F756E 		.ascii	"count_protector2\000"
 7219      745F7072 
 7219      6F746563 
 7219      746F7232 
 7219      00
 7220              	.LASF85:
 7221 0030 7472616D 		.ascii	"trama_totales\000"
 7221      615F746F 
 7221      74616C65 
 7221      7300
 7222              	.LASF58:
 7223 003e 69645F63 		.ascii	"id_coma1\000"
 7223      6F6D6131 
 7223      00
 7224              	.LASF61:
 7225 0047 69645F63 		.ascii	"id_coma2\000"
 7225      6F6D6132 
 7225      00
 7226              	.LASF45:
 7227 0050 62756666 		.ascii	"buffer\000"
 7227      657200
 7228              	.LASF8:
 7229 0057 756E7369 		.ascii	"unsigned int\000"
 7229      676E6564 
 7229      20696E74 
 7229      00
 7230              	.LASF90:
 7231 0064 76657273 		.ascii	"version\000"
 7231      696F6E00 
 7232              	.LASF9:
 7233 006c 5F5F696E 		.ascii	"__int32_t\000"
 7233      7433325F 
 7233      7400
 7234              	.LASF50:
 7235 0076 70726563 		.ascii	"precio\000"
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 150


 7235      696F00
 7236              	.LASF103:
 7237 007d 6F6B5F52 		.ascii	"ok_RF\000"
 7237      4600
 7238              	.LASF51:
 7239 0083 6E756D5F 		.ascii	"num_man\000"
 7239      6D616E00 
 7240              	.LASF48:
 7241 008b 64656369 		.ascii	"decimal\000"
 7241      6D616C00 
 7242              	.LASF100:
 7243 0093 686F7261 		.ascii	"hora\000"
 7243      00
 7244              	.LASF69:
 7245 0098 7465636C 		.ascii	"teclas1\000"
 7245      61733100 
 7246              	.LASF70:
 7247 00a0 7465636C 		.ascii	"teclas2\000"
 7247      61733200 
 7248              	.LASF23:
 7249 00a8 706F7369 		.ascii	"posicion\000"
 7249      63696F6E 
 7249      00
 7250              	.LASF101:
 7251 00b1 7276656E 		.ascii	"rventa1\000"
 7251      74613100 
 7252              	.LASF102:
 7253 00b9 7276656E 		.ascii	"rventa2\000"
 7253      74613200 
 7254              	.LASF95:
 7255 00c1 64697265 		.ascii	"direccion\000"
 7255      6363696F 
 7255      6E00
 7256              	.LASF81:
 7257 00cb 70726F78 		.ascii	"prox_caso\000"
 7257      5F636173 
 7257      6F00
 7258              	.LASF28:
 7259 00d5 70726573 		.ascii	"preset\000"
 7259      657400
 7260              	.LASF13:
 7261 00dc 666C6F61 		.ascii	"float\000"
 7261      7400
 7262              	.LASF115:
 7263 00e2 6D736E5F 		.ascii	"msn_lecaan\000"
 7263      6C656361 
 7263      616E00
 7264              	.LASF106:
 7265 00ed 62756666 		.ascii	"buffer_i2c\000"
 7265      65725F69 
 7265      326300
 7266              	.LASF96:
 7267 00f8 6C656D61 		.ascii	"lema1\000"
 7267      3100
 7268              	.LASF97:
 7269 00fe 6C656D61 		.ascii	"lema2\000"
 7269      3200
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 151


 7270              	.LASF80:
 7271 0104 696D6167 		.ascii	"imagen_grado\000"
 7271      656E5F67 
 7271      7261646F 
 7271      00
 7272              	.LASF30:
 7273 0111 696D7072 		.ascii	"imprimir\000"
 7273      696D6972 
 7273      00
 7274              	.LASF7:
 7275 011a 6C6F6E67 		.ascii	"long long unsigned int\000"
 7275      206C6F6E 
 7275      6720756E 
 7275      7369676E 
 7275      65642069 
 7276              	.LASF118:
 7277 0131 2E5C5072 		.ascii	".\\Protocolo.c\000"
 7277      6F746F63 
 7277      6F6C6F2E 
 7277      6300
 7278              	.LASF91:
 7279 013f 6C61646F 		.ascii	"lado1\000"
 7279      3100
 7280              	.LASF92:
 7281 0145 6C61646F 		.ascii	"lado2\000"
 7281      3200
 7282              	.LASF116:
 7283 014b 6D736E5F 		.ascii	"msn_tventas\000"
 7283      7476656E 
 7283      74617300 
 7284              	.LASF111:
 7285 0157 6D736E5F 		.ascii	"msn_tc\000"
 7285      746300
 7286              	.LASF113:
 7287 015e 6D736E5F 		.ascii	"msn_td\000"
 7287      746400
 7288              	.LASF112:
 7289 0165 6D736E5F 		.ascii	"msn_te\000"
 7289      746500
 7290              	.LASF53:
 7291 016c 53757274 		.ascii	"Surtidor_rxBuffer\000"
 7291      69646F72 
 7291      5F727842 
 7291      75666665 
 7291      7200
 7292              	.LASF29:
 7293 017e 706C6163 		.ascii	"placa\000"
 7293      6100
 7294              	.LASF38:
 7295 0184 7665725F 		.ascii	"ver_pos\000"
 7295      706F7300 
 7296              	.LASF25:
 7297 018c 766F6C75 		.ascii	"volumen\000"
 7297      6D656E00 
 7298              	.LASF42:
 7299 0194 76656E74 		.ascii	"venta\000"
 7299      6100
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 152


 7300              	.LASF94:
 7301 019a 74656C65 		.ascii	"telefono\000"
 7301      666F6E6F 
 7301      00
 7302              	.LASF59:
 7303 01a3 69645F74 		.ascii	"id_teclado1\000"
 7303      65636C61 
 7303      646F3100 
 7304              	.LASF62:
 7305 01af 69645F74 		.ascii	"id_teclado2\000"
 7305      65636C61 
 7305      646F3200 
 7306              	.LASF84:
 7307 01bb 69645F76 		.ascii	"id_venta\000"
 7307      656E7461 
 7307      00
 7308              	.LASF78:
 7309 01c4 636F756E 		.ascii	"count_esperaBBB2\000"
 7309      745F6573 
 7309      70657261 
 7309      42424232 
 7309      00
 7310              	.LASF114:
 7311 01d5 6D736E5F 		.ascii	"msn_lecact\000"
 7311      6C656361 
 7311      637400
 7312              	.LASF105:
 7313 01e0 72665F6D 		.ascii	"rf_mod\000"
 7313      6F6400
 7314              	.LASF121:
 7315 01e7 64657465 		.ascii	"detener\000"
 7315      6E657200 
 7316              	.LASF41:
 7317 01ef 636F6D61 		.ascii	"comand_exten\000"
 7317      6E645F65 
 7317      7874656E 
 7317      00
 7318              	.LASF74:
 7319 01fc 42756666 		.ascii	"Buffer_LCD2\000"
 7319      65725F4C 
 7319      43443200 
 7320              	.LASF15:
 7321 0208 63686172 		.ascii	"char\000"
 7321      00
 7322              	.LASF82:
 7323 020d 626C6F71 		.ascii	"bloqueo_LCD\000"
 7323      75656F5F 
 7323      4C434400 
 7324              	.LASF20:
 7325 0219 6D616E67 		.ascii	"mangueras\000"
 7325      75657261 
 7325      7300
 7326              	.LASF12:
 7327 0223 75696E74 		.ascii	"uint16\000"
 7327      313600
 7328              	.LASF108:
 7329 022a 7072696E 		.ascii	"print1\000"
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 153


 7329      743100
 7330              	.LASF109:
 7331 0231 7072696E 		.ascii	"print2\000"
 7331      743200
 7332              	.LASF31:
 7333 0238 7469706F 		.ascii	"tipo_venta\000"
 7333      5F76656E 
 7333      746100
 7334              	.LASF34:
 7335 0243 7475726E 		.ascii	"turno\000"
 7335      6F00
 7336              	.LASF18:
 7337 0249 746F7461 		.ascii	"totales\000"
 7337      6C657300 
 7338              	.LASF79:
 7339 0251 70617373 		.ascii	"password_lcd\000"
 7339      776F7264 
 7339      5F6C6364 
 7339      00
 7340              	.LASF55:
 7341 025e 636F756E 		.ascii	"count_teclas1\000"
 7341      745F7465 
 7341      636C6173 
 7341      3100
 7342              	.LASF60:
 7343 026c 636F756E 		.ascii	"count_teclas2\000"
 7343      745F7465 
 7343      636C6173 
 7343      3200
 7344              	.LASF63:
 7345 027a 706F7378 		.ascii	"posx1\000"
 7345      3100
 7346              	.LASF66:
 7347 0280 706F7378 		.ascii	"posx2\000"
 7347      3200
 7348              	.LASF6:
 7349 0286 6C6F6E67 		.ascii	"long long int\000"
 7349      206C6F6E 
 7349      6720696E 
 7349      7400
 7350              	.LASF26:
 7351 0294 70726F64 		.ascii	"producto\000"
 7351      7563746F 
 7351      00
 7352              	.LASF49:
 7353 029d 63616D62 		.ascii	"cambiar_precio\000"
 7353      6961725F 
 7353      70726563 
 7353      696F00
 7354              	.LASF32:
 7355 02ac 63656475 		.ascii	"cedula\000"
 7355      6C6100
 7356              	.LASF117:
 7357 02b3 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 7357      4320342E 
 7357      392E3320 
 7357      32303135 
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 154


 7357      30333033 
 7358 02e6 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 7358      20726576 
 7358      6973696F 
 7358      6E203232 
 7358      31323230 
 7359 0319 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 7359      66756E63 
 7359      74696F6E 
 7359      2D736563 
 7359      74696F6E 
 7360              	.LASF110:
 7361 0341 72785F74 		.ascii	"rx_timeout\000"
 7361      696D656F 
 7361      757400
 7362              	.LASF64:
 7363 034c 706F7379 		.ascii	"posy1\000"
 7363      3100
 7364              	.LASF67:
 7365 0352 706F7379 		.ascii	"posy2\000"
 7365      3200
 7366              	.LASF46:
 7367 0358 73697A65 		.ascii	"size\000"
 7367      00
 7368              	.LASF22:
 7369 035d 72656369 		.ascii	"recibo\000"
 7369      626F00
 7370              	.LASF24:
 7371 0364 64696E65 		.ascii	"dinero\000"
 7371      726F00
 7372              	.LASF73:
 7373 036b 42756666 		.ascii	"Buffer_LCD1\000"
 7373      65725F4C 
 7373      43443100 
 7374              	.LASF17:
 7375 0377 65737461 		.ascii	"estado\000"
 7375      646F00
 7376              	.LASF36:
 7377 037e 70617373 		.ascii	"password_local\000"
 7377      776F7264 
 7377      5F6C6F63 
 7377      616C00
 7378              	.LASF86:
 7379 038d 70707578 		.ascii	"ppux10\000"
 7379      313000
 7380              	.LASF93:
 7381 0394 6E6F6D62 		.ascii	"nombre\000"
 7381      726500
 7382              	.LASF107:
 7383 039b 6372635F 		.ascii	"crc_total\000"
 7383      746F7461 
 7383      6C00
 7384              	.LASF52:
 7385 03a5 6E6D616E 		.ascii	"nmangueras\000"
 7385      67756572 
 7385      617300
 7386              	.LASF98:
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 155


 7387 03b0 69645F6C 		.ascii	"id_logo\000"
 7387      6F676F00 
 7388              	.LASF2:
 7389 03b8 73686F72 		.ascii	"short int\000"
 7389      7420696E 
 7389      7400
 7390              	.LASF4:
 7391 03c2 6C6F6E67 		.ascii	"long int\000"
 7391      20696E74 
 7391      00
 7392              	.LASF54:
 7393 03cb 49544D5F 		.ascii	"ITM_RxBuffer\000"
 7393      52784275 
 7393      66666572 
 7393      00
 7394              	.LASF21:
 7395 03d8 73757274 		.ascii	"surtidor\000"
 7395      69646F72 
 7395      00
 7396              	.LASF56:
 7397 03e1 636F6D61 		.ascii	"comas1\000"
 7397      733100
 7398              	.LASF57:
 7399 03e8 636F6D61 		.ascii	"comas2\000"
 7399      733200
 7400              	.LASF47:
 7401 03ef 74656D70 		.ascii	"temp\000"
 7401      00
 7402              	.LASF119:
 7403 03f4 433A5C55 		.ascii	"C:\\Users\\IN-002143\\Documents\\GitHub\\version12\\"
 7403      73657273 
 7403      5C494E2D 
 7403      30303231 
 7403      34335C44 
 7404 0422 4D55582D 		.ascii	"MUX-Autogas\\Prueba_Autogas\\BBB.cydsn\000"
 7404      4175746F 
 7404      6761735C 
 7404      50727565 
 7404      62615F41 
 7405              	.LASF87:
 7406 0447 6E6F6D62 		.ascii	"nombre_pro1\000"
 7406      72655F70 
 7406      726F3100 
 7407              	.LASF89:
 7408 0453 6E6F6D62 		.ascii	"nombre_pro3\000"
 7408      72655F70 
 7408      726F3300 
 7409              	.LASF39:
 7410 045f 65737461 		.ascii	"estado_ex\000"
 7410      646F5F65 
 7410      7800
 7411              	.LASF43:
 7412 0469 70726F67 		.ascii	"programar\000"
 7412      72616D61 
 7412      7200
 7413              	.LASF16:
 7414 0473 73697A65 		.ascii	"sizetype\000"
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 156


 7414      74797065 
 7414      00
 7415              	.LASF5:
 7416 047c 6C6F6E67 		.ascii	"long unsigned int\000"
 7416      20756E73 
 7416      69676E65 
 7416      6420696E 
 7416      7400
 7417              	.LASF10:
 7418 048e 696E7433 		.ascii	"int32_t\000"
 7418      325F7400 
 7419              	.LASF35:
 7420 0496 6175746F 		.ascii	"autorizado\000"
 7420      72697A61 
 7420      646F00
 7421              	.LASF1:
 7422 04a1 756E7369 		.ascii	"unsigned char\000"
 7422      676E6564 
 7422      20636861 
 7422      7200
 7423              	.LASF37:
 7424 04af 6765745F 		.ascii	"get_estado\000"
 7424      65737461 
 7424      646F00
 7425              	.LASF77:
 7426 04ba 636F756E 		.ascii	"count_esperaBBB\000"
 7426      745F6573 
 7426      70657261 
 7426      42424200 
 7427              	.LASF99:
 7428 04ca 66656368 		.ascii	"fecha\000"
 7428      6100
 7429              	.LASF104:
 7430 04d0 6F6B5F64 		.ascii	"ok_datosRF\000"
 7430      61746F73 
 7430      524600
 7431              	.LASF88:
 7432 04db 6E6F6D62 		.ascii	"nombre_pro2\000"
 7432      72655F70 
 7432      726F3200 
 7433              	.LASF0:
 7434 04e7 7369676E 		.ascii	"signed char\000"
 7434      65642063 
 7434      68617200 
 7435              	.LASF44:
 7436 04f3 76616C6F 		.ascii	"valor\000"
 7436      7200
 7437              	.LASF75:
 7438 04f9 636F756E 		.ascii	"count_protector\000"
 7438      745F7072 
 7438      6F746563 
 7438      746F7200 
 7439              	.LASF3:
 7440 0509 73686F72 		.ascii	"short unsigned int\000"
 7440      7420756E 
 7440      7369676E 
 7440      65642069 
ARM GAS  C:\Users\IN-002~1\AppData\Local\Temp\cchaWHVS.s 			page 157


 7440      6E7400
 7441              	.LASF11:
 7442 051c 75696E74 		.ascii	"uint8\000"
 7442      3800
 7443              	.LASF14:
 7444 0522 646F7562 		.ascii	"double\000"
 7444      6C6500
 7445              	.LASF40:
 7446 0529 72785F65 		.ascii	"rx_extend\000"
 7446      7874656E 
 7446      6400
 7447              	.LASF83:
 7448 0533 69645F65 		.ascii	"id_estacion\000"
 7448      73746163 
 7448      696F6E00 
 7449              	.LASF27:
 7450 053f 6D616E67 		.ascii	"manguera\000"
 7450      75657261 
 7450      00
 7451              	.LASF19:
 7452 0548 67726164 		.ascii	"grado\000"
 7452      6F00
 7453              	.LASF120:
 7454 054e 52785F53 		.ascii	"Rx_Surtidor\000"
 7454      75727469 
 7454      646F7200 
 7455              	.LASF65:
 7456 055a 73697A65 		.ascii	"sizeletra1\000"
 7456      6C657472 
 7456      613100
 7457              	.LASF68:
 7458 0565 73697A65 		.ascii	"sizeletra2\000"
 7458      6C657472 
 7458      613200
 7459              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
